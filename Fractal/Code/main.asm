	include "Fractal/Includes/NoteEquates.asm"
	include "Fractal/Includes/SongEquates.asm"
	include "Fractal/Includes/DelayEquates.asm"
	include "Fractal/Includes/ShapeEquates.asm"
	include "Fractal/Includes/DACFilterEquates.asm"
	dc.b "FRACTAL SOUND   ver 0.1 by AURORA*FIELDS"
	even
dFractalInit:
	dc.w 0x33FC,0x0100,0x00A1,0x1100
	dc.w 0x33FC,0x0100,0x00A1,0x1200
	dc.w 0x41F9
	dc.l DualPCM
	dc.w 0x43F9,0x00A0,0x0000
	dc.w 0x0839,0x0000,0x00A1,0x1100
	dc.w 0x66F6
	dc.w 0x4E93
	if SAFE_MODE
	dc.w 0x21FC
	dc.l ddHandleError
	dc.w mErrorRoutine
	endif
	dc.w 0x7002
	dc.w 0x0839,0x0006,0x00A1,0x0001
	dc.w 0x6702
	dc.w 0x7003
	dc.w 0x43F9,0x00A0,0x0000
	dc.w 0x1340,0x0117
	dc.w 0x41FA,0x00C8
	dc.w 0x203C
	dc.l dsStop
	dc.w 0x616C
	dc.w 0x203C
	dc.l deStop
	dc.w 0x6164
	dc.w 0x33FC,0x0000,0x00A1,0x1200
	dc.w 0x727F
	dc.w 0x51C9,0xFFFE
	dc.w 0x33FC,0x0000,0x00A1,0x1100
	dc.w 0x33FC,0x0100,0x00A1,0x1200
	if FEATURE_REDKIDFIX
	dc.w 0x41FA,0x00C6
	dc.w 0x7605
	dc.w 0x1018
	dc.w 0x1218
	dc.w 0x40C2
	dc.w 0x1418
	dc.w 0x46C2
	dc.w 0xC300
	dc.w 0x40C2
	dc.w 0xB218
	dc.w 0x662C
	dc.w 0xB418
	dc.w 0x6628
	dc.w 0x51CB,0xFFE8
	dc.w 0x31FC,0xFFFF
	dc.w 0
	dc.w 0x13FC,0x0000,0x00B0,0x0018
	dc.w 0x13FC,0x0030,0x00B0,0x1054
	dc.w 0x13FC,0x0020,0x00B0,0x1055
	dc.w 0x31FC,0xFFF7
	dc.w 0
	endif
	dc.w 0x4E75
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0xEE88
	dc.w 0xE208
	dc.w 0x4AC0
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0xE048
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x3218
	dc.w 0x1380,0x1000
	dc.w 0x4E75
	dc.w 0x0AC2,0x0A8A
	dc.w 0x0A53,0x0A1D
	dc.w 0x0AC3,0x0A8B
	dc.w 0x0A54,0x0A1E
	dc.w 0x0AC5,0x0A8D
	dc.w 0x0A56,0x0A20
	dc.w 0x0AB4,0x0A7C
	dc.w 0x0A45,0x0A0F
	dc.w 0x0AB5,0x0A7D
	dc.w 0x0A46,0x0A10
	dc.w 0x0AB7,0x0A7F
	dc.w 0x0A48,0x0A12
	if FEATURE_REDKIDFIX
	dc.b 0x4A,0x4A,0x00,0x94,0x08
	dc.b 0x4A,0x4A,0x1F,0x95,0x0A
	dc.b 0x4E,0x4E,0x00,0x9C,0x08
	dc.b 0x4E,0x4E,0x1F,0x9D,0x0A
	dc.b 0xFF,0xFF,0x00,0xFE,0x08
	dc.b 0xFF,0xFF,0x1F,0xFF,0x0A
	even
	endif
dFractalQueue:
	dc.w 0x48E7,0x4080
	if SAFE_MODE
	dc.w 0x7203
	dc.w 0xC240
	dc.w 0x6606
	dc.w 0x0C40
	dc.w snd_Last
	dc.w 0x6320
	dc.w 0x0280,0x0000,0xFFFF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meInvalidQueue)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x41F8
	dc.w mQueue
	dc.w 0x7203
	dc.w 0xB058
	dc.w 0x620A
	dc.w 0x57C9,0xFFFA
	dc.w 0x4CDF,0x0102
	dc.w 0x4E75
	dc.w 0x41F8
	dc.w mQueue+(FEATURE_QUEUE_SIZE*2)-2
	dc.w 0x5341
	dc.w 0x6508
	dc.w 0x3160,0x0002
	dc.w 0x51C9,0xFFFA
	dc.w 0x3080
	dc.w 0x4CDF,0x0102
	dc.w 0x4E75
dFractalSound:
	dc.w 0x08F8
	dc.w mfExec
	dc.w mFlags
	dc.w 0x6632
	dc.w 0x7203
	dc.w 0x41F9,0x00A1,0x1100
	dc.w 0x30BC,0x0100
	dc.w 0x0810,0x0000
	dc.w 0x66FA
	dc.w 0x1039,0x00A0,0x0E62
	dc.w 0x30BC,0x0000
	dc.w 0xB038
	dc.w mLastCue
	dc.w 0x6612
	dc.w 0x701F
	dc.w 0x51C8,0xFFFE
	dc.w 0x51C9,0xFFDE
	dc.w 0x08B8
	dc.w mfExec
	dc.w mFlags
	dc.w 0x4E75
	dc.w 0x2A7C,0x00A0,0x1200
	dc.w 0x11C0
	dc.w mLastCue
	dc.w 0x0800,0x0000
	dc.w 0x6600+(0xFF&((dProcSFX)-*-2))
	dc.w 0xDAFC,0x0700
dProcSFX:
	dc.w 0x0838
	dc.w mfPause
	dc.w mFlags
	dc.w 0x6600+(0xFF&((dCheckQueue)-*-2))
	dc.w 0x42B8
	dc.w mOverwriteTL
	dc.w 0x4238
	dc.w mEnableDAC
	dc.w 0x41FA
	dc.w (dChannelInfoAllSFX)-*
	dc.w 0x4EBA
	dc.w (dProcChannel)-*
	dc.w 0x3038
	dc.w mTempoCur
	dc.w 0xD178
	dc.w mTempoAcc
	dc.w 0x4A38
	dc.w mTempoAcc
	dc.w 0x6700+(0xFF&((dCheckQueue)-*-2))
	dc.w 0x41FA
	dc.w (dChannelInfoFM3)-*
	dc.w 0x0838
	dc.w mfSpecial
	dc.w mFlags
	dc.w 0x670A
	dc.w 0x41FA
	dc.w (dChannelInfoFM3o1)-*
	dc.w 0x11F8
	dc.w mSpecKeysOn
	dc.w mSpecKeysOff
	dc.w 0x4EBA
	dc.w (dProcChannel)-*
	dc.w 0x5338
	dc.w mTempoAcc
	dc.w 0x66E0
dCheckQueue:
	dc.w 0x3E38
	dc.w mQueue
	dc.w 0x6700
	dc.w (dEndDriver)-*
	dc.w 0x41F8
	dc.w mQueue
	dc.w 0x7000+(FEATURE_QUEUE_SIZE-2)
	dc.w 0x30E8,0x0002
	dc.w 0x51C8,0xFFFA
	dc.w 0x4250
	dc.w 0x47FA
	dc.w (dSoundTable)-*
	dc.w 0x2673,0x7000
	dc.w 0x4A13
	dc.w 0x6B00
	dc.w (dPlayCommand)-*
	dc.w 0x6600
	dc.w (dPlaySFX)-*
dPlayMusic:
	if FEATURE_BACKUP
	dc.w 0x082B
	dc.w stfBackup
	dc.w stFlags
	dc.w 0x671E
	dc.w 0x0838
	dc.w mfBackup
	dc.w mFlags
	dc.w 0x6616
	dc.w 0x41F8
	dc.w mBackupStart
	dc.w 0x43F8
	dc.w mBackupData
	dc.w 0x303C
	dc.w mBackupEnd-mBackupStart-4
	dc.w 0xE448
	dc.w 0x22D8
	dc.w 0x51C8,0xFFFC
	dc.w 0x32D8
	endif
	dc.w 0x4853
	dc.w 0x4EBA
	dc.w (dPlayCmd_StopMus)-*
	dc.w 0x265F
	dc.w 0x21CB
	dc.w mSongTable
	dc.w 0x31EB
	dc.w stTempo
	dc.w mTempoSong
	dc.w 0x0839,0x0006,0x00A1,0x0001
	dc.w 0x6706
	dc.w 0x31EB
	dc.w stTempoPAL
	dc.w mTempoSong
	dc.w 0x4EBA
	dc.w (dUpdateTempo)-*
	dc.w 0x31C0
	dc.w mTempoAcc
	dc.w 0x7000
	dc.w 0x11C0
	dc.w mPanning+0x0
	dc.w 0x11C0
	dc.w mPanning+0x1
	dc.w 0x11C0
	dc.w mPanning+0x2
	dc.w 0x11C0
	dc.w mPanning+0x3
	dc.w 0x11C0
	dc.w mPanning+0x4
	dc.w 0x11C0
	dc.w mPanning+0x5
	dc.w 0x11C0
	dc.w mPanning+0x6
	dc.w 0x7A00+(1<<stfNoUW+1<<stfNoMasterFreq+1<<stfNoMasterVol)
	dc.w 0xCA2B
	dc.w stFlags
	dc.w 0x7000+(1<<mfExec+1<<mfUnderwater+1<<mfPause)
	dc.w 0xC038
	dc.w mFlags
	dc.w 0x7200+(1<<stfFM3+1<<stfBackup)
	dc.w 0xC22B
	dc.w stFlags
	dc.w 0x8001
	dc.w 0x11C0
	dc.w mFlags
	dc.w 0x0800
	dc.w mfUnderwater
	dc.w 0x670A
	dc.w 0x0805
	dc.w cfBlockUW
	dc.w 0x6604
	dc.w 0x08C5
	dc.w cfUnderwater
	dc.w 0x4238
	dc.w mModeFM3
	dc.w 0x0800
	dc.w stfFM3
	dc.w 0x6706
	dc.w 0x11FC,0x0040
	dc.w mModeFM3
	dc.w 0x41F9,0x00A1,0x1100
	dc.w 0x30BC,0x0100
	dc.w 0x0810,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AFC,0x0000
	dc.w 0x1AFC,0x0022
	dc.w 0x30BC,0x0000
	dc.w 0x47EB
	dc.w stChannels
	dc.w 0x49FA
	dc.w (dMusicChanLists)-*
	dc.w 0x7000
dPlayMusic_NextCh:
	dc.w 0x1013
	dc.w 0x6A32
	dc.w 0x11FC
	dc.w 0xF0+ctFM3
	dc.w mSpecMask
	dc.w 0x4238
	dc.w mSpecKeysOn
	dc.w 0x4238
	dc.w mSpecKeysOff
	dc.w 0x1238
	dc.w mModeFM3
	dc.w 0x6716
	dc.w 0x4A38
	dc.w mTA+cTrackFlags
	dc.w 0x6B08
	dc.w 0x4EBA
	dc.w (dDisableCSM)-*
	dc.w 0x6000
	dc.w (dEndDriver)-*
	dc.w 0x4EBA
	dc.w (dEnableCSM)-*
	dc.w 0x6000
	dc.w (dEndDriver)-*
	dc.w 0x4EBA
	dc.w (dCommand_UpdateCSM)-*
	dc.w 0x6000
	dc.w (dEndDriver)-*
	if SAFE_MODE
	dc.w 0x7203
	dc.w 0xC200
	dc.w 0x660C
	dc.w 0x0C00
	dc.w cltEnd
	dc.w 0x6206
	dc.w 0x4AB4,0x0000
	dc.w 0x6620
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meChannelInvalid)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x2074,0x0000
	dc.w 0x3250
	dc.w 0x229B
	dc.w 0x1345
	dc.w cModeFlags
	dc.w 0x12BC,0x0081
	dc.w 0x137C
	dc.w cStack
	dc.w cCallStack
	dc.w 0x1368
	dc.w ciFirstDelay
	dc.w cDelay
	dc.w 0x1368
	dc.w ciTranspose
	dc.w cFrac
	dc.w 0x137C,0x00F0
	dc.w cOpMask
	dc.w 0x4229
	dc.w cLFO
	dc.w 0x4229
	dc.w cLastDelay
	dc.w 0x4229
	dc.w cVoice
	dc.w 0x4229
	dc.w cVolume
	dc.w 0x4229
	dc.w cQuot
	dc.w 0x337C,0x0200
	dc.w cNote
	dc.w 0x3228
	dc.w ciFreqData
	dc.w 0x670A
	dc.w 0x3441
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x425A
	dc.w 0x3228
	dc.w ciVolData
	dc.w 0x6708
	dc.w 0x3441
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x425A
	dc.w 0x6000
	dc.w (dPlayMusic_NextCh)-*
dMusicChanLists:
	dc.l dChannelInfoFM1,dChannelInfoFM2
	dc.l dChannelInfoFM4,dChannelInfoFM5,dChannelInfoFM6
	dc.l dChannelInfoFM3o1
	dc.l dChannelInfoFM3o2,dChannelInfoFM3o3,dChannelInfoFM3o4
	dc.l dChannelInfoTA
	dc.l dChannelInfoDAC1,dChannelInfoDAC2
	dc.l dChannelInfoPSG1,dChannelInfoPSG2,dChannelInfoPSG3
	dc.l dChannelInfoPSG4
	dc.l 0,0
dSFXChanLists:
	dc.l dChannelInfoSFXFM1,dChannelInfoSFXFM2
	dc.l dChannelInfoSFXFM4,dChannelInfoSFXFM5,0
	dc.l 0
	dc.l 0,0,0
	dc.l 0
	dc.l 0,dChannelInfoSFXDAC2
	dc.l dChannelInfoSFXPSG1,dChannelInfoSFXPSG2,dChannelInfoSFXPSG3
	dc.l dChannelInfoSFXPSG4
dPlaySFX:
	dc.w 0x49FA
	dc.w (dSFXChanLists)-*
	dc.w 0x082B
	dc.w stfCont
	dc.w stFlags
	dc.w 0x6700+(0xFF&((dPlaySFX_NotCont)-*-2))
	dc.w 0x45EB
	dc.w stChanSFX
	dc.w 0x7000
	dc.w 0x7C00
dPlaySFX_Next2:
	dc.w 0x1012
	dc.w 0x6B00+(0xFF&((dPlaySFX_CheckSFX)-*-2))
	if SAFE_MODE
	dc.w 0x7203
	dc.w 0xC200
	dc.w 0x660C
	dc.w 0x0C00
	dc.w cltEnd
	dc.w 0x6206
	dc.w 0x4AB4,0x0000
	dc.w 0x6620
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meChannelInvalid)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x588A
	dc.w 0x2074,0x0000
	dc.w 0x3250
	dc.w 0x3229
	dc.w cSoundID
	dc.w 0x0241,0xFFFE
	dc.w 0xBE41
	dc.w 0x6600+(0xFF&((dPlaySFX_Next2)-*-2))
	dc.w 0x5206
	dc.w 0x08E9
	dc.w cfCont
	dc.w cModeFlags
	dc.w 0x6000+(0xFF&((dPlaySFX_Next2)-*-2))
dPlaySFX_CheckSFX:
	dc.w 0x4A06
	dc.w 0x6600
	dc.w (dEndDriver)-*
dPlaySFX_NotCont:
	dc.w 0x7A00+(1<<stfNoUW+1<<stfNoMasterFreq+1<<stfNoMasterVol)
	dc.w 0xCA2B
	dc.w stFlags
	dc.w 0x0838
	dc.w mfUnderwater
	dc.w mFlags
	dc.w 0x670A
	dc.w 0x0805
	dc.w cfBlockUW
	dc.w 0x6604
	dc.w 0x08C5
	dc.w cfUnderwater
	dc.w 0x280B
	dc.w 0x1C2B
	dc.w stPriority
	dc.w 0x47EB
	dc.w stChanSFX
	dc.w 0x7000
dPlaySFX_Next1:
	dc.w 0x1013
	dc.w 0x6B00
	dc.w (dEndDriver)-*
	if SAFE_MODE
	dc.w 0x7203
	dc.w 0xC200
	dc.w 0x660C
	dc.w 0x0C00
	dc.w cltEnd
	dc.w 0x6206
	dc.w 0x4AB4,0x0000
	dc.w 0x6620
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meChannelInvalid)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x2074,0x0000
	dc.w 0x3250
	dc.w 0xBC29
	dc.w cPriority
	dc.w 0x6404
	dc.w 0x588B
	dc.w 0x6000+(0xFF&((dPlaySFX_Next1)-*-2))
	dc.w 0x229B
	dc.w 0x1345
	dc.w cModeFlags
	dc.w 0x12BC,0x0081
	dc.w 0x137C
	dc.w cStack
	dc.w cCallStack
	dc.w 0x1368
	dc.w ciFirstDelay
	dc.w cDelay
	dc.w 0x1368
	dc.w ciTranspose
	dc.w cFrac
	dc.w 0x137C,0x00F0
	dc.w cOpMask
	dc.w 0x4229
	dc.w cLFO
	dc.w 0x4229
	dc.w cLastDelay
	dc.w 0x4229
	dc.w cVoice
	dc.w 0x4229
	dc.w cVolume
	dc.w 0x4229
	dc.w cQuot
	dc.w 0x337C,0x0200
	dc.w cNote
	dc.w 0x3228
	dc.w ciFreqData
	dc.w 0x670A
	dc.w 0x3441
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x425A
	dc.w 0x3228
	dc.w ciVolData
	dc.w 0x6708
	dc.w 0x3441
	dc.w 0x429A
	dc.w 0x429A
	dc.w 0x425A
	dc.w 0x2344
	dc.w cSongTable
	dc.w 0x1346
	dc.w cPriority
	dc.w 0x3347
	dc.w cSoundID
	dc.w 0x3468
	dc.w ciPanning
	dc.w 0x14BC,0x0000
	dc.w 0x4A68
	dc.w ciMute+2
	dc.w 0x6700
	dc.w (dPlaySFX_Next1)-*
	dc.w 0x48E7,0x0818
	dc.w 0x48A7,0x0700
	dc.w 0x2468
	dc.w ciMute
	dc.w 0x4E92
	dc.w 0x4C9F,0x00E0
	dc.w 0x4CDF,0x1810
	dc.w 0x6000
	dc.w (dPlaySFX_Next1)-*
dPlayCommand:
	dc.w 0x2653
	dc.w 0x4E93
dEndDriver:
	dc.w 0x41F9,0x00A1,0x1100
	dc.w 0x30BC,0x0100
	dc.w 0x0810,0x0000
	dc.w 0x66FA
	dc.w 0x50D5
	dc.w 0x30BC,0x0000
	dc.w 0x08B8
	dc.w mfExec
	dc.w mFlags
dPlayCmd_Null:
	dc.w 0x4E75
dNextChannel:
	dc.w 0x4A68
	dc.w ciExtraRout+2
	dc.w 0x6706
	dc.w 0x2668
	dc.w ciExtraRout
	dc.w 0x4E93
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6600+(0xFF&((dNotNullChan)-*-2))
	dc.w 0x4E75
dNotNullChan:
	dc.w 0xD0C0
dProcChannel:
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A00+(0xFF&((dNextChannel)-*-2))
	dc.w 0x487A
	dc.w (dNextChannel)-*
	dc.w 0x5329
	dc.w cDelay
	dc.w 0x6600
	dc.w (dDoFreq)-*
	dc.w 0x2451
	if SAFE_MODE
	dc.w 0x200A
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x0C80
	dc.l dSoundData
	dc.w 0x6508
	dc.w 0x0C80
	dc.l dSoundData_End
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meTrackFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x0C00
	dc.w com_First
	dc.w 0x650C
	dc.w 0x4EBA
	dc.w (dCommand)-*
	dc.w 0x60F0
	dc.w 0x4E75
	dc.w 0x588F
	dc.w 0x4E75
	dc.w 0x7C00
	dc.w 0x4A00
	dc.w 0x6B4C
	dc.w 0x6722
	dc.w 0x0891
	dc.w cfCut
	dc.w 0x6706
	dc.w 0x2668
	dc.w ciUnmute
	dc.w 0x4E93
	dc.w 0x5100+((nFirstNote)<<9)
	dc.w 0x6A22
	dc.w 0x5200
	dc.w 0x6706
	dc.w 0x08D1
	dc.w cfRest
	dc.w 0x6028
	dc.w 0x7C01
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x6020
	dc.w 0x08D1
	dc.w cfRest
	dc.w 0x08D1
	dc.w cfCut
	dc.w 0x6616
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x6010
	dc.w 0x0891
	dc.w cfRest
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x1340
	dc.w cNote
	dc.w 0x4229
	dc.w cNote+1
	dc.w 0x0C12,0x00D0
	dc.w 0x6E00+(0xFF&((dFinishTrack)-*-2))
	dc.w 0x101A
	dc.w 0x0200,0x007F
	dc.w 0x6700+(0xFF&((dProcChannel_Extd)-*-2))
	if SAFE_MODE
	dc.w 0x0C00
	dc.w lLast&0x7F
	dc.w 0x6320
	dc.w 0x7000
	dc.w 0x102A,0xFFFF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidDelay)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x47FA
	dc.w (dDelayTable)-*
	dc.w 0x1373
	dc.w 0x0000+(0xFF&(-(lFirst&0x7F)))
	dc.w cLastDelay
	dc.w 0x6000+(0xFF&((dFinishTrack)-*-2))
dProcChannel_Extd:
	dc.w 0x135A
	dc.w cLastDelay
dFinishTrack:
	dc.w 0x0811
	dc.w cfTie
	dc.w 0x6600,0x00A0
	dc.w 0x2668
	dc.w ciKeyOff
	dc.w 0x4E93
	dc.w 0x0811
	dc.w cfRest
	dc.w 0x6600,0x0092
	dc.w 0x4A06
	dc.w 0x6E00,0x0088
	dc.w 0x3228
	dc.w ciFreqData
	dc.w 0x6744
	dc.w 0x3841
	dc.w 0x426C
	dc.w cdEnvPos
	dc.w 0x422C
	dc.w cdEnvDelay
	dc.w 0x422C
	dc.w cdEnvLastDelay
	dc.w 0x08D4
	dc.w cdfDelay
	dc.w 0x7200
	dc.w 0x122C
	dc.w cdVibId
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x266B
	dc.w stVibrato
	dc.w 0xE749
	dc.w 0xD6C1
	dc.w 0x196B
	dc.w vtDelay
	dc.w cdVibDelay
	dc.w 0x196B
	dc.w vtStep
	dc.w cdVibPos
	dc.w 0x422C
	dc.w cdVibPos+1
	dc.w 0x0894
	dc.w cdfPorta
	dc.w 0x4A6C
	dc.w cPortaDisp
	dc.w 0x6704
	dc.w 0x08D4
	dc.w cdfPorta
	dc.w 0x3228
	dc.w ciVolData
	dc.w 0x6736
	dc.w 0x3841
	dc.w 0x426C
	dc.w cdEnvPos
	dc.w 0x422C
	dc.w cdEnvDelay
	dc.w 0x422C
	dc.w cdEnvLastDelay
	dc.w 0x08D4
	dc.w cdfDelay
	dc.w 0x7200
	dc.w 0x122C
	dc.w cdVibId
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x266B
	dc.w stVibrato
	dc.w 0xE749
	dc.w 0xD6C1
	dc.w 0x196B
	dc.w vtDelay
	dc.w cdVibDelay
	dc.w 0x196B
	dc.w vtStep
	dc.w cdVibPos
	dc.w 0x422C
	dc.w cdVibPos+1
	dc.w 0x2F28
	dc.w ciKeyOn
	if SAFE_MODE
	dc.w 0x220A
	dc.w 0x0281,0x00FF,0xFFFF
	dc.w 0x0C81
	dc.l dSoundData
	dc.w 0x6508
	dc.w 0x0C81
	dc.l dSoundData_End
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meTrackFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x70F7
	dc.w 0xC011
	dc.w 0x228A
	dc.w 0x1280
	dc.w 0x1369
	dc.w cLastDelay
	dc.w cDelay
dDoFreq:
	dc.w 0x0811
	dc.w cfCut
	dc.w 0x6708
	dc.w 0x2668
	dc.w ciMute
	dc.w 0x6000
	dc.w (dDoVolume_CheckFlag)-*
	dc.w 0x4A68
	dc.w ciSendFreq+2
	dc.w 0x6700
	dc.w (dDoVolume)-*
	dc.w 0x3029
	dc.w cNote
	dc.w 0x3228
	dc.w ciFreqData
	dc.w 0x6700,0x0044
	dc.w 0x3441
	dc.w 0x0812
	dc.w cdfPorta
	dc.w 0x6730
	dc.w 0xB06A
	dc.w cPortaTarget
	dc.w 0x671A
	dc.w 0x5DC4
	dc.w 0xD06A
	dc.w cPortaDisp
	dc.w 0x6808
	dc.w 0x5BC0
	dc.w 0x4880
	dc.w 0x0A40,0x8000
	dc.w 0xB06A
	dc.w cPortaTarget
	dc.w 0x5FC5
	dc.w 0xBA04
	dc.w 0x6708
	dc.w 0x0892
	dc.w cdfPorta
	dc.w 0x302A
	dc.w cPortaTarget
	dc.w 0x3340
	dc.w cNote
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x7C00+(cfFreq)
	dc.w 0x4EBA
	dc.w (dUpdateEffects)-*
	dc.w 0xD069
	dc.w cFrac
	dc.w 0x0891
	dc.w cfFreq
	dc.w 0x6700+(0xFF&((dDoVolume)-*-2))
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipFrac
	endif
	dc.w 0x2668
	dc.w ciSendFreq
	dc.w 0x4E93
dDoVolume:
	dc.w 0x4A68
	dc.w ciSendVolume+2
	dc.w 0x6700+(0xFF&((dDoVolume_Rts)-*-2))
	dc.w 0x1029
	dc.w cVolume
	dc.w 0x4880
	dc.w 0x3228
	dc.w ciVolData
	dc.w 0x6708
	dc.w 0x3441
	dc.w 0x7C00+(cfVolume)
	dc.w 0x4EBA
	dc.w (dUpdateEffects)-*
	dc.w 0x2668
	dc.w ciSendVolume
	dc.w 0x0829
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x6700+(0xFF&((dDoVolume_CheckFlag)-*-2))
	dc.w 0x303C,0x4000
dDoVolume_CheckFlag:
	dc.w 0x0891
	dc.w cfVolume
	dc.w 0x6700+(0xFF&((dDoVolume_Rts)-*-2))
	dc.w 0x4ED3
dDoVolume_Rts:
	dc.w 0x4E75
dUpdateEffects:
	dc.w 0x4A12
	dc.w 0x6A00+(0xFF&((dUpdateEffects_Envelope)-*-2))
	dc.w 0x4A2A
	dc.w cdVibDelay
	dc.w 0x6706
	dc.w 0x532A
	dc.w cdVibDelay
	dc.w 0x6000+(0xFF&((dUpdateEffects_Envelope)-*-2))
	dc.w 0x0DD1
	dc.w 0x7200
	dc.w 0x122A
	dc.w cdVibId
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x266B
	dc.w stVibrato
	dc.w 0xE749
	dc.w 0xD6C1
	dc.w 0x321B
	dc.w 0xD36A
	dc.w cdVibPos
	dc.w 0x321B
	dc.w 0x122A
	dc.w cdVibPos
	if SAFE_MODE
	dc.w 0x0C41
	dc.w 0x00FF+(vsLast<<8)
	dc.w 0x6322
	dc.w 0x0281,0x0000,0xFFFF
	dc.w 0xE049
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVibratoShape)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x49FA
	dc.w (dVibLUTs)-*
	dc.w 0xD241
	dc.w 0xD8C1
	dc.w 0x3214
	dc.w 0xC3DB
	dc.w 0x4841
	dc.w 0xD041
dUpdateEffects_Envelope:
	dc.w 0x7200
	dc.w 0x122A
	dc.w cdEnvId
	dc.w 0x6700+(0xFF&((dUpdEnv_Rts)-*-2))
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x266B
	dc.w stEnvelope
	dc.w 0xD241
	dc.w 0x2673,0x10FC
dUpdateEnvelope:
	dc.w 0x0892
	dc.w cdfDelay
	dc.w 0x6702
	dc.w 0x0DD1
	dc.w 0x7600
	dc.w 0x7400
	dc.w 0x322A
	dc.w cdEnvPos
	dc.w 0x6100+(0xFF&((dUpdEnv_GetValue)-*-2))
	dc.w 0x4A83
	dc.w 0x6B0E
	dc.w 0x532A
	dc.w cdEnvDelay
	dc.w 0x6410
	dc.w 0x156A
	dc.w cdEnvLastDelay
	dc.w cdEnvDelay
	dc.w 0x3601
	dc.w 0x3543
	dc.w cdEnvPos
	dc.w 0x08D2
	dc.w cdfDelay
	dc.w 0xD042
dUpdEnv_Rts:
	dc.w 0x4E75
dEnvCmd_Delay:
	dc.w 0x5241
	dc.w 0x1633,0x10FF
	dc.w 0x1543
	dc.w cdEnvLastDelay
	dc.w 0x670C
	dc.w 0x5303
	dc.w 0x1543
	dc.w cdEnvDelay
	dc.w 0x76FF
	dc.w 0x3601
	dc.w 0x6000+(0xFF&((dUpdEnv_GetValue)-*-2))
	dc.w 0x422A
	dc.w cdEnvDelay
dUpdEnv_GetValue:
	dc.w 0x5241
	dc.w 0x1433,0x10FF
	dc.w 0x6B06
	dc.w 0x0442
	dc.w evShortByte_Offs
	dc.w 0x4E75
	dc.w 0x0C02
	dc.w evShortNote_First
	dc.w 0x6508
	dc.w 0x0442
	dc.w evShortBNote_Offs
	dc.w 0xE142
	dc.w 0x4E75
	dc.w 0x4EFB,0x2082
dUpdEnv_Table:
	dc.w 0x6000+(0xFF&((dEnvCmd_ReadFull)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_ReadUpper)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_ReadLower)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_Delay)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_Hold)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_Mute)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_Exit)-*-2))
	dc.w 0x6000+(0xFF&((dEnvCmd_Jump)-*-2))
dEnvCmd_Hold:
	dc.w 0x50EA
	dc.w cdEnvDelay
	dc.w 0x588F
	dc.w 0x5341
	dc.w 0x3541
	dc.w cdEnvPos
	dc.w 0x5241
	dc.w 0x6100+(0xFF&((dUpdEnv_GetValue)-*-2))
	dc.w 0xD042
	dc.w 0x0DD1
	dc.w 0x4E75
dEnvCmd_Jump:
	dc.w 0x1EB3,0x1000
	dc.w 0x3417
	dc.w 0x1433,0x1001
	dc.w 0xD242
	dc.w 0x7400
	dc.w 0x3601
	dc.w 0x6000+(0xFF&((dUpdEnv_GetValue)-*-2))
dEnvCmd_Mute:
	dc.w 0x3F01
	dc.w 0x2F0B
	dc.w 0x2868
	dc.w ciMute
	dc.w 0x4E94
	dc.w 0x265F
	dc.w 0x321F
	dc.w 0x7400
	dc.w 0x7600
	dc.w 0x6000+(0xFF&((dUpdEnv_GetValue)-*-2))
dEnvCmd_Exit:
	dc.w 0x5341
	dc.w 0x3541
	dc.w cdEnvPos
	dc.w 0x50EA
	dc.w cdEnvDelay
	dc.w 0x0891
	dc.w cfVolume
	dc.w 0x588F
	dc.w 0x4E75
dEnvCmd_ReadFull:
	dc.w 0x1433,0x1000
	dc.w 0xE14A
	dc.w 0x1433,0x1001
	dc.w 0x5441
	dc.w 0x4E75
dEnvCmd_ReadUpper:
	dc.w 0x1433,0x1000
	dc.w 0x4882
	dc.w 0xE142
	dc.w 0x5241
	dc.w 0x4E75
dEnvCmd_ReadLower:
	dc.w 0x5241
	dc.w 0x1433,0x10FF
	dc.w 0x4882
	dc.w 0x6A06
	dc.w 0x0442,0x003F
	dc.w 0x4E75
	dc.w 0x0642,0x0040
	dc.w 0x4E75
dCommand:
	if SAFE_MODE
	dc.w 0x1200
	dc.w 0x0401
	dc.w com_First
	dc.w 0x0C01
	dc.w com_Last-com_First
	dc.w 0x6320
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidCommand)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0xD000
	dc.w 0xD000
	dc.w 0x4EFB
	dc.w 0x0000+(0xFF&((dCommandTable-((com_First&0x3F)*4))-*))
dCommandTable:
	dc.w 0x4EFA
	dc.w (dCommand_Frac)-*
	dc.w 0x4EFA
	dc.w (dCommand_Vol)-*
	dc.w 0x4EFA
	dc.w (dCommand_Tempo)-*
	dc.w 0x4EFA
	dc.w (dCommand_VolEnv)-*
	dc.w 0x4EFA
	dc.w (dCommand_FreqEnv)-*
	dc.w 0x4EFA
	dc.w (dCommand_VolVibSet)-*
	dc.w 0x4EFA
	dc.w (dCommand_VolVibOn)-*
	dc.w 0x4EFA
	dc.w (dCommand_VolVibOff)-*
	dc.w 0x4EFA
	dc.w (dCommand_FreqVibSet)-*
	dc.w 0x4EFA
	dc.w (dCommand_FreqVibOn)-*
	dc.w 0x4EFA
	dc.w (dCommand_FreqVibOff)-*
	dc.w 0x4EFA
	dc.w (dCommand_PortaSpeed)-*
	dc.w 0x4EFA
	dc.w (dCommand_PortaTarget)-*
	dc.w 0x4EFA
	dc.w (dCommand_FastCut)-*
	dc.w 0x4EFA
	dc.w (dCommand_LFO)-*
	dc.w 0x4EFA
	dc.w (dCommand_Pan)-*
	dc.w 0x4EFA
	dc.w (dCommand_AMSFMS)-*
	dc.w 0x4EFA
	dc.w (dCommand_OpMask)-*
	dc.w 0x4EFA
	dc.w (dCommand_YMW)-*
	dc.w 0x4EFA
	dc.w (dCommand_SetTLA)-*
	dc.w 0x4EFA
	dc.w (dCommand_SetTLB)-*
	dc.w 0x4EFA
	dc.w (dCommand_Queue)-*
	dc.w 0x4EFA
	dc.w (dCommand_Tie)-*
	dc.w 0x4EFA
	dc.w (dCommand_Voice)-*
	dc.w 0x4EFA
	dc.w (dCommand_Backup)-*
	dc.w 0x4EFA
	dc.w (dCommand_Stop)-*
	dc.w 0x4EFA
	dc.w (dCommand_Ret)-*
	dc.w 0x4EFA
	dc.w (dCommand_Jump)-*
	dc.w 0x4EFA
	dc.w (dCommand_Call)-*
	dc.w 0x4EFA
	dc.w (dCommand_Cont)-*
	dc.w 0x4EFA
	dc.w (dCommand_CondJump)-*
	dc.w 0x4EFA
	dc.w (dCommand_BitJump)-*
	dc.w 0x4EFA
	dc.w (dCommand_CommSet)-*
	dc.w 0x4EFA
	dc.w (dCommand_CommAdd)-*
	dc.w 0x4EFA
	dc.w (dCommand_Flags)-*
	dc.w 0x4EFA
	dc.w (dCommand_SpinRev)-*
	dc.w 0x4EFA
	dc.w (dCommand_SpinReset)-*
dCommand_Queue:
	dc.w 0x1E9A
	dc.w 0x3017
	dc.w 0x101A
	dc.w 0x4EFA
	dc.w (dFractalQueue)-*
dCommand_Frac:
	dc.w 0x1E9A
	dc.w 0x3017
	dc.w 0x101A
	dc.w 0xD169
	dc.w cFrac
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x4E75
dCommand_Vol:
	dc.w 0x101A
	dc.w 0xD129
	dc.w cVolume
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x4E75
dCommand_Tempo:
	dc.w 0x7000
	dc.w 0x0839,0x0006,0x00A1,0x0001
	dc.w 0x6702
	dc.w 0x7002
	dc.w 0x11F2,0x0000
	dc.w mTempoSong
	dc.w 0x11F2,0x0001
	dc.w mTempoSong+1
	dc.w 0x588A
	dc.w 0x4EFA
	dc.w (dUpdateTempo)-*
dCommand_VolEnv:
	dc.w 0x3668
	dc.w ciVolData
	dc.w 0x175A
	dc.w cdEnvId
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x426B
	dc.w cdEnvPos
	dc.w 0x422B
	dc.w cdEnvDelay
	dc.w 0x422B
	dc.w cdEnvLastDelay
	dc.w 0x08D3
	dc.w cdfDelay
	dc.w 0x4E75
dCommand_FreqEnv:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x175A
	dc.w cdEnvId
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x426B
	dc.w cdEnvPos
	dc.w 0x422B
	dc.w cdEnvDelay
	dc.w 0x422B
	dc.w cdEnvLastDelay
	dc.w 0x08D3
	dc.w cdfDelay
	dc.w 0x4E75
dCommand_VolVibSet:
	dc.w 0x3668
	dc.w ciVolData
	dc.w 0x175A
	dc.w cdVibId
	dc.w 0x08D3
	dc.w cdfVibrato
	dc.w 0x4E75
dCommand_FreqVibSet:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x175A
	dc.w cdVibId
	dc.w 0x08D3
	dc.w cdfVibrato
	dc.w 0x4E75
dCommand_VolVibOn:
	dc.w 0x3668
	dc.w ciVolData
	dc.w 0x08D3
	dc.w cdfVibrato
	dc.w 0x4E75
dCommand_FreqVibOn:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x08D3
	dc.w cdfVibrato
	dc.w 0x4E75
dCommand_VolVibOff:
	dc.w 0x3668
	dc.w ciVolData
	dc.w 0x0893
	dc.w cdfVibrato
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x4E75
dCommand_FreqVibOff:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x0893
	dc.w cdfVibrato
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x4E75
dCommand_PortaSpeed:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x175A
	dc.w cPortaDisp
	dc.w 0x175A
	dc.w cPortaDisp+1
	dc.w 0x08D3
	dc.w cdfPorta
	dc.w 0x4A6B
	dc.w cPortaDisp
	dc.w 0x6604
	dc.w 0x0893
	dc.w cdfPorta
	dc.w 0x4E75
dCommand_PortaTarget:
	dc.w 0x3668
	dc.w ciFreqData
	dc.w 0x175A
	dc.w cPortaTarget
	dc.w 0x175A
	dc.w cPortaTarget+1
	dc.w 0x4A6B
	dc.w cPortaDisp
	dc.w 0x6704
	dc.w 0x08D3
	dc.w cdfPorta
	dc.w 0x4E75
dCommand_FastCut:
	if SAFE_MODE
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0x0C00
	dc.w ctFM6
	dc.w 0x6326
	dc.w 0x0800
	dc.w ctbFM3sm
	dc.w 0x6706
	dc.w 0x0C00
	dc.w ctFM3op4
	dc.w 0x631A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meFastCut)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0xB2FC
	dc.w mBackupStart
	dc.w 0x6F10
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x670A
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A02
	dc.w 0x4E75
	dc.w 0x1028
	dc.w ciPart
	dc.w 0x1228
	dc.w ciUnmuteReg
	dc.w 0x740F
	dc.w 0x1628
	dc.w ciVolumeReg
	dc.w 0x787F
	dc.w 0x7A0C
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x1AC0
	dc.w 0x1AC4
	dc.w 0x1AC3
	dc.w 0x5803
	dc.w 0x1AC0
	dc.w 0x1AC4
	dc.w 0x1AC3
	dc.w 0x5803
	dc.w 0x1AC0
	dc.w 0x1AC4
	dc.w 0x1AC3
	dc.w 0x5803
	dc.w 0x1AC0
	dc.w 0x1AC4
	dc.w 0x1AC3
	dc.w 0x1AC0
	dc.w 0x1AE8
	dc.w ciType
	dc.w 0x1AFC,0x0022
	dc.w 0x9205
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x9205
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x9205
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x9205
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x9205
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x5801
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x36BC,0x0000
	dc.w 0x4EFA
	dc.w (dUnmuteFMSFX)-*
dCommand_LFO:
	if SAFE_MODE
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0xB2FC
	dc.w mBackupStart
	dc.w 0x6D12
	dc.w 0x0C00
	dc.w ctFM6
	dc.w 0x6326
	dc.w 0x0800
	dc.w ctbFM3sm
	dc.w 0x6706
	dc.w 0x0C00
	dc.w ctFM3op4
	dc.w 0x631A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meLFO)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x141A
	dc.w 0x11C2
	dc.w mRegLFO
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AC2
	dc.w 0x1AFC,0x0022
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dCommand_Pan:
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x101A
	dc.w 0x1680
	dc.w 0x2668
	dc.w ciLoadPan
	dc.w 0x4ED3
dCommand_AMSFMS:
	if SAFE_MODE
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0x0C00
	dc.w ctFM6
	dc.w 0x6326
	dc.w 0x0800
	dc.w ctbFM3sm
	dc.w 0x6706
	dc.w 0x0C00
	dc.w ctFM3op4
	dc.w 0x631A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meAMSFMS)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x135A
	dc.w cLFO
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
	dc.w 0x2668
	dc.w ciLoadPan
	dc.w 0x4ED3
dCommand_OpMask:
	dc.w 0x0828
	dc.w ctbFM3sm
	dc.w ciType
	dc.w 0x660A
	dc.w 0x7000+(ctFM3)
	dc.w 0x801A
	dc.w 0x11C0
	dc.w mSpecMask
	dc.w 0x4E75
	if SAFE_MODE
	dc.w 0x0C28
	dc.w ctFM6
	dc.w ciType
	dc.w 0x6320
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meOpMask)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x135A
	dc.w cOpMask
	dc.w 0x4E75
dCommand_SetTLA:
	dc.w 0x7201
	dc.w 0x6000+(0xFF&((dCommand_SetTLAB)-*-2))
dCommand_SetTLB:
	dc.w 0x7203
dCommand_SetTLAB:
	if SAFE_MODE
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0x0C00
	dc.w ctFM6
	dc.w 0x6326
	dc.w 0x0800
	dc.w ctbFM3sm
	dc.w 0x6706
	dc.w 0x0C00
	dc.w ctFM3op4
	dc.w 0x631A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meTLAB)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x101A
	dc.w 0x4AC0
	dc.w 0x6B04
	dc.w 0x0201,0x0002
	dc.w 0x47F8
	dc.w mOverwriteTL
	dc.w 0x1780,0x1000
	dc.w 0x4E75
dCommand_YMW:
	dc.w 0x101A
	dc.w 0x121A
	dc.w 0xB2FC
	dc.w mBackupStart
	dc.w 0x6F2C
	dc.w 0x2428
	dc.w ciMirror
	dc.w 0x6726
	dc.w 0x2642
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A1E
	dc.w 0x4E75
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	dc.w 0x421D
	dc.w 0x1AC1
	dc.w 0x1AC0
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x0C00,0x0030
	dc.w 0x65B4
	dc.w 0x1400
	dc.w 0x0402,0x00A8
	dc.w 0x0C02,0x0008
	dc.w 0x65A8
	if SAFE_MODE
	dc.w 0x7600
	dc.w 0x1628
	dc.w ciType
	dc.w 0x0C03
	dc.w ctFM6
	dc.w 0x6326
	dc.w 0x0803
	dc.w ctbFM3sm
	dc.w 0x6706
	dc.w 0x0C03
	dc.w ctFM3op4
	dc.w 0x631A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F03
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meYM)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x8028
	dc.w ciRegOffs
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	dc.w 0x1AE8
	dc.w ciPart
	dc.w 0x1AC1
	dc.w 0x1AC0
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dCommand_Tie:
	dc.w 0x08D1
	dc.w cfTie
	dc.w 0x4E75
dCommand_Voice:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x2668
	dc.w ciVoice
	dc.w 0x4ED3
dCommand_Backup:
	if FEATURE_BACKUP
	dc.w 0x5897
	dc.w 0x4EBA
	dc.w (dPlayCmd_StopMus)-*
	dc.w 0x0838
	dc.w mfBackup
	dc.w mFlags
	dc.w 0x6608
	dc.w 0x11FC,0x0001
	dc.w mTempoAcc
	dc.w 0x4E75
	dc.w 0x7000+(1<<mfUnderwater+1<<mfExec)
	dc.w 0xC038
	dc.w mFlags
	dc.w 0x47F8
	dc.w mBackupStart
	dc.w 0x49F8
	dc.w mBackupData
	dc.w 0x323C
	dc.w mBackupEnd-mBackupStart-4
	dc.w 0xE449
	dc.w 0x26DC
	dc.w 0x51C9,0xFFFC
	dc.w 0x36DC
	dc.w 0x7200+(1<<mfSpecial)
	dc.w 0xC238
	dc.w mFlags
	dc.w 0x8001
	dc.w 0x11C0
	dc.w mFlags
	dc.w 0x4EBA
	dc.w (dPlayCmd_UnderwaterUpd)-*
	dc.w 0x4EBA
	dc.w (dUpdateTempo)-*
	dc.w 0x11FC,0x0001
	dc.w mTempoAcc
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AF8
	dc.w mModeFM3
	dc.w 0x1AFC,0x0027
	dc.w 0x421D
	dc.w 0x1AF8
	dc.w mRegLFO
	dc.w 0x1AFC,0x0022
	dc.w 0x36BC,0x0000
	dc.w 0x48E7,0x00E0
	dc.w 0x41FA
	dc.w (dChannelInfoFM3)-*
	dc.w 0x0838
	dc.w mfSpecial
	dc.w mFlags
	dc.w 0x6714
	dc.w 0x41FA
	dc.w (dChannelInfoFM3o1)-*
	dc.w 0x600E
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6606
	dc.w 0x4CDF,0x0700
	dc.w 0x4E75
	dc.w 0xD0C0
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6AEC
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x670A
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A02
	dc.w 0x60DC
	dc.w 0x2668
	dc.w ciRestore
	dc.w 0x4E93
	dc.w 0x60D4
	else
	dc.w 0x4E75
	endif
dCommand_Stop:
	dc.w 0x2668
	dc.w ciKeyOff
	dc.w 0x4E93
	dc.w 0x2668
	dc.w ciMute
	dc.w 0x4E93
	dc.w 0x4211
	dc.w 0x5497
	dc.w 0xB2FC
	dc.w mFM1
	dc.w 0x6424
	dc.w 0x4229
	dc.w cPriority
	dc.w 0x4269
	dc.w cSoundID
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6716
	dc.w 0x48E7,0x00E0
	dc.w 0x2040
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A06
	dc.w 0x2668
	dc.w ciRestore
	dc.w 0x4E93
	dc.w 0x4CDF,0x0700
	dc.w 0x4E75
dCommand_Cont:
	if SAFE_MODE
	dc.w 0xB2FC
	dc.w mBackupStart
	dc.w 0x6D20
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciType
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meCont)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x08A9
	dc.w cfCont
	dc.w cModeFlags
	dc.w 0x6600+(0xFF&((dCommand_Jump)-*-2))
	dc.w 0x4269
	dc.w cSoundID
	dc.w 0x568A
	dc.w 0x4E75
dCommand_Call:
	dc.w 0x7000
	dc.w 0x1029
	dc.w cCallStack
	if SAFE_MODE
	dc.w 0x0C00
	dc.w cStackEnd
	dc.w 0x6406
	dc.w 0x0C00
	dc.w cStack
	dc.w 0x641A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidCallStack)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x47F1,0x0000
	dc.w 0x101A
	dc.w 0x268A
	dc.w 0x1680
	dc.w 0x5829
	dc.w cCallStack
dCommand_Jump:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x4840
	dc.w 0x1E9A
	dc.w 0x3017
	dc.w 0x101A
	dc.w 0x2440
	dc.w 0x4E75
dCommand_Ret:
	dc.w 0x7000
	dc.w 0x1029
	dc.w cCallStack
	if SAFE_MODE
	dc.w 0x0C00
	dc.w cStackEnd
	dc.w 0x6206
	dc.w 0x0C00
	dc.w cStack
	dc.w 0x621A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidCallStack)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x47F1,0x00FC
	dc.w 0x2453
	dc.w 0x5313
	dc.w 0x6600+(0xFF&((dCommand_Jump)-*-2))
	dc.w 0x568A
	dc.w 0x5929
	dc.w cCallStack
	dc.w 0x4E75
dCommand_CondJump:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x47F8
	dc.w mTiming
	dc.w 0x121A
	dc.w 0xB233,0x0000
	dc.w 0x6700+(0xFF&((dCommand_Jump)-*-2))
	dc.w 0x568A
	dc.w 0x4E75
dCommand_BitJump:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x47F8
	dc.w mTiming
	dc.w 0x721F
	dc.w 0xC240
	dc.w 0xEA48
	dc.w 0x0133,0x1000
	dc.w 0x6600
	dc.w (dCommand_Jump)-*
	dc.w 0x568A
	dc.w 0x4E75
dCommand_CommSet:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x47F8
	dc.w mTiming
	dc.w 0x179A,0x0000
	dc.w 0x4E75
dCommand_CommAdd:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x47F8
	dc.w mTiming
	dc.w 0x121A
	dc.w 0xD333,0x0000
	dc.w 0x4E75
dCommand_Flags:
	dc.w 0x7000+(1<<stfNoUW+1<<stfNoMasterFreq+1<<stfNoMasterVol+1<<cfVolume+1<<cfFreq)
	dc.w 0x72F5
	dc.w 0xC01A
	dc.w 0xC229
	dc.w cModeFlags
	dc.w 0x8001
	dc.w 0x1340
	dc.w cModeFlags
	dc.w 0x4E75
dCommand_SpinReset:
	dc.w 0x4238
	dc.w mSpindash
	dc.w 0x4E75
dCommand_SpinRev:
	dc.w 0x1638
	dc.w mSpindash
	dc.w 0xD729
	dc.w cFrac
	dc.w 0x0C03,0x000B
	dc.w 0x6404
	dc.w 0x5238
	dc.w mSpindash
	dc.w 0x4E75
dChannelInfoAllSFX:
dChannelInfoSFXFM1:
	dc.w mSFXFM1
	dc.l dChannelInfoFM1
	dc.w mPanSFX+0x0
	dc.w 0x0046
	dc.l (0xA4<<24)+dUpdateFreqFMSFX
	dc.l (0x40<<24)+dUpdateVolFMSFX
	dc.w mFreqSFXFM1
	dc.w mVolSFXFM1
	dc.l ((mSFXFM1+cSongTable)&0xFFFFFF)
	dc.l dOverwriteTLFMSFX
	dc.l (0x01<<24)+dMuteFMSFX
	dc.l (0x80<<24)+dUnmuteFMSFX
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFMSFX
	dc.l dKeyOnFMSFX
	dc.l dStringFM1SFX
	dc.l dLoadVoiceFMSFX
	dc.l (0xB4<<24)+dLoadPanFMSFX
	dc.l dRestoreFM
	dc.l dVoiceRegsFM1
	even
dChannelInfoSFXFM2:
	dc.w mSFXFM2
	dc.l dChannelInfoFM2
	dc.w mPanSFX+0x1
	dc.w 0x0046
	dc.l (0xA5<<24)+dUpdateFreqFMSFX
	dc.l (0x41<<24)+dUpdateVolFMSFX
	dc.w mFreqSFXFM2
	dc.w mVolSFXFM2
	dc.l (0x01<<24)+((mSFXFM2+cSongTable)&0xFFFFFF)
	dc.l dOverwriteTLFMSFX
	dc.l (0x01<<24)+dMuteFMSFX
	dc.l (0x81<<24)+dUnmuteFMSFX
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFMSFX
	dc.l (0x01<<24)+dKeyOnFMSFX
	dc.l dStringFM2SFX
	dc.l dLoadVoiceFMSFX
	dc.l (0xB5<<24)+dLoadPanFMSFX
	dc.l dRestoreFM
	dc.l dVoiceRegsFM2
	even
dChannelInfoSFXFM4:
	dc.w mSFXFM4
	dc.l dChannelInfoFM4
	dc.w mPanSFX+0x2
	dc.w 0x0046
	dc.l (0xA4<<24)+dUpdateFreqFMSFX
	dc.l (0x40<<24)+dUpdateVolFMSFX
	dc.w mFreqSFXFM4
	dc.w mVolSFXFM4
	dc.l (0x04<<24)+((mSFXFM4+cSongTable)&0xFFFFFF)
	dc.l dOverwriteTLFMSFX
	dc.l (0x01<<24)+dMuteFMSFX
	dc.l (0x80<<24)+dUnmuteFMSFX
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFMSFX
	dc.l dKeyOnFMSFX
	dc.l dStringFM4SFX
	dc.l dLoadVoiceFMSFX
	dc.l (0xB4<<24)+dLoadPanFMSFX
	dc.l dRestoreFM
	dc.l (0x02<<24)+dVoiceRegsFM1
	even
dChannelInfoSFXFM5:
	dc.w mSFXFM5
	dc.l dChannelInfoFM5
	dc.w mPanSFX+0x3
	dc.w 0x0360
	dc.l (0xA5<<24)+dUpdateFreqFMSFX
	dc.l (0x41<<24)+dUpdateVolFMSFX
	dc.w mFreqSFXFM5
	dc.w mVolSFXFM5
	dc.l (0x05<<24)+((mSFXFM5+cSongTable)&0xFFFFFF)
	dc.l dOverwriteTLFMSFX
	dc.l (0x01<<24)+dMuteFMSFX
	dc.l (0x81<<24)+dUnmuteFMSFX
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFMSFX
	dc.l (0x01<<24)+dKeyOnFMSFX
	dc.l dStringFM5SFX
	dc.l dLoadVoiceFMSFX
	dc.l (0xB5<<24)+dLoadPanFMSFX
	dc.l dRestoreFM
	dc.l (0x02<<24)+dVoiceRegsFM2
	even
dChannelInfoFM3o1:
	dc.w mFM3o1
	dc.l 0
	dc.w mPanning+0x5
	dc.w 0x004A
	dc.l (0xAD<<24)+dUpdateFreqFMSFX
	dc.l (0x42<<24)+dUpdateVolFM3
	dc.w mFreqFM3o1
	dc.w mVolFM3o1
	dc.l (0x02<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMuteFM3
	dc.l (0x82<<24)+dUnmuteFM3
	dc.l dMuteFM3
	dc.l (-minNoteFM<<24)+dKeyOffFM3
	dc.l (0x02<<24)+dKeyOnFM3
	dc.l dStringFM3o1
	dc.l dLoadVoiceFM3
	dc.l (0xB6<<24)+dLoadPanFM3
	dc.l dRestoreFM3
	dc.l dVoiceRegsFM3op1
	dc.b 0x62
	dc.b 0x00
	dc.w 0x0400
	even
dChannelInfoFM3o2:
	dc.w mFM3o2
	dc.l 0
	dc.w mPanning+0x5
	dc.w 0x004A
	dc.l (0xAC<<24)+dUpdateFreqFMSFX
	dc.l (0x46<<24)+dUpdateVolFM3
	dc.w mFreqFM3o2
	dc.w mVolFM3o2
	dc.l (0x0A<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMuteFM3
	dc.l (0x86<<24)+dUnmuteFM3
	dc.l dMuteFM3
	dc.l (-minNoteFM<<24)+dKeyOffFM3
	dc.l (0x02<<24)+dKeyOnFM3
	dc.l dStringFM3o2
	dc.l dLoadVoiceFM3
	dc.l (0xB6<<24)+dLoadPanFM3
	dc.l dRestoreFM3
	dc.l dVoiceRegsFM3op2
	dc.b 0x62
	dc.b 0x01
	dc.w 0x0600
	even
dChannelInfoFM3o3:
	dc.w mFM3o3
	dc.l 0
	dc.w mPanning+0x5
	dc.w 0x004A
	dc.l (0xAE<<24)+dUpdateFreqFMSFX
	dc.l (0x4A<<24)+dUpdateVolFM3
	dc.w mFreqFM3o3
	dc.w mVolFM3o3
	dc.l (0x09<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMuteFM3
	dc.l (0x8A<<24)+dUnmuteFM3
	dc.l dMuteFM3
	dc.l (-minNoteFM<<24)+dKeyOffFM3
	dc.l (0x02<<24)+dKeyOnFM3
	dc.l dStringFM3o3
	dc.l dLoadVoiceFM3
	dc.l (0xB6<<24)+dLoadPanFM3
	dc.l dRestoreFM3
	dc.l dVoiceRegsFM3op3
	dc.b 0x62
	dc.b 0x02
	dc.w 0x0500
	even
dChannelInfoFM3o4:
	dc.w mFM3o4
	dc.l 0
	dc.w mPanning+0x5
	dc.w 0x004A
	dc.l (0xA6<<24)+dUpdateFreqFM
	dc.l (0x4E<<24)+dUpdateVolFM3
	dc.w mFreqFM3o4
	dc.w mVolFM3o4
	dc.l (0x0B<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM3
	dc.l (0x01<<24)+dMuteFM3
	dc.l (0x8E<<24)+dUnmuteFM3
	dc.l dMuteFM3
	dc.l (-minNoteFM<<24)+dKeyOffFM3
	dc.l (0x02<<24)+dKeyOnFM3
	dc.l dStringFM3o4
	dc.l dLoadVoiceFM3
	dc.l (0xB6<<24)+dLoadPanFM3
	dc.l dRestoreFM3
	dc.l dVoiceRegsFM3op4
	dc.b 0x62
	dc.b 0x03
	dc.w 0x0700
	even
dChannelInfoTA:
	dc.w mTA+0x0
	dc.l 0
	dc.w 0
	dc.w 0x008A
	dc.l dUpdateFreqTA
	dc.l 0
	dc.w mFreqTA
	dc.w 0
	dc.l (0x40<<24)+(mSongTable&0xFFFFFF)
	dc.l dUpdateKeyFM3
	dc.l (0x01<<24)+dDisableCSM
	dc.l dEnableCSM
	dc.l dNullRoutine
	dc.l dNullRoutine
	dc.l dNullRoutine
	dc.l dStringTA
	dc.l dLoadVoiceTA
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoFM3:
	dc.w mFM3o1
	dc.l 0
	dc.w mPanning+0x5
	dc.w 0x0048
	dc.l (0xA6<<24)+dUpdateFreqFM
	dc.l (0x42<<24)+dUpdateVolFM
	dc.w mFreqFM3o1
	dc.w mVolFM3o1
	dc.l (0x02<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFMSFX
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x82<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l (0x02<<24)+dKeyOnFM
	dc.l dStringFM3o1
	dc.l dLoadVoiceFM
	dc.l (0xB6<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l dVoiceRegsFM3
	dc.w 0x6200
	even
dChannelInfoFM1:
	dc.w mFM1
	dc.l dChannelInfoSFXFM1
	dc.w mPanning+0x0
	dc.w 0x0048
	dc.l (0xA4<<24)+dUpdateFreqFM
	dc.l (0x40<<24)+dUpdateVolFM
	dc.w mFreqFM1
	dc.w mVolFM1
	dc.l (mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x80<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l dKeyOnFM
	dc.l dStringFM1
	dc.l dLoadVoiceFM
	dc.l (0xB4<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l dVoiceRegsFM1
	dc.w 0x6000
	even
dChannelInfoFM2:
	dc.w mFM2
	dc.l dChannelInfoSFXFM2
	dc.w mPanning+0x1
	dc.w 0x0048
	dc.l (0xA5<<24)+dUpdateFreqFM
	dc.l (0x41<<24)+dUpdateVolFM
	dc.w mFreqFM2
	dc.w mVolFM2
	dc.l (0x01<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x81<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l (0x01<<24)+dKeyOnFM
	dc.l dStringFM2
	dc.l dLoadVoiceFM
	dc.l (0xB5<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l dVoiceRegsFM2
	dc.w 0x6100
	even
dChannelInfoFM4:
	dc.w mFM4
	dc.l dChannelInfoSFXFM4
	dc.w mPanning+0x2
	dc.w 0x0048
	dc.l (0xA4<<24)+dUpdateFreqFM
	dc.l (0x40<<24)+dUpdateVolFM
	dc.w mFreqFM4
	dc.w mVolFM4
	dc.l (0x04<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x80<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l dKeyOnFM
	dc.l dStringFM4
	dc.l dLoadVoiceFM
	dc.l (0xB4<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l (0x02<<24)+dVoiceRegsFM1
	dc.w 0x6000
	even
dChannelInfoFM5:
	dc.w mFM5
	dc.l dChannelInfoSFXFM5
	dc.w mPanning+0x3
	dc.w 0x0048
	dc.l (0xA5<<24)+dUpdateFreqFM
	dc.l (0x41<<24)+dUpdateVolFM
	dc.w mFreqFM5
	dc.w mVolFM5
	dc.l (0x05<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x81<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l (0x01<<24)+dKeyOnFM
	dc.l dStringFM5
	dc.l dLoadVoiceFM
	dc.l (0xB5<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l (0x02<<24)+dVoiceRegsFM2
	dc.w 0x6100
	even
dChannelInfoFM6:
	dc.w mFM6
	dc.l 0
	dc.w mPanning+0x4
	dc.w 0x008A
	dc.l (0xA6<<24)+dUpdateFreqFM
	dc.l (0x42<<24)+dUpdateVolFM
	dc.w mFreqFM6
	dc.w mVolFM6
	dc.l (0x06<<24)+(mSongTable&0xFFFFFF)
	dc.l dOverwriteTLFM
	dc.l (0x01<<24)+dMuteFM
	dc.l (0x82<<24)+dUnmuteFM
	dc.l dMuteFMSFX
	dc.l (-minNoteFM<<24)+dKeyOffFM
	dc.l (0x02<<24)+dKeyOnFM
	dc.l dStringFM6
	dc.l dLoadVoiceFM
	dc.l (0xB6<<24)+dLoadPanFM
	dc.l dRestoreFM
	dc.l (0x02<<24)+dVoiceRegsFM3
	dc.w 0x6200
	even
dChannelInfoSFXDAC2:
	dc.w mSFXDAC2
	dc.l dChannelInfoDAC2
	dc.w mPanSFX+0x4
	dc.w 0x00C6
	dc.l (0x31<<24)+dUpdateFreqDACSFX
	dc.l (0x01<<24)+dUpdateVolDACSFX
	dc.w mFreqSFXDAC2
	dc.w mVolSFXDAC2
	dc.l (0x16<<24)+((mSFXDAC2+cSongTable)&0xFFFFFF)
	dc.l dUpdateChipDACSFX
	dc.l (0x01<<24)+dMuteDACSFX
	dc.l dUnmuteDACSFX
	dc.l dPauseDAC
	dc.l (-minNoteDAC<<24)+dKeyOffDACSFX
	dc.l dKeyOnDACSFX
	dc.l dStringDAC2SFX
	dc.l (0x08<<24)+dLoadVoiceDAC
	dc.l (0xB6<<24)+dLoadPanDACSFX
	dc.l dRestoreDAC
	even
dChannelInfoDAC1:
	dc.w mDAC1
	dc.l 0
	dc.w mPanning+0x6
	dc.w 0x0042
	dc.l dUpdateFreqDAC
	dc.l dUpdateVolDAC
	dc.w mFreqDAC1
	dc.w mVolDAC1
	dc.l (0x13<<24)+(mSongTable&0xFFFFFF)
	dc.l dUpdateChipDACSFX
	dc.l (0x01<<24)+dMuteDAC
	dc.l dUnmuteDAC
	dc.l dPauseDAC
	dc.l (-minNoteDAC<<24)+dKeyOffDAC
	dc.l dKeyOnDAC
	dc.l dStringDAC1
	dc.l dLoadVoiceDAC
	dc.l (0xB6<<24)+dLoadPanDAC
	dc.l dRestoreDAC
	even
dChannelInfoDAC2:
	dc.w mDAC2
	dc.l dChannelInfoSFXDAC2
	dc.w mPanning+0x6
	dc.w 0x014A
	dc.l (0x31<<24)+dUpdateFreqDAC
	dc.l (0x01<<24)+dUpdateVolDAC
	dc.w mFreqDAC2
	dc.w mVolDAC2
	dc.l (0x16<<24)+(mSongTable&0xFFFFFF)
	dc.l dUpdateChipDAC
	dc.l (0x01<<24)+dMuteDAC
	dc.l dUnmuteDAC
	dc.l dPauseDAC
	dc.l (-minNoteDAC<<24)+dKeyOffDAC
	dc.l dKeyOnDAC
	dc.l dStringDAC2
	dc.l (0x08<<24)+dLoadVoiceDAC
	dc.l (0xB6<<24)+dLoadPanDAC
	dc.l dRestoreDAC
	even
dChannelInfoSFXPSG1:
	dc.w mSFXPSG1
	dc.l dChannelInfoPSG1
	dc.w 0
	dc.w 0x0042
	dc.l (0x80<<24)+dUpdateFreqPSGSFX
	dc.l (0x90<<24)+dUpdateVolPSGSFX
	dc.w mFreqSFXPSG1
	dc.w mVolSFXPSG1
	dc.l (0x80<<24)+((mSFXPSG1+cSongTable)&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSGSFX
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG1SFX
	dc.l dLoadVoicePSGSFX
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoSFXPSG2:
	dc.w mSFXPSG2
	dc.l dChannelInfoPSG2
	dc.w 0
	dc.w 0x0042
	dc.l (0xA0<<24)+dUpdateFreqPSGSFX
	dc.l (0xB0<<24)+dUpdateVolPSGSFX
	dc.w mFreqSFXPSG2
	dc.w mVolSFXPSG2
	dc.l (0xA0<<24)+((mSFXPSG2+cSongTable)&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSGSFX
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG2SFX
	dc.l dLoadVoicePSGSFX
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoSFXPSG3:
	dc.w mSFXPSG3
	dc.l dChannelInfoPSG3
	dc.w 0
	dc.w 0x0042
	dc.l (0xC0<<24)+dUpdateFreqPSGSFX
	dc.l (0xD0<<24)+dUpdateVolPSGSFX
	dc.w mFreqSFXPSG3
	dc.w mVolSFXPSG3
	dc.l (0xC0<<24)+((mSFXPSG3+cSongTable)&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSGSFX
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG3SFX
	dc.l dLoadVoicePSGSFX
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoSFXPSG4:
	dc.w mSFXPSG4
	dc.l dChannelInfoPSG4
	dc.w 0
	dc.w 0
	dc.l (0xE0<<24)+dUpdateNoisePSG4SFX
	dc.l (0xF0<<24)+dUpdateVolPSGSFX
	dc.w 0
	dc.w mVolSFXPSG4
	dc.l (0xE0<<24)+((mSFXPSG4+cSongTable)&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSGSFX
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG4SFX
	dc.l dLoadVoicePSGSFX
	dc.l dNullRoutine
	dc.l dRestorePSG4
	even
dChannelInfoPSG1:
	dc.w mPSG1
	dc.l dChannelInfoSFXPSG1
	dc.w 0
	dc.w 0x0042
	dc.l (0x80<<24)+dUpdateFreqPSG
	dc.l (0x90<<24)+dUpdateVolPSG
	dc.w mFreqPSG1
	dc.w mVolPSG1
	dc.l (0x80<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSG
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG1
	dc.l dLoadVoicePSG
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoPSG2:
	dc.w mPSG2
	dc.l dChannelInfoSFXPSG2
	dc.w 0
	dc.w 0x0042
	dc.l (0xA0<<24)+dUpdateFreqPSG
	dc.l (0xB0<<24)+dUpdateVolPSG
	dc.w mFreqPSG2
	dc.w mVolPSG2
	dc.l (0xA0<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSG
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG2
	dc.l dLoadVoicePSG
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoPSG3:
	dc.w mPSG3
	dc.l dChannelInfoSFXPSG3
	dc.w 0
	dc.w 0x0042
	dc.l (0xC0<<24)+dUpdateFreqPSG
	dc.l (0xD0<<24)+dUpdateVolPSG
	dc.w mFreqPSG3
	dc.w mVolPSG3
	dc.l (0xC0<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSG
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l (-minNotePSG<<24)+dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG3
	dc.l dLoadVoicePSG
	dc.l dNullRoutine
	dc.l dRestoreSimple
	even
dChannelInfoPSG4:
	dc.w mPSG4
	dc.l dChannelInfoSFXPSG4
	dc.w 0
	dc.w 0
	dc.l (0xE0<<24)+dUpdateNoisePSG4
	dc.l (0xF0<<24)+dUpdateVolPSG
	dc.w 0
	dc.w mVolPSG4
	dc.l (0xE0<<24)+(mSongTable&0xFFFFFF)
	dc.l 0x00000000
	dc.l (0x01<<24)+dMutePSG
	dc.l dUnmuteSimple
	dc.l dMutePSGSFX
	dc.l dNullRoutine
	dc.l dNullRoutine
	dc.l dStringPSG4
	dc.l dLoadVoicePSG
	dc.l dNullRoutine
	dc.l dRestorePSG4
	even
dRestorePSG4:
	dc.w 0x13E9
	dc.w cVoice
	dc.w 0x00C0,0x0011
dRestoreSimple:
	dc.w 0x08D1
	dc.w cfFreq
dUnmuteSimple:
	dc.w 0x08D1
	dc.w cfVolume
dNullRoutine:
	dc.w 0x4E75
dUpdateMasterFrac:
	dc.w 0xB078
	dc.w mMasterFrac
	dc.w 0x6700+(0xFF&((dUpdateMaster_Rts)-*-2))
	dc.w 0x31C0
	dc.w mMasterFrac
dSetFracFlag:
	dc.w 0x7200+(cfFreq)
	dc.w 0x6000+(0xFF&((dUpdateMaster)-*-2))
dUpdateMasterVol:
	dc.w 0xB078
	dc.w mMasterVol
	dc.w 0x6706
	dc.w 0x31C0
	dc.w mMasterVol
	dc.w 0x6006
	dc.w 0xB278
	dc.w mMasterVolPSG
	dc.w 0x6700+(0xFF&((dUpdateMaster_Rts)-*-2))
	dc.w 0x31C1
	dc.w mMasterVolPSG
dSetVolumeFlag:
	dc.w 0x7200+(cfVolume)
dUpdateMaster:
	dc.w 0x41FA
	dc.w (dChannelInfoFM3o1)-*
	dc.w 0x6100+(0xFF&((dUpdateMaster_Chan)-*-2))
	dc.w 0x41FA
	dc.w (dChannelInfoSFXFM1)-*
	dc.w 0x6000+(0xFF&((dUpdateMaster_Chan)-*-2))
dUpdateMaster_Next:
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6600+(0xFF&((dUpdateMaster_NotNull)-*-2))
dUpdateMaster_Rts:
	dc.w 0x4E75
dUpdateMaster_NotNull:
	dc.w 0xD0C0
dUpdateMaster_Chan:
	dc.w 0x3250
	dc.w 0x03D1
	dc.w 0x6000+(0xFF&((dUpdateMaster_Next)-*-2))
dUpdateMasterTempo:
	dc.w 0xB078
	dc.w mMasterTempo
	dc.w 0x6700+(0xFF&((dUpdateMaster_Rts)-*-2))
	dc.w 0x31C0
	dc.w mMasterTempo
dUpdateTempo:
	dc.w 0x7000
	dc.w 0x3038
	dc.w mMasterTempo
	dc.w 0xC0F8
	dc.w mTempoSong
	dc.w 0x4840
	dc.w 0x31C0
	dc.w mTempoCur
	dc.w 0x4E75
dPlayCmd_Pause:
	dc.w 0x08F8
	dc.w mfPause
	dc.w mFlags
	dc.w 0x7C00+(ciPause)
	dc.w 0x6000+(0xFF&((dPlayCmd_Pause_Activate)-*-2))
dPlayCmd_Unpause:
	dc.w 0x08B8
	dc.w mfPause
	dc.w mFlags
	dc.w 0x6700+(0xFF&((dPlayCmd_Pause_Rts)-*-2))
	dc.w 0x7C00+(ciUnmute)
dPlayCmd_Pause_Activate:
	dc.w 0x41FA
	dc.w (dChannelInfoAllSFX)-*
	dc.w 0x6114
	dc.w 0x41FA
	dc.w (dChannelInfoFM3)-*
	dc.w 0x0838
	dc.w mfSpecial
	dc.w mFlags
	dc.w 0x6708
	dc.w 0x41FA
	dc.w (dChannelInfoFM3o1)-*
	dc.w 0x6002
	dc.w 0xD0C0
	dc.w 0x4A70,0x6002
	dc.w 0x6710
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A0A
	dc.w 0x2470,0x6000
	dc.w 0x3F06
	dc.w 0x4E92
	dc.w 0x3C1F
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x66E2
dPlayCmd_Pause_Rts:
	dc.w 0x4E75
dPlayCmd_UnderwaterOff:
	dc.w 0x08B8
	dc.w mfUnderwater
	dc.w mFlags
	dc.w 0x6000
	dc.w (dPlayCmd_UnderwaterUpd)-*
dPlayCmd_Reset:
	dc.w 0x6100+(0xFF&((dPlayCmd_UnderwaterOff)-*-2))
	dc.w 0x4278
	dc.w mMasterVol
	dc.w 0x4278
	dc.w mMasterVolPSG
	dc.w 0x4278
	dc.w mMasterFrac
	dc.w 0x31FC,0x1000
	dc.w mMasterTempo
	dc.w 0x08B8
	dc.w mfPause
	dc.w mFlags
	dc.w 0x41FA
	dc.w (dChannelInfoAllSFX)-*
	dc.w 0x6100+(0xFF&((dPlayCmd_Stop_Chan)-*-2))
dPlayCmd_StopMus:
	dc.w 0x4278
	dc.w mTempoSong
	dc.w 0x4278
	dc.w mTempoCur
	dc.w 0x4278
	dc.w mTempoAcc
	dc.w 0x41FA
	dc.w (dChannelInfoFM3)-*
	dc.w 0x0838
	dc.w mfSpecial
	dc.w mFlags
	dc.w 0x6700+(0xFF&((dPlayCmd_Stop_Chan)-*-2))
	dc.w 0x41FA
	dc.w (dChannelInfoFM3o1)-*
	dc.w 0x6000+(0xFF&((dPlayCmd_Stop_Chan)-*-2))
dPlayCmd_StopSFX:
	dc.w 0x41FA
	dc.w (dChannelInfoSFXFM1)-*
	dc.w 0x6000+(0xFF&((dPlayCmd_Stop_Chan)-*-2))
dPlayCmd_Stop_Next:
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6602
	dc.w 0x4E75
	dc.w 0xD0C0
dPlayCmd_Stop_Chan:
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A00+(0xFF&((dPlayCmd_Stop_Next)-*-2))
	dc.w 0x4211
	dc.w 0x4A68
	dc.w ciMute+2
	dc.w 0x6712
	dc.w 0x2468
	dc.w ciMute
	dc.w 0x4E92
	dc.w 0x4A68
	dc.w ciExtraRout+2
	dc.w 0x6706
	dc.w 0x2468
	dc.w ciExtraRout
	dc.w 0x4E92
	dc.w 0xB2FC
	dc.w mFM1
	dc.w 0x6400+(0xFF&((dPlayCmd_Stop_Next)-*-2))
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dPlayCmd_Stop_Next)-*-2))
	dc.w 0x48E7,0x00C0
	dc.w 0x2040
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A06
	dc.w 0x2468
	dc.w ciRestore
	dc.w 0x4E92
	dc.w 0x4CDF,0x0300
	dc.w 0x6000+(0xFF&((dPlayCmd_Stop_Next)-*-2))
dPlayCmd_UnderwaterOn:
	dc.w 0x08F8
	dc.w mfUnderwater
	dc.w mFlags
dPlayCmd_UnderwaterUpd:
	dc.w 0x41FA
	dc.w (dChannelInfoSFXFM1)-*
	dc.w 0x6108
	dc.w 0x41FA
	dc.w (dChannelInfoFM3)-*
	dc.w 0x6002
	dc.w 0xD0C0
	dc.w 0x3250
	dc.w 0x4A11
	dc.w 0x6A20
	dc.w 0x08A9
	dc.w cfUnderwater
	dc.w cModeFlags
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x0838
	dc.w mfUnderwater
	dc.w mFlags
	dc.w 0x670E
	dc.w 0x0829
	dc.w cfBlockUW
	dc.w cModeFlags
	dc.w 0x6606
	dc.w 0x08E9
	dc.w cfUnderwater
	dc.w cModeFlags
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x66D2
	dc.w 0x4E75
dUpdateFreqTA:
	dc.w 0x0829
	dc.w cfNoMasterFreq
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterFrac
	dc.w 0x3200
	dc.w 0xE049
	if SAFE_MODE
	dc.w 0x0C41
	dc.w maxNoteTA+1
	dc.w 0x6520
	dc.w 0x0281,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meOutOfRangeNoteTA)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x0240,0x00FF
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x47FB
	dc.w 0x1000+(0xFF&((dFreqTableTA)-*))
	dc.w 0x321B
	dc.w 0xC2C0
	dc.w 0x4841
	dc.w 0xD253
	if FEATURE_SOUNDTEST
	dc.w 0x3341
	dc.w cChipFreq
	endif
	dc.w 0x7003
	dc.w 0xC041
	dc.w 0xE449
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AC1
	dc.w 0x1AFC,0x0024
	dc.w 0x421D
	dc.w 0x1AC0
	dc.w 0x1AFC,0x0025
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dFreqTableTA:
	include "Fractal/Includes/TAFrequencies.asm"
dLoadVoiceTA:
	if SAFE_MODE
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meVoicesTA)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	else
	dc.w 0x4E75
	endif
dDisableCSM:
	dc.w 0x4238
	dc.w mSpecXor
	dc.w 0x7240
	dc.w 0x6000+(0xFF&((dCommand_UpdateCSM)-*-2))
dEnableCSM:
	dc.w 0x11FC,0x00F0
	dc.w mSpecXor
	dc.w 0x7281
dCommand_UpdateCSM:
	dc.w 0x11C1
	dc.w mModeFM3
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AC1
	dc.w 0x1AFC,0x0027
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dUpdateFreqFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateFreqFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateFreqFMSFX)-*-2))
	dc.w 0x4E75
dUpdateFreqFMSFX:
	dc.w 0x0829
	dc.w cfNoMasterFreq
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterFrac
	dc.w 0x3200
	dc.w 0xE049
	if SAFE_MODE
	dc.w 0x0C41
	dc.w maxNoteFM+1
	dc.w 0x6520
	dc.w 0x0281,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meOutOfRangeNoteFM)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x0240,0x00FF
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x47FB
	dc.w 0x1000+(0xFF&((dFreqTableFM)-*))
	dc.w 0x321B
	dc.w 0xC2C0
	dc.w 0x4841
	dc.w 0xD253
	if FEATURE_SOUNDTEST
	dc.w 0x3341
	dc.w cChipFreq
	endif
	dc.w 0x3001
	dc.w 0xE048
	dc.w 0x1428
	dc.w ciFreqReg
	dc.w 0x1628
	dc.w ciPart
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x1AC3
	dc.w 0x1AC0
	dc.w 0x1AC2
	dc.w 0x5902
	dc.w 0x1AC3
	dc.w 0x1AC1
	dc.w 0x1AC2
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dFreqTableFM:
	include "Fractal/Includes/FMFrequencies.asm"
dUnmuteFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUnmuteFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUnmuteFMSFX)-*-2))
	dc.w 0x4E75
dUnmuteFMSFX:
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x2653
	dc.w 0x7200
	dc.w 0x1229
	dc.w cVoice
	dc.w 0xEB49
	dc.w 0x49F3
	dc.w 0x1000+(0xFF&(vvD1LRR))
	if SAFE_MODE
	dc.w 0x0C6C
	dc.b "VO"
	dc.w 0xFFEC
	dc.w 0x671C
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x486C
	dc.w -vvD1LRR
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVoice)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x1428
	dc.w ciUnmuteReg
	dc.w 0x1228
	dc.w ciPart
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AE8
	dc.w ciType
	dc.w 0x1AFC,0x0028
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC2
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dMuteFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dMuteFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dMuteFMSFX)-*-2))
	dc.w 0x4E75
dMuteFMSFX:
	dc.w 0x284F
	dc.w 0x598F
	dc.w 0x293C,0x7F7F,0x7F7F
	if FEATURE_SOUNDTEST
	dc.w 0x337C,0x007F
	dc.w cChipVol
	endif
	dc.w 0x1028
	dc.w ciVolumeReg
	dc.w 0x1428
	dc.w ciUnmuteReg
	dc.w 0x1228
	dc.w ciPart
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x1AC1
	dc.w 0x50DD
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x50DD
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x50DD
	dc.w 0x1AC2
	dc.w 0x5802
	dc.w 0x1AC1
	dc.w 0x50DD
	dc.w 0x1AC2
	dc.w 0x6000
	dc.w (dSendVolFM)-*
dUnderwaterLUT:
	dc.w 0x0808,0x0808,0x0A0E,0x0E0F
dUpdateVolFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateVolFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateVolFMSFX)-*-2))
	dc.w 0x4E75
dUpdateVolFMSFX:
	dc.w 0x2668
	dc.w ciTable
	dc.w 0x2653
	dc.w 0x2653
	dc.w 0x7200
	dc.w 0x1229
	dc.w cVoice
	dc.w 0xEB49
	dc.w 0x47F3,0x1020
	if SAFE_MODE
	dc.w 0x0C6B
	dc.b "VO"
	dc.w 0xFFE0
	dc.w 0x671C
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x486C
	dc.w -vvTL-4
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVoice)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x7A00
	dc.w 0x0829
	dc.w cfUnderwater
	dc.w cModeFlags
	dc.w 0x6710
	dc.w 0x7807
	dc.w 0xC82B,0xFFE3
	dc.w 0x183B
	dc.w 0x4000+(0xFF&((dUnderwaterLUT)-*))
	dc.w 0x1A04
	dc.w 0x5104
	dc.w 0xD044
	dc.w 0x767F
	dc.w 0x7203
	dc.w 0x7400
	dc.w 0x284F
	dc.w 0x598F
	dc.w 0x0829
	dc.w cfNoMasterVol
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterVol
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipVol
	endif
	dc.w 0x1423
	dc.w 0x6B04
	dc.w 0xD440
	dc.w 0x6006
	dc.w 0x0242,0x007F
	dc.w 0xD445
	dc.w 0xB443
	dc.w 0x6302
	dc.w 0x5AC2
	dc.w 0x1902
	dc.w 0x51C9,0xFFE8
	dc.w 0x1028
	dc.w ciVolumeReg
	dc.w 0x1228
	dc.w ciPart
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
dSendVolFM:
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x1AC1
	dc.w 0x1ADC
	dc.w 0x1AC0
	dc.w 0x36BC,0x0000
	dc.w 0x2E4C
	dc.w 0x4E75
dUnmuteFM3:
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x4E75
dMuteFM3:
	dc.w 0x747F
	if FEATURE_SOUNDTEST
	dc.w 0x3342
	dc.w cChipVol
	endif
	dc.w 0x6000
	dc.w (dSendVolFM3)-*
dUpdateVolFM3:
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x2854
	dc.w 0x7200
	dc.w 0x1229
	dc.w cVoice
	dc.w 0xEB49
	dc.w 0xD8C1
	if SAFE_MODE
	dc.w 0x0C54
	dc.b "VO"
	dc.w 0x671C
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x4874
	dc.w 0x1000+(0xFF&(0))
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVoice)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x0829
	dc.w cfNoMasterVol
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterVol
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipVol
	endif
	dc.w 0x7800
	dc.w 0x0811
	dc.w cfUnderwater
	dc.w 0x670E
	dc.w 0x47FA
	dc.w (dUnderwaterLUT)-*
	dc.w 0x7807
	dc.w 0xC82C,0x0003
	dc.w 0x1833,0x4000
	dc.w 0x7400
	dc.w 0x1428
	dc.w ciVoiceOff
	dc.w 0xD8C2
	dc.w 0x142C
	dc.w vvTL
	dc.w 0x6B0A
	dc.w 0x0244,0x0008
	dc.w 0xD044
	dc.w 0xD440
	dc.w 0x6006
	dc.w 0x0242,0x007F
	dc.w 0xD444
	dc.w 0x0C42,0x007F
	dc.w 0x6300+(0xFF&((dSendVolFM3)-*-2))
	dc.w 0x5AC2
dSendVolFM3:
	dc.w 0x1228
	dc.w ciVolumeReg
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x51DD
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dKeyOnFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dKeyOnFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dKeyOnFMSFX)-*-2))
	dc.w 0x4E75
dKeyOnFMSFX:
	dc.w 0x0829
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x6600+(0xFF&((dKeyOffFMSFX)-*-2))
	dc.w 0x1029
	dc.w cOpMask
	dc.w 0x6000+(0xFF&((dUpdateKeyFM)-*-2))
dKeyOffFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dKeyOffFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dKeyOffFMSFX)-*-2))
	dc.w 0x4E75
dKeyOffFMSFX:
	dc.w 0x7000
dUpdateKeyFM:
	dc.w 0x8028
	dc.w ciType
dUpdateKeyFM2:
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x1AC0
	dc.w 0x1AFC,0x0028
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dKeyOffFM3:
	dc.w 0x1028
	dc.w ciKeyBit
	dc.w 0x01B8
	dc.w mSpecKeysOff
	dc.w 0x01B8
	dc.w mSpecKeysOn
	dc.w 0x7000+(ctFM3)
	dc.w 0x8038
	dc.w mSpecKeysOff
	dc.w 0xC038
	dc.w mSpecMask
	dc.w 0x1238
	dc.w mSpecXor
	dc.w 0xB300
	dc.w 0x6000+(0xFF&((dUpdateKeyFM2)-*-2))
dKeyOnFM3:
	dc.w 0x0829
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x6608
	dc.w 0x1028
	dc.w ciKeyBit
	dc.w 0x01F8
	dc.w mSpecKeysOn
	dc.w 0x4E75
dUpdateKeyFM3:
	dc.w 0x7000+(ctFM3)
	dc.w 0x8038
	dc.w mSpecKeysOn
	dc.w 0xC038
	dc.w mSpecMask
	dc.w 0x1238
	dc.w mSpecXor
	dc.w 0xB300
	dc.w 0x6000
	dc.w (dUpdateKeyFM2)-*
dRestoreFM:
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
	dc.w 0x4EBA
	dc.w (dLoadPanFM)-*
	dc.w 0x7000
	dc.w 0x1029
	dc.w cVoice
	dc.w 0x6000+(0xFF&((dLoadVoiceFMSFX)-*-2))
dLoadVoiceFM:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dLoadVoiceFMSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dLoadVoiceFMSFX)-*-2))
	dc.w 0x1340
	dc.w cVoice
	dc.w 0x4E75
dLoadVoiceFMSFX:
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x2854
	dc.w 0x1340
	dc.w cVoice
	dc.w 0xEB48
	if SAFE_MODE
	else
	dc.w 0x5440
	endif
	dc.w 0xD8C0
	dc.w 0x240A
	dc.w 0x2468
	dc.w ciVoiceRegs
	dc.w 0x1028
	dc.w ciPart
	if SAFE_MODE
	dc.w 0x0C54
	dc.b "VO"
	dc.w 0x671A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0C
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVoice)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	dc.w 0x548C
	endif
	dc.w 0x135C
	dc.w cLFO
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x1AC0
	dc.w 0x50DD
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x50DD
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x50DD
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x50DD
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x1AC0
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0x36BC,0x0000
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x2442
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
dLoadPanFMSFX:
dLoadPanFM3:
	dc.w 0x1428
	dc.w ciPart
	dc.w 0x1629
	dc.w cLFO
dLoadPanFMDACSFX:
	dc.w 0x72C0
	dc.w 0x4A00
	dc.w 0x670E
	dc.w 0x6B04
	dc.w 0x7240
	dc.w 0x6008
	dc.w 0x7280
	dc.w 0xB200
	dc.w 0x6602
	dc.w 0x7200
	dc.w 0x8203
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x1AC2
	dc.w 0x1AC1
	dc.w 0x1AE8
	dc.w ciPanReg
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dLoadPanDACSFX:
	dc.w 0x7402
	dc.w 0x7600
	dc.w 0x6000+(0xFF&((dLoadPanFMDACSFX)-*-2))
dRestoreDAC:
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
dLoadPanDAC:
	dc.w 0x7402
	dc.w 0x7600
	dc.w 0x6000+(0xFF&((dLoadPanFMDAC)-*-2))
dLoadPanFM:
	dc.w 0x1428
	dc.w ciPart
	dc.w 0x1629
	dc.w cLFO
dLoadPanFMDAC:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700
	dc.w (dLoadPanFMDACSFX)-*
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00
	dc.w (dLoadPanFMDACSFX)-*
	dc.w 0x4E75
dVoiceRegsFM1:
	dc.w 0x4044,0x484C
	dc.b 0xB0
	dc.w 0x3034,0x383C
	dc.w 0x5054,0x585C
	dc.w 0x6064,0x686C
	dc.w 0x7074,0x787C
	dc.w 0x8084,0x888C
	dc.w 0x9094,0x989C
dVoiceRegsFM2:
	dc.w 0x4145,0x494D
	dc.b 0xB1
	dc.w 0x3135,0x393D
	dc.w 0x5155,0x595D
	dc.w 0x6165,0x696D
	dc.w 0x7175,0x797D
	dc.w 0x8185,0x898D
	dc.w 0x9195,0x999D
dVoiceRegsFM3:
	dc.w 0x4246,0x4A4E
	dc.b 0xB2
	dc.w 0x3236,0x3A3E
	dc.w 0x5256,0x5A5E
	dc.w 0x6266,0x6A6E
	dc.w 0x7276,0x7A7E
	dc.w 0x8286,0x8A8E
	dc.b 0x92,0x96,0x9A,0x9E,0x00
	even
dRestoreFM3:
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
	dc.w 0x4EBA
	dc.w (dLoadPanFM3)-*
	dc.w 0x7000
	dc.w 0x1029
	dc.w cVoice
dLoadVoiceFM3:
	dc.w 0x240A
	dc.w 0x1340
	dc.w cVoice
	dc.w 0xEB48
	if SAFE_MODE
	else
	dc.w 0x5440
	endif
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x2854
	dc.w 0xD8C0
	dc.w 0x7200
	dc.w 0x1228
	dc.w ciVoiceOff
	dc.w 0x2468
	dc.w ciVoiceRegs
	if SAFE_MODE
	dc.w 0x0C54
	dc.b "VO"
	dc.w 0x671A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0C
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVoice)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	dc.w 0x548C
	endif
	dc.w 0x135C
	dc.w cLFO
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x421D
	dc.w 0x50DD
	dc.w 0x1AE8
	dc.w ciVolumeReg
	dc.w 0x421D
	dc.w 0x1ADC
	dc.w 0x1ADA
	dc.w 0xD8C1
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x588C
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x588C
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x588C
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x588C
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x588C
	dc.w 0x421D
	dc.w 0x1AD4
	dc.w 0x1ADA
	dc.w 0x36BC,0x0000
	dc.w 0x2442
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x3668
	dc.w ciPanning
	dc.w 0x1013
	dc.w 0x4EFA
	dc.w (dLoadPanFMSFX)-*
dVoiceRegsFM3op1:
	dc.b 0xB2
	dc.b 0x32
	dc.b 0x52
	dc.b 0x62
	dc.b 0x72
	dc.b 0x82
	dc.b 0x92
dVoiceRegsFM3op2:
	dc.b 0xB2
	dc.b 0x36
	dc.b 0x56
	dc.b 0x66
	dc.b 0x76
	dc.b 0x86
	dc.b 0x96
dVoiceRegsFM3op3:
	dc.b 0xB2
	dc.b 0x3A
	dc.b 0x5A
	dc.b 0x6A
	dc.b 0x7A
	dc.b 0x8A
	dc.b 0x9A
dVoiceRegsFM3op4:
	dc.b 0xB2
	dc.b 0x3E
	dc.b 0x5E
	dc.b 0x6E
	dc.b 0x7E
	dc.b 0x8E
	dc.b 0x9E
	even
dOverwriteTLFM:
	dc.w 0x4AB8
	dc.w mOverwriteTL
	dc.w 0x6700+(0xFF&((dOverwriteTLFM_Rts)-*-2))
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dOverwriteTLFMSFX2)-*-2))
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dOverwriteTLFMSFX2)-*-2))
	dc.w 0x42B8
	dc.w mOverwriteTL
dOverwriteTLFM_Rts:
	dc.w 0x4E75
dOverwriteTLFM3:
	dc.w 0x4AB8
	dc.w mOverwriteTL
	dc.w 0x6700+(0xFF&((dOverwriteTLFM_Rts)-*-2))
	dc.w 0x7042
	dc.w 0x6000+(0xFF&((dOverwriteTLFM3_Cont)-*-2))
dOverwriteTLFMSFX:
	dc.w 0x4AB8
	dc.w mOverwriteTL
	dc.w 0x6700+(0xFF&((dOverwriteTLFM_Rts)-*-2))
dOverwriteTLFMSFX2:
	dc.w 0x1028
	dc.w ciVolumeReg
dOverwriteTLFM3_Cont:
	dc.w 0x1228
	dc.w ciPart
	dc.w 0x49F8
	dc.w mOverwriteTL
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	if SAFE_MODE
	dc.w 0xBBFC,0x00A0,0x1200
	dc.w 0x6508
	dc.w 0xBBFC,0x00A0,0x2000
	dc.w 0x651A
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F0D
	dc.w 0x42A7
	dc.w 0x4878
	dc.w (meCueFail)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x141C
	dc.w 0x6706
	dc.w 0x1AC1
	dc.w 0x1AC2
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x141C
	dc.w 0x6706
	dc.w 0x1AC1
	dc.w 0x1AC2
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x141C
	dc.w 0x6706
	dc.w 0x1AC1
	dc.w 0x1AC2
	dc.w 0x1AC0
	dc.w 0x5800
	dc.w 0x141C
	dc.w 0x6706
	dc.w 0x1AC1
	dc.w 0x1AC2
	dc.w 0x1AC0
	dc.w 0x36BC,0x0000
	dc.w 0x42B8
	dc.w mOverwriteTL
	dc.w 0x4E75
dUpdateFreqDAC:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateFreqDACSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateFreqDACSFX)-*-2))
	dc.w 0x4E75
dUpdateFreqDACSFX:
	dc.w 0x0829
	dc.w cfNoMasterFreq
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterFrac
	dc.w 0x3200
	dc.w 0xE049
	if SAFE_MODE
	dc.w 0x0C41
	dc.w maxNoteDAC+1
	dc.w 0x6520
	dc.w 0x0281,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meOutOfRangeNoteDAC)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x286C
	dc.w stSamples
	dc.w 0x7400
	dc.w 0x1429
	dc.w cVoice
	dc.w 0xEB4A
	dc.w 0x0240,0x00FF
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x47FB
	dc.w 0x1000+(0xFF&((dFreqTableDAC)-*))
	dc.w 0x321B
	dc.w 0xC3C0
	dc.w 0x4841
	dc.w 0xD253
	dc.w 0xD274
	dc.w 0x2000+(0xFF&(stFreq))
	if FEATURE_SOUNDTEST
	dc.w 0x3341
	dc.w cChipFreq
	endif
	dc.w 0x0038,0x0040
	dc.w mEnableDAC
	dc.w 0x31C1
	dc.w mFreqDAC
	dc.w 0x4E75
dFreqTableDAC:
	include "Fractal/Includes/DACFrequencies.asm"
dUpdateVolDAC:
	dc.w 0x0829
	dc.w cfNoMasterVol
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterVol
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipVol
	endif
dUpdateVolDAC2:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateVolDACSFX2)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateVolDACSFX2)-*-2))
	dc.w 0x4E75
dUpdateVolDACSFX:
	dc.w 0x0829
	dc.w cfNoMasterVol
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterVol
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipVol
	endif
dUpdateVolDACSFX2:
	dc.w 0x727F
	dc.w 0xB041
	dc.w 0x6304
	dc.w 0x5AC0
	dc.w 0xC041
	dc.w 0x49F9,0x00A0,0x0800
	dc.w 0x1EA8
	dc.w ciVolumeReg
	dc.w 0x3217
	dc.w 0x4201
	dc.w 0xD8C1
	dc.w 0x7200
	dc.w 0x1238
	dc.w mFilter
	if SAFE_MODE
	dc.w 0x0C01
	dc.w dfLast
	dc.w 0x6226
	dc.w 0x7403
	dc.w 0xC401
	dc.w 0x6720
	dc.w 0x0281,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidFilter)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x45FA
	dc.w (dFilterTable)-*
	dc.w 0x2472,0x1000
	dc.w 0xE148
	dc.w 0xD4C0
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x0000
	dc.w 0x03CC,0x0001
	dc.w 0x05CC,0x0008
	dc.w 0x07CC,0x0009
	dc.w 0x09CC,0x0010
	dc.w 0x0BCC,0x0011
	dc.w 0x0DCC,0x0018
	dc.w 0x0FCC,0x0019
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x0020
	dc.w 0x03CC,0x0021
	dc.w 0x05CC,0x0028
	dc.w 0x07CC,0x0029
	dc.w 0x09CC,0x0030
	dc.w 0x0BCC,0x0031
	dc.w 0x0DCC,0x0038
	dc.w 0x0FCC,0x0039
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x0040
	dc.w 0x03CC,0x0041
	dc.w 0x05CC,0x0048
	dc.w 0x07CC,0x0049
	dc.w 0x09CC,0x0050
	dc.w 0x0BCC,0x0051
	dc.w 0x0DCC,0x0058
	dc.w 0x0FCC,0x0059
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x0060
	dc.w 0x03CC,0x0061
	dc.w 0x05CC,0x0068
	dc.w 0x07CC,0x0069
	dc.w 0x09CC,0x0070
	dc.w 0x0BCC,0x0071
	dc.w 0x0DCC,0x0078
	dc.w 0x0FCC,0x0079
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x0080
	dc.w 0x03CC,0x0081
	dc.w 0x05CC,0x0088
	dc.w 0x07CC,0x0089
	dc.w 0x09CC,0x0090
	dc.w 0x0BCC,0x0091
	dc.w 0x0DCC,0x0098
	dc.w 0x0FCC,0x0099
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x00A0
	dc.w 0x03CC,0x00A1
	dc.w 0x05CC,0x00A8
	dc.w 0x07CC,0x00A9
	dc.w 0x09CC,0x00B0
	dc.w 0x0BCC,0x00B1
	dc.w 0x0DCC,0x00B8
	dc.w 0x0FCC,0x00B9
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x00C0
	dc.w 0x03CC,0x00C1
	dc.w 0x05CC,0x00C8
	dc.w 0x07CC,0x00C9
	dc.w 0x09CC,0x00D0
	dc.w 0x0BCC,0x00D1
	dc.w 0x0DCC,0x00D8
	dc.w 0x0FCC,0x00D9
	dc.w 0x4CDA,0x00FF
	dc.w 0x01CC,0x00E0
	dc.w 0x03CC,0x00E1
	dc.w 0x05CC,0x00E8
	dc.w 0x07CC,0x00E9
	dc.w 0x09CC,0x00F0
	dc.w 0x0BCC,0x00F1
	dc.w 0x0DCC,0x00F8
	dc.w 0x0FCC,0x00F9
	dc.w 0x36BC,0x0000
	dc.w 0x4E75
dMuteDAC:
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dMuteDACSFX)-*-2))
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dMuteDACSFX)-*-2))
	dc.w 0x4E75
dPauseDAC:
	dc.w 0x487A
	dc.w (dUpdateChipDAC)-*
dMuteDACSFX:
	if FEATURE_SOUNDTEST
	dc.w 0x337C,0x007F
	dc.w cChipVol
	endif
	dc.w 0x49FA,0x0006
	dc.w 0x6000
	dc.w (dKeySetDAC)-*
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
dKeyOffDAC:
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dKeyOffDACSFX)-*-2))
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dKeyOffDACSFX)-*-2))
	dc.w 0x4E75
dKeyOffDACSFX:
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x286C
	dc.w stSamples
	dc.w 0x7200
	dc.w 0x1229
	dc.w cVoice
	dc.w 0xEB49
	dc.w 0x0641
	dc.w stRest
	dc.w 0xD8C1
	if SAFE_MODE
	dc.w 0x0CAC
	dc.b "SAMP"
	dc.w stDebug-stRest
	dc.w 0x6700
	dc.w (dKeySetDAC)-*
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x486C
	dc.w -stRest
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidSample)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	else
	dc.w 0x6000
	dc.w (dKeySetDAC)-*
	endif
dKeyOnDAC:
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dKeyOnDACSFX)-*-2))
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dKeyOnDACSFX)-*-2))
	dc.w 0x4E75
dKeyOnDACSFX:
	dc.w 0x2868
	dc.w ciTable
	dc.w 0x2854
	dc.w 0x286C
	dc.w stSamples
	dc.w 0x7200
	dc.w 0x1229
	dc.w cVoice
	dc.w 0xEB49
	dc.w 0x5041+((stStart)<<9)
	dc.w 0xD8C1
	if SAFE_MODE
	dc.w 0x0CAC
	dc.b "SAMP"
	dc.w stDebug-stStart
	dc.w 0x671C
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x486C
	dc.w -stStart
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidSample)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
dKeySetDAC:
	dc.w 0x7080
	dc.w 0x8038
	dc.w mEnableDAC
	dc.w 0x21CC
	dc.w mAddrDAC
	dc.w 0x11C0
	dc.w mEnableDAC
	dc.w 0x4E75
dLoadVoiceDAC:
	dc.w 0x1340
	dc.w cVoice
	dc.w 0x08D1
	dc.w cfFreq
	dc.w 0x4E75
dUnmuteDAC:
dUnmuteDACSFX:
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x4E75
dUpdateChipDAC:
	dc.w 0x4A38
	dc.w mEnableDAC
	dc.w 0x6700+(0xFF&((dUpdateChipDAC_Rts)-*-2))
	dc.w 0x2028
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateChipDACSFX2)-*-2))
	dc.w 0x2640
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateChipDACSFX2)-*-2))
	dc.w 0x4238
	dc.w mEnableDAC
dUpdateChipDAC_Rts:
	dc.w 0x4E75
dUpdateChipDAC_Sample:
	dc.l 0x00A00609
	dc.l 0x00A00E64
	dc.l 0x00A0060C
	dc.l 0x00A00E70
dUpdateChipDACSFX:
	dc.w 0x4A38
	dc.w mEnableDAC
	dc.w 0x6700+(0xFF&((dUpdateChipDAC_Rts)-*-2))
dUpdateChipDACSFX2:
	dc.w 0x47F9,0x00A1,0x1100
	dc.w 0x36BC,0x0100
	dc.w 0x0813,0x0000
	dc.w 0x66FA
	dc.w 0x4A38
	dc.w mEnableDAC
	dc.w 0x6A2C
	dc.w 0x7000
	dc.w 0x1028
	dc.w ciVoiceData
	dc.w 0x4CFB,0x0600
	dc.w 0x0000+(0xFF&((dUpdateChipDAC_Sample)-*))
	dc.w 0x12BC,0x00DA
	dc.w 0x2278
	dc.w mAddrDAC
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x14D9
	dc.w 0x0838,0x0006
	dc.w mEnableDAC
	dc.w 0x6722
	dc.w 0x3038
	dc.w mFreqDAC
	dc.w 0x3200
	dc.w 0xE048
	dc.w 0x7400
	dc.w 0x1428
	dc.w ciFreqReg
	dc.w 0x49F9,0x00A0,0x0597
	dc.w 0x1980,0x2001
	dc.w 0x1981,0x200C
	dc.w 0x19BC,0x00D2,0x20F6
	dc.w 0x36BC,0x0000
	dc.w 0x4238
	dc.w mEnableDAC
	dc.w 0x4E75
dUpdateFreqPSG:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateFreqPSGSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateFreqPSGSFX)-*-2))
	dc.w 0x4E75
dUpdateFreqPSGSFX:
	dc.w 0x0829
	dc.w cfNoMasterFreq
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterFrac
	dc.w 0x3200
	dc.w 0xE049
	if SAFE_MODE
	dc.w 0x0C41
	dc.w maxNotePSG+1
	dc.w 0x6520
	dc.w 0x0281,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meOutOfRangeNotePSG)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x0240,0x00FF
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x47FB
	dc.w 0x1000+(0xFF&((dFreqTablePSG)-*))
	dc.w 0x321B
	dc.w 0xC2C0
	dc.w 0x4841
	dc.w 0x4441
	dc.w 0xD253
	if FEATURE_SOUNDTEST
	dc.w 0x3341
	dc.w cChipFreq
	endif
	dc.w 0x700F
	dc.w 0xC041
	dc.w 0x8028
	dc.w ciFreqReg
	dc.w 0x13C0,0x00C0,0x0011
	dc.w 0xE849
	dc.w 0x13C1,0x00C0,0x0011
	dc.w 0x4E75
dFreqTablePSG:
	include "Fractal/Includes/PSGFrequencies.asm"
dUpdateVolPSG:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateVolPSGSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateVolPSGSFX)-*-2))
	dc.w 0x4E75
dUpdateVolPSGSFX:
	dc.w 0x0829
	dc.w cfNoMasterVol
	dc.w cModeFlags
	dc.w 0x6604
	dc.w 0xD078
	dc.w mMasterVolPSG
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipVol
	endif
	dc.w 0x727F
	dc.w 0xB041
	dc.w 0x6304
	dc.w 0x5AC0
	dc.w 0xC041
	dc.w 0x103B
	dc.w 0x0000+(0xFF&((dVolTablePSG)-*))
	dc.w 0x8028
	dc.w ciVolumeReg
	dc.w 0x13C0,0x00C0,0x0011
	dc.w 0x4E75
dMutePSG:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dMutePSGSFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dMutePSGSFX)-*-2))
	dc.w 0x4E75
dMutePSGSFX:
	dc.w 0x700F
	dc.w 0x8028
	dc.w ciVolumeReg
	dc.w 0x13C0,0x00C0,0x0011
	if FEATURE_SOUNDTEST
	dc.w 0x337C,0x007F
	dc.w cChipVol
	endif
	dc.w 0x4E75
dVolTablePSG:
	dc.w 0x0000,0x0000,0x0000,0x0000
	dc.w 0x0101,0x0101,0x0101,0x0101
	dc.w 0x0202,0x0202,0x0202,0x0202
	dc.w 0x0303,0x0303,0x0303,0x0303
	dc.w 0x0404,0x0404,0x0404,0x0404
	dc.w 0x0505,0x0505,0x0505,0x0505
	dc.w 0x0606,0x0606,0x0606,0x0606
	dc.w 0x0707,0x0707,0x0707,0x0707
	dc.w 0x0808,0x0808,0x0808,0x0808
	dc.w 0x0909,0x0909,0x0909,0x0909
	dc.w 0x0A0A,0x0A0A,0x0A0A,0x0A0A
	dc.w 0x0B0B,0x0B0B,0x0B0B,0x0B0B
	dc.w 0x0C0C,0x0C0C,0x0C0C,0x0C0C
	dc.w 0x0D0D,0x0D0D,0x0D0D,0x0D0D
	dc.w 0x0E0E,0x0E0E,0x0E0E,0x0E0E
	dc.w 0x0F0F,0x0F0F,0x0F0F,0x0F0F
dUpdateNoisePSG4:
	dc.w 0x2228
	dc.w ciMirror
	dc.w 0x6700+(0xFF&((dUpdateNoisePSG4SFX)-*-2))
	dc.w 0x2641
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6A00+(0xFF&((dUpdateNoisePSG4SFX)-*-2))
	dc.w 0x4E75
dUpdateNoisePSG4SFX:
	dc.w 0xE048
	dc.w 0x0240,0x0007
	if FEATURE_SOUNDTEST
	dc.w 0x3340
	dc.w cChipFreq
	endif
	dc.w 0x0000,0x00E0
	dc.w 0x13C0,0x00C0,0x0011
	dc.w 0x1340
	dc.w cVoice
	dc.w 0x4E75
dLoadVoicePSG:
dLoadVoicePSGSFX:
	if SAFE_MODE
	dc.w 0x0280,0x0000,0x00FF
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F00
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meVoicesPSG)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	else
	dc.w 0x4E75
	endif
dStringFM1SFX:
	dc.b "SFX FM1",0
dStringFM2SFX:
	dc.b "SFX FM2",0
dStringFM4SFX:
	dc.b "SFX FM4",0
dStringFM5SFX:
	dc.b "SFX FM5",0
dStringFM1:
	dc.b "Music FM1",0
dStringFM2:
	dc.b "Music FM2",0
dStringFM4:
	dc.b "Music FM4",0
dStringFM5:
	dc.b "Music FM5",0
dStringFM6:
	dc.b "Music FM6",0
dStringFM3o1:
	dc.b "Music FM3 op 1",0
dStringFM3o2:
	dc.b "Music FM3 op 2",0
dStringFM3o3:
	dc.b "Music FM3 op 3",0
dStringFM3o4:
	dc.b "Music FM3 op 4",0
dStringTA:
	dc.b "Music Timer A",0
dStringDAC2SFX:
	dc.b "SFX DAC2",0
dStringDAC1:
	dc.b "Music DAC1",0
dStringDAC2:
	dc.b "Music DAC2",0
dStringPSG1SFX:
	dc.b "SFX PSG1",0
dStringPSG2SFX:
	dc.b "SFX PSG2",0
dStringPSG3SFX:
	dc.b "SFX PSG3",0
dStringPSG4SFX:
	dc.b "SFX PSG4",0
dStringPSG1:
	dc.b "Music PSG1",0
dStringPSG2:
	dc.b "Music PSG2",0
dStringPSG3:
	dc.b "Music PSG3",0
dStringPSG4:
	dc.b "Music PSG4",0
	even
	if SAFE_MODE
ddConsole_Channel:
	dc.w 0x40E7
	dc.w 0x2F08
	dc.w 0x2F00
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d0: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a0: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F09
	dc.w 0x2F01
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d1: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a1: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0A
	dc.w 0x2F02
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d2: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a2: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0B
	dc.w 0x2F03
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d3: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a3: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0C
	dc.w 0x2F04
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d4: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a4: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0D
	dc.w 0x2F05
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d5: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a5: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0E
	dc.w 0x2F06
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d6: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a6: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0F
	dc.w 0x2F07
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d7: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "sp: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_startnewline
	dc.w 0x46DF
	dc.w 0x40E7
	dc.w 0x2F28
	dc.w ciString
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x584F
	dc.w 0x46DF
	dc.w 0x6000,0x000C
	dc.b 0xEA
	dc.b "Chan: "
	dc.b 0xE8
	dc.b 0xD3
	dc.b 0x00
	even
	dc.w 0x2011
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x40E7
	dc.w 0x2F00
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x584F
	dc.w 0x46DF
	dc.w 0x6000,0x000E
	dc.b 0xEA
	dc.b "Addr: "
	dc.b 0xE8
	dc.b 0xBB
	dc.b 0xEC
	dc.b 0xC0
	dc.b 0x00
	even
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_startnewline
	dc.w 0x46DF
	dc.w 0x7000
	dc.w 0x1029
	dc.w cCallStack
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F40,0x0001
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x544F
	dc.w 0x46DF
	dc.w 0x6000,0x000E
	dc.b 0xEA
	dc.b "Stack: "
	dc.b 0xEC
	dc.b 0x80
	dc.w 0x0000
	even
	dc.w 0x3209
	dc.w 0x0641
	dc.w cStack
	dc.w 0xD2C0
	dc.w 0xB249
	dc.w 0x6332
	dc.w 0x2021
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x40E7
	dc.w 0x2F00
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x584F
	dc.w 0x46DF
	dc.w 0x6000,0x0008
	dc.b 0xE8
	dc.b 0xBB
	dc.b 0xEC
	dc.b 0xC0
	dc.w 0x0000
	even
	dc.w 0x60CA
	dc.w 0x4E75
ddConsole_Main:
	dc.w 0x40E7
	dc.w 0x2F08
	dc.w 0x2F00
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d0: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a0: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F09
	dc.w 0x2F01
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d1: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a1: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0A
	dc.w 0x2F02
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d2: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a2: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0B
	dc.w 0x2F03
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d3: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a3: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0C
	dc.w 0x2F04
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d4: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a4: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0D
	dc.w 0x2F05
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d5: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a5: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0E
	dc.w 0x2F06
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d6: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "a6: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x2F0F
	dc.w 0x2F07
	dc.w 0x48E7,0x01E0
	dc.w 0x45EF,0x0010
	dc.w 0x43FA,0x0014
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_WriteLine_formatted
	dc.w 0x4CDF,0x0780
	dc.w 0x504F
	dc.w 0x46DF
	dc.w 0x6000,0x0016
	dc.b "  "
	dc.b 0xE8
	dc.b "d7: "
	dc.b 0xEC
	dc.b 0x83
	dc.b "  "
	dc.b 0xE8
	dc.b "sp: "
	dc.b 0xEC
	dc.b 0x83
	dc.w 0x0000
	even
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler___global__console_startnewline
	dc.w 0x46DF
	dc.w 0x4E75
ddHandleError:
	dc.w 0x2E2F
	dc.w ddStackError
	dc.w 0x0C47
	dc.w meMax
	dc.w 0x6200,0xFFFE
	dc.w 0x0807,0x0000
	dc.w 0x6600,0xFFFE
	dc.w 0x0807,0x0001
	dc.w 0x6600,0xFFFE
	dc.w 0x21EF
	dc.w ddStackExtra
	dc.w mErrorExtra
	dc.w 0x21EF
	dc.w ddStackChannel
	dc.w mErrorChannel
	dc.w 0x2F3B,0x7014
	dc.w 0x2E2F,0x0014
	dc.w 0xDEFC,0x0018
	dc.w 0x2F2F,0xFFEC
	dc.w 0x2F2F,0xFFEC
	dc.w 0x4E75
	dc.l ddError_CueFail
	dc.l ddError_InvalidQueue
	dc.l ddError_TrackFail
	dc.l ddError_InvalidChannel
	dc.l ddError_VoicesTA
	dc.l ddError_VoicesPSG
	dc.l ddError_OutOfRangeNoteTA
	dc.l ddError_OutOfRangeNotePSG
	dc.l ddError_OutOfRangeNoteDAC
	dc.l ddError_OutOfRangeNoteFM
	dc.l ddError_InvalidFilter
	dc.l ddError_InvalidSample
	dc.l ddError_InvalidVoice
	dc.l ddError_InvalidVibratoShape
	dc.l ddError_InvalidDelay
	dc.l ddError_CallStack
	dc.l ddError_FastCut
	dc.l ddError_LFO
	dc.l ddError_AMSFMS
	dc.l ddError_OpMask
	dc.l ddError_TLAB
	dc.l ddError_YM
	dc.l ddError_Cont
ddError_CueFail:
	dc.w 0x40E7
	dc.w 0x2F38
	dc.w mErrorExtra
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Dual PCM Cue is invalid: "
	dc.b 0x83
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xFAC0
	even
ddError_InvalidQueue:
	dc.w 0x40E7
	dc.w 0x3F38
	dc.w mErrorExtra+2
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid sound ID: "
	dc.b 0x81
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFD4A
	even
ddError_InvalidVibratoShape:
	dc.w 0x40E7
	dc.w 0x3F38
	dc.w mErrorExtra+2
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid vibrato shape: "
	dc.b 0x81
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xFD20
	even
ddError_TrackFail:
	dc.w 0x40E7
	dc.w 0x2F38
	dc.w mErrorExtra
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid track address: "
	dc.b 0xE8
	dc.b 0xBB
	dc.b 0xEC
	dc.b 0xC0
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFA42
	even
ddError_InvalidDelay:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid delay ID: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFCC8
	even
ddError_InvalidCommand:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid command ID: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFC9C
	even
ddError_FastCut:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sFastCut on an invalid channel!"
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF9AE
	even
ddError_LFO:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sLFO on an invalid channel!"
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF974
	even
ddError_AMSFMS:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sAMSFMS on an invalid channel!"
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF936
	even
ddError_OpMask:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sOpMask on an invalid channel!"
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF8F8
	even
ddError_TLAB:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sTLA/sTLB on an invalid channel!"
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF8B8
	even
ddError_YM:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sYM on an invalid channel!"
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF87E
	even
ddError_Cont:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Attempted to use sCont on a music channel!"
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF846
	even
ddError_InvalidChannel:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid channel type: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFAC8
	even
ddError_VoicesPSG:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "PSG channels can't load voices!"
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFA9A
	even
ddError_OutOfRangeNotePSG:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Out of range PSG note: "
	dc.b 0x80
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xFA6C
	even
ddError_VoicesTA:
	dc.w 0x40E7
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "TA channels can't load voices!"
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xFA40
	even
ddError_OutOfRangeNoteTA:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Out of range TA note: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xFA12
	even
ddError_OutOfRangeNoteDAC:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Out of range DAC note: "
	dc.b 0x80
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF9E4
	even
ddError_InvalidFilter:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid DAC filter: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF9B8
	even
ddError_InvalidSample:
	dc.w 0x40E7
	dc.w 0x2F38
	dc.w mErrorExtra
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid DAC sample: "
	dc.b 0xE8
	dc.b 0xBB
	dc.b 0xEC
	dc.b 0xC0
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF98E
	even
ddError_OutOfRangeNoteFM:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Out of range FM note: "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF960
	even
ddError_InvalidVoice:
	dc.w 0x40E7
	dc.w 0x2F38
	dc.w mErrorExtra
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid FM voice: "
	dc.b 0xE8
	dc.b 0xBB
	dc.b 0xEC
	dc.b 0xC0
	dc.b 0x00
	dc.b 0x40
	even
	dc.w 0x4EFA,0xF688
	even
ddError_CallStack:
	dc.w 0x40E7
	dc.w 0x554F
	dc.w 0x1F78
	dc.w mErrorExtra+3
	dc.w 0x0001
	dc.w 0x4EB9
	dc.l ErrorHandler
	dc.b "Invalid call stack position "
	dc.b 0x80
	dc.b 0x00
	dc.w 0xC000
	even
	dc.w 0x4EFA,0xF654
	even
	endif
dTempData:
dDelayTable:
	include "Fractal/Includes/DelayTable.asm"
	even
dFilterTable:
	include "Fractal/Includes/DACFilterTable.asm"
	even
dSoundTable:
	include "Fractal/Includes/SongTable.asm"
dVibLUTs:
	include "Fractal/Includes/Shapes.asm"
dSoundData:
	include "Fractal/Includes/SongData.asm"
dSoundData_End:
	align	0x4000
dSampleData:
	include "Fractal/Includes/Samples.asm"
	even
dSampleData_End:
	include "Fractal/Includes/DACFilters.asm"
	if VISUAL_DEBUG
dVisualDebugger:
	dc.w 0x46FC,0x2700
	dc.w 0x20BC
	dc.l dvVint
	dc.w 0x21C9
	dc.w dvExternalProc
	dc.w 0x4DF9,0x00C0,0x0000
	dc.w 0x41FA
	dc.w (dvRegsVDP)-*
	dc.w 0x7006
	dc.w 0x2D58,0x0004
	dc.w 0x51C8,0xFFFA
	dc.w 0x41F9
	dc.l dvFont
	dc.w 0x303C,0x07FF
	dc.w 0x2D7C,0x4000,0x0000,0x0004
	dc.w 0x3C98
	dc.w 0x51C8,0xFFFC
	dc.w 0x41F9
	dc.l dvPalette
	dc.w 0x2D7C,0xC000,0x0000,0x0004
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2C98
	dc.w 0x2D7C,0x4D80,0x0003,0x0004
	dc.w 0x4BFA
	dc.w (dvsProgram)-*
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x41F9
	dc.l dvHistory
	dc.w 0x7000
	dc.w 0x323C,0x177F
	dc.w 0x20C0
	dc.w 0x51C9,0xFFFC
	dc.w 0x2D7C,0x5000,0x0003,0x0004
	dc.w 0x203C,0x6001,0x6001
	dc.w 0x323C,0x037F
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x7000
	dc.w 0x4EBA
	dc.w (dvmChannels_SetSong)-*
	dc.w 0x31FC
	dc.w snd_First
	dc.w dvSndTestId
	dc.w 0x4238
	dc.w dvGrapParam
	dc.w 0x4278
	dc.w dvFullHisPos
	dc.w 0x4278
	dc.w dvTestType
	dc.w 0x4278
	dc.w dvTestId
	dc.w 0x50F8
	dc.w dvAdvance
	dc.w 0x11FC,0x0002
	dc.w dvmSelChan
	dc.w 0x4EBA
	dc.w (dvFetchChannelInfo)-*
	dc.w 0x67FE
	dc.w 0x21C8
	dc.w dvChanData
	dc.w 0x31C1
	dc.w dvChanOffs
	dc.w 0x50F8
	dc.w dvmSelChan
	dc.w 0x11FC,0x0080
	dc.w dvModeId
	dc.w 0x703C
	dc.w 0x4EBA
	dc.w (dvLoadMode2)-*
	dc.w 0x4EBA
	dc.w (dvUpdateButtonRow)-*
	dc.w 0x42B8
	dc.w dvRawPadHold
	dc.w 0x42B8
	dc.w dvPadHold
	dc.w 0x3D7C,0x8174,0x0004
	dc.w 0x303C
	dc.w cmd_Reset
	dc.w 0x4EB9
	dc.l dFractalQueue
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x67FA
	dc.w 0x4238
	dc.w dvIntFlag
	dc.w 0x2078
	dc.w dvModeUpdate
	dc.w 0x4E90
	dc.w 0x60EE
dvWriteMultiString_Next:
	dc.w 0x4BF4,0x00FE
	dc.w 0x2D5D,0x0004
	dc.w 0x6100+(0xFF&((dvWriteString)-*-2))
dvWriteMultiString:
	dc.w 0x301C
	dc.w 0x6600+(0xFF&((dvWriteMultiString_Next)-*-2))
	dc.w 0x4E75
dvWriteString_Char:
	dc.w 0x3C86
dvWriteString:
	dc.w 0x1C1D
	dc.w 0x6600+(0xFF&((dvWriteString_Char)-*-2))
	dc.w 0x4E75
dWriteNumberMapped_OffsetA1:
	dc.w 0x2D5D,0x0004
	dc.w 0x1C3C,0x0024
	dc.w 0x3C86
	dc.w 0x7A00
	dc.w 0x1A1D
	dc.w 0x161D
	dc.w 0x3815
	dc.w 0x4BF1,0x4000
	dc.w 0x6000+(0xFF&((dWriteNumberMapped_GotAddress)-*-2))
dWriteNumberMapped2:
	dc.w 0x2D5D,0x0004
	dc.w 0x6000+(0xFF&((dWriteNumberMapped_NoDollar)-*-2))
dWriteNumberMapped:
	dc.w 0x2D5D,0x0004
	dc.w 0x1C3C,0x0024
	dc.w 0x3C86
dWriteNumberMapped_NoDollar:
	dc.w 0x3A1D
	dc.w 0x1615
	dc.w 0x2A55
dWriteNumberMapped_GotAddress:
	dc.w 0x4A03
	dc.w 0x6706
	dc.w 0x6B08
	dc.w 0x2615
	dc.w 0x6000+(0xFF&((dWriteNumber)-*-2))
	dc.w 0x3615
	dc.w 0x6000+(0xFF&((dWriteNumber)-*-2))
	dc.w 0x1615
dWriteNumber:
	dc.w 0x3805
	dc.w 0x1403
	dc.w 0x0242,0x000F
	dc.w 0x1C3B,0x2012
	dc.w 0x3F06
	dc.w 0xE89B
	dc.w 0x51CD,0xFFF0
	dc.w 0x3C9F
	dc.w 0x51CC,0xFFFC
	dc.w 0x4E75
	dc.b "0123456789ABCDEF"
dvIsSoloed:
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3650
	dc.w 0x41F9
	dc.l dChannelInfoAllSFX
	dc.w 0x6116
	dc.w 0x6610
	dc.w 0x41F9
	dc.l dChannelInfoFM3o1
	dc.w 0x600C
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6604
	dc.w 0x7000
	dc.w 0x4E75
	dc.w 0xD0C0
	dc.w 0x3250
	dc.w 0x0829
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x66EA
	dc.w 0xB6C9
	dc.w 0x67E6
	dc.w 0x4E75
dvToggleSolo:
	dc.w 0x4EBA
	dc.w (dvIsSoloed)-*
	dc.w 0x56C2
	dc.w 0x41F9
	dc.l dChannelInfoAllSFX
	dc.w 0x612C
	dc.w 0x41F9
	dc.l dChannelInfoFM3o1
	dc.w 0x6124
	dc.w 0x4A02
	dc.w 0x6700+(0xFF&((dvUpdateButtonRow)-*-2))
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x08A9
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x6000+(0xFF&((dvUpdateButtonRow)-*-2))
	dc.w 0x3028
	dc.w ciNext
	dc.w 0x6602
	dc.w 0x4E75
	dc.w 0xD0C0
	dc.w 0x3250
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x08E9
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x4A02
	dc.w 0x66E6
	dc.w 0x08A9
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x60DE
dvUpdateButtonRow:
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4C84,0x0003,0x0004
	dc.w 0x2CBC,0x4058,0x403D
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x4BFA,0x0058
	dc.w 0x0829
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x6704
	dc.w 0x4BFA,0x0053
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x2D7C,0x4C9E,0x0003,0x0004
	dc.w 0x2CBC,0x4059,0x403D
	dc.w 0x4BFA,0x004E
	dc.w 0x4A38
	dc.w dvAdvance
	dc.w 0x6B04
	dc.w 0x4BFA,0x004D
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x2D7C,0x4CB6,0x0003,0x0004
	dc.w 0x2CBC,0x405A,0x403D
	dc.w 0x4BFA,0x0024
	dc.w 0x4EBA
	dc.w (dvIsSoloed)-*
	dc.w 0x6604
	dc.w 0x4BFA,0x001F
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
	dc.b "Mute  ",0
	dc.b "Unmute",0
	dc.b "Solo",0
	dc.b "All ",0
	dc.b "Freeze  ",0
	dc.b "Unfreeze",0
	even
dvCheckFunctions:
	dc.w 0x0838,0x0002
	dc.w dvPadPress
	dc.w 0x671C
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x0869
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x08D1
	dc.w cfVolume
	dc.w 0x4EFA
	dc.w (dvUpdateButtonRow)-*
	dc.w 0x0838,0x0000
	dc.w dvPadPress
	dc.w 0x6704
	dc.w 0x4EFA
	dc.w (dvToggleSolo)-*
	dc.w 0x0838,0x0001
	dc.w dvPadPress
	dc.w 0x670E
	dc.w 0x4A38
	dc.w dvAdvance
	dc.w 0x5AF8
	dc.w dvAdvance
	dc.w 0x4EFA
	dc.w (dvUpdateButtonRow)-*
	dc.w 0x4E75
	dc.w 0x7070
	dc.w 0xC078
	dc.w dvPadPress
	dc.w 0x67F6
	dc.w 0x588F
dvUpdateMode:
	dc.w 0x0800,0x0004
	dc.w 0x670C
	dc.w 0x0878,0x0007
	dc.w dvModeId
	dc.w 0x6600+(0xFF&((dvLoadMode)-*-2))
	dc.w 0x703C
	dc.w 0x6000+(0xFF&((dvLoadMode2)-*-2))
	dc.w 0x0800,0x0006
	dc.w 0x6712
	dc.w 0x707F
	dc.w 0xC038
	dc.w dvModeId
	dc.w 0x0400,0x000C
	dc.w 0x6A00+(0xFF&((dvSetMode)-*-2))
	dc.w 0x7030
	dc.w 0x6000+(0xFF&((dvSetMode)-*-2))
	dc.w 0x4E75
	dc.w 0x0800,0x0005
	dc.w 0x67F8
	dc.w 0x707F
	dc.w 0xC038
	dc.w dvModeId
	dc.w 0x0600,0x000C
	dc.w 0x0C00,0x003C
	dc.w 0x6500+(0xFF&((dvSetMode)-*-2))
	dc.w 0x7000
dvSetMode:
	dc.w 0x11C0
	dc.w dvModeId
dvLoadMode:
	dc.w 0x7000
	dc.w 0x1038
	dc.w dvModeId
dvLoadMode2:
	dc.w 0x41FA
	dc.w (dvModesList)-*
	dc.w 0x43F0,0x0000
	dc.w 0x1038
	dc.w dvModeId
	dc.w 0x21D9
	dc.w dvModeUpdate
	dc.w 0x11C0
	dc.w dvModeId
	dc.w 0x46FC,0x2700
	dc.w 0x6100
	dc.w (dvResetPlanes)-*
	dc.w 0x46FC,0x2300
	dc.w 0x2251
	dc.w 0x4E91
	dc.w 0x41FA
	dc.w (dvModesList)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4A38
	dc.w dvModeId
	dc.w 0x6A08
	dc.w 0x707F
	dc.w 0xC038
	dc.w dvModeId
	dc.w 0x6006
	dc.w 0x703C
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4D1E,0x0003,0x0004
	dc.w 0x2CBC,0x4042,0x403D
	dc.w 0x6146
	dc.w 0x707F
	dc.w 0xC038
	dc.w dvModeId
	dc.w 0x0600,0x000C
	dc.w 0x0C00,0x003C
	dc.w 0x6502
	dc.w 0x7000
	dc.w 0x2D7C,0x4D36,0x0003,0x0004
	dc.w 0x2CBC,0x4043,0x403D
	dc.w 0x6124
	dc.w 0x707F
	dc.w 0xC038
	dc.w dvModeId
	dc.w 0x0400,0x000C
	dc.w 0x6A02
	dc.w 0x7030
	dc.w 0x2D7C,0x4D04,0x0003,0x0004
	dc.w 0x2CBC,0x4041,0x403D
	dc.w 0x6106
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
	dc.w 0x2A70,0x0008
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvResetPlanes:
	dc.w 0x7200
	dc.w 0x2D7C,0x7002,0x0003,0x0004
	dc.w 0x3C81
	dc.w 0x2D7C,0x4000,0x0003,0x0004
	dc.w 0x303C,0x0320
	dc.w 0x610C
	dc.w 0x2D7C,0x6000,0x0003,0x0004
	dc.w 0x303C,0x0380
	dc.w 0x2C81
	dc.w 0x51C8,0xFFFC
	dc.w 0x4E75
dvVint:
	dc.w 0x48E7,0xFFFC
	dc.w 0x5238
	dc.w dvFrame
	dc.w 0x50F8
	dc.w dvIntFlag
	dc.w 0x4EBA
	dc.w (dvReadPad)-*
	dc.w 0x7003
	dc.w 0xC038
	dc.w dvFrame
	dc.w 0x6610
	dc.w 0x5478
	dc.w dvFullHisPos
	dc.w 0x0C78
	dc.w dvGraphHis2Sz*2
	dc.w dvFullHisPos
	dc.w 0x6D04
	dc.w 0x4278
	dc.w dvFullHisPos
	dc.w 0xD000
	dc.w 0xD000
	dc.w 0x3838
	dc.w dvFullHisPos
	dc.w 0x47FA
	dc.w (dvChannelOffs)-*
	dc.w 0x4BFA
	dc.w (dvChannelList)-*
	dc.w 0xD6C0
	dc.w 0x101B
	dc.w 0x6100
	dc.w (dvVint_DoHistory)-*
	dc.w 0x7000
	dc.w 0x101B
	dc.w 0x6100
	dc.w (dvVint_DoHistory)-*
	dc.w 0x7000
	dc.w 0x101B
	dc.w 0x6100
	dc.w (dvVint_DoHistory)-*
	dc.w 0x7000
	dc.w 0x101B
	dc.w 0x6100
	dc.w (dvVint_DoHistory)-*
	dc.w 0x4A38
	dc.w dvModeId
	dc.w 0x6A20
	dc.w 0x2D7C
	dc.l 0x94009300|((((dvPianoSpSize)>>1)&0xFF00)<<8)|(((dvPianoSpSize)>>1)&0xFF)
	dc.w 0x0004
	dc.w 0x2D7C
	dc.l 0x96009500|((((dvPianoSprites)>>1)&0xFF00)<<8)|(((dvPianoSprites)>>1)&0xFF)
	dc.w 0x0004
	dc.w 0x3D7C
	dc.w 0x9700|(((dvPianoSprites)>>17)&0x7F)
	dc.w 0x0004
	dc.w 0x2D7C,0x7400,0x0083,0x0004
	dc.w 0x601E
	dc.w 0x2D7C
	dc.l 0x94009300|((((dvPianoSpSize)>>1)&0xFF00)<<8)|(((dvPianoSpSize)>>1)&0xFF)
	dc.w 0x0004
	dc.w 0x2D7C
	dc.l 0x96009500|((((dvNullSprites)>>1)&0xFF00)<<8)|(((dvNullSprites)>>1)&0xFF)
	dc.w 0x0004
	dc.w 0x3D7C
	dc.w 0x9700|(((dvNullSprites)>>17)&0x7F)
	dc.w 0x0004
	dc.w 0x2D7C,0x7400,0x0083,0x0004
	dc.w 0x4A38
	dc.w dvAdvance
	dc.w 0x6724
	dc.w 0x6B04
	dc.w 0x4238
	dc.w dvAdvance
	dc.w 0x44EE,0x0004
	dc.w 0x6BFA
	dc.w 0x2078
	dc.w dvExternalProc
	dc.w 0x4E90
	dc.w 0x3D7C,0x9193,0x0004
	dc.w 0x4EB9
	dc.l dFractalSound
	dc.w 0x3D7C,0x9100,0x0004
	dc.w 0x4CDF,0x3FFF
	dc.w 0x4E73
dvVint_DoHistory:
	dc.w 0x6B38
	dc.w 0x2475,0x0000
	dc.w 0x2412
	dc.w 0x202A
	dc.w dvMusHistory
	dc.w 0x6108
	dc.w 0x242A
	dc.w dvSfxInfo
	dc.w 0x202A
	dc.w dvSfxHistory
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x671C
	dc.w 0x2040
	dc.w 0x49FA
	dc.w (dvGraphParams)-*
	dc.w 0x7600+((dvGraphParams_End-dvGraphParams)/4-1)
	dc.w 0x225C
	dc.w 0xC588
	dc.w 0x4EA9,0x0018
	dc.w 0xC588
	dc.w 0x2258
	dc.w 0x3380,0x4000
	dc.w 0x51CB,0xFFEE
	dc.w 0x4E75
dvRegsVDP:
	dc.w 0x8004
	dc.w 0x8114
	dc.w 0x8230
	dc.w 0x8334
	dc.w 0x8407
	dc.w 0x857A
	dc.w 0x8700
	dc.w 0x8B00
	dc.w 0x8C81
	dc.w 0x8D3C
	dc.w 0x8F02
	dc.w 0x9001
	dc.w 0x9100
	dc.w 0x9200
dvRegsVDP_End:
dvReadPad:
	dc.w 0x41F9,0x00A1,0x0003
	dc.w 0x7640
	dc.w 0x1083
	dc.w 0x43F8
	dc.w dvRawPadHold
	dc.w 0x7400
	dc.w 0x7200
	dc.w 0x1210
	dc.w 0x1082
	dc.w 0x7000
	dc.w 0x0201,0x003F
	dc.w 0x4E71
	dc.w 0x1010
	dc.w 0x1083
	dc.w 0x0200,0x0030
	dc.w 0x8080
	dc.w 0x1082
	dc.w 0xD000
	dc.w 0xD000
	dc.w 0x8080
	dc.w 0x1083
	dc.w 0x8081
	dc.w 0x8080
	dc.w 0x1082
	dc.w 0x4E71
	dc.w 0x8080
	dc.w 0x780F
	dc.w 0xC810
	dc.w 0x57C4
	dc.w 0x1083
	dc.w 0x720F
	dc.w 0xC801
	dc.w 0x8080
	dc.w 0xC210
	dc.w 0x1082
	dc.w 0x4604
	dc.w 0x8204
	dc.w 0xE149
	dc.w 0x1083
	dc.w 0x8041
	dc.w 0x4640
	dc.w 0x3211
	dc.w 0xB141
	dc.w 0x32C0
	dc.w 0xC240
	dc.w 0x32C1
	dc.w 0x0800,0x0007
	dc.w 0x6722
	dc.w 0x3400
	dc.w 0xE64A
	dc.w 0x0242,0x000E
	dc.w 0x6728
	dc.w 0x0240,0x000F
	dc.w 0x807B,0x2002
	dc.w 0x6022
	dc.w 0x4200,0x4100,0x4300
	dc.w 0x4400,0x4600,0x4500,0x4700
	dc.w 0x0891,0x0006
	dc.w 0x661C
	dc.w 0x4A51
	dc.w 0x6A0A
	dc.w 0x08C0,0x0007
	dc.w 0x6012
	dc.w 0x0A40,0x8080
	dc.w 0x0811,0x0006
	dc.w 0x6708
	dc.w 0x0240,0x7F7F
	dc.w 0x0040,0x4000
	dc.w 0x3211
	dc.w 0xB141
	dc.w 0x32C0
	dc.w 0xC240
	dc.w 0x32C1
	dc.w 0x4E75
dvsProgram:
	dc.b " ** FRACTAL SOUND ** VISUAL DEBUGGER ** ",0
dvsTracker:
	dc.b "Tracker  ",0
dvsGraph:
	dc.b "Graph    ",0
dvsPiano:
	dc.b "Piano    ",0
dvsTestScale:
	dc.b "Test&Edit",0
dvsStatus:
	dc.b "Status   ",0
dvsGlobal:
	dc.b "Global   ",0
	even
dvModesList:
	dc.l dvmUpd_Tracker,dvmInit_Tracker,dvsTracker
	dc.l dvmUpd_Graph,dvmInit_Graph,dvsGraph
	dc.l dvmUpd_TestScale,dvmInit_TestScale,dvsTestScale
	dc.l dvmUpd_Global,dvmInit_Global,dvsGlobal
	dc.l dvmUpd_Status,dvmInit_Status,dvsStatus
dvModesList_End:
	dc.l dvmUpd_Piano,dvmInit_Piano,dvsPiano
dvChannelOffs:
	dc.b 0x00,0x04,0x08,0x0C,0x10
	dc.b 0x18,0x1C,0x20,0x24,0x28
	dc.w 0x3034
	dc.w 0x3C40,0x4448
	even
dvChannelList:
	dc.l dvChannelInfoFM1
	dc.l dvChannelInfoFM2
	dc.l dvChannelInfoFM4
	dc.l dvChannelInfoFM5
	dc.l dvChannelInfoFM6
	dc.l dvChannelInfoSpace
	dc.l dvChannelInfoTA
	dc.l dvChannelInfoFM3o1
	dc.l dvChannelInfoFM3o2
	dc.l dvChannelInfoFM3o3
	dc.l dvChannelInfoFM3o4
	dc.l dvChannelInfoSpace
	dc.l dvChannelInfoDAC1
	dc.l dvChannelInfoDAC2
	dc.l dvChannelInfoSpace
	dc.l dvChannelInfoPSG1
	dc.l dvChannelInfoPSG2
	dc.l dvChannelInfoPSG3
	dc.l dvChannelInfoPSG4
	dc.l 0
	even
dHistoryInfoFM3o1:
	dc.l dvHistory_FM3o1+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM3o1+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM3o1+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM3o1+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM3o1+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM3o1+(10*dvGraphHis2Sz)
dHistoryInfoFM3o2:
	dc.l dvHistory_FM3o2+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM3o2+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM3o2+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM3o2+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM3o2+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM3o2+(10*dvGraphHis2Sz)
dHistoryInfoFM3o3:
	dc.l dvHistory_FM3o3+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM3o3+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM3o3+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM3o3+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM3o3+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM3o3+(10*dvGraphHis2Sz)
dHistoryInfoFM3o4:
	dc.l dvHistory_FM3o4+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM3o4+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM3o4+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM3o4+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM3o4+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM3o4+(10*dvGraphHis2Sz)
dHistoryInfoTA:
	dc.l dvHistory_TA+(0*dvGraphHis2Sz)
	dc.l dvHistory_TA+(2*dvGraphHis2Sz)
	dc.l dvHistory_TA+(4*dvGraphHis2Sz)
	dc.l dvHistory_TA+(6*dvGraphHis2Sz)
	dc.l dvHistory_TA+(8*dvGraphHis2Sz)
	dc.l dvHistory_TA+(10*dvGraphHis2Sz)
dHistoryInfoFM1:
	dc.l dvHistory_FM1+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM1+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM1+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM1+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM1+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM1+(10*dvGraphHis2Sz)
dHistoryInfoFM2:
	dc.l dvHistory_FM2+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM2+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM2+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM2+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM2+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM2+(10*dvGraphHis2Sz)
dHistoryInfoFM4:
	dc.l dvHistory_FM4+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM4+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM4+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM4+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM4+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM4+(10*dvGraphHis2Sz)
dHistoryInfoFM5:
	dc.l dvHistory_FM5+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM5+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM5+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM5+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM5+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM5+(10*dvGraphHis2Sz)
dHistoryInfoFM6:
	dc.l dvHistory_FM6+(0*dvGraphHis2Sz)
	dc.l dvHistory_FM6+(2*dvGraphHis2Sz)
	dc.l dvHistory_FM6+(4*dvGraphHis2Sz)
	dc.l dvHistory_FM6+(6*dvGraphHis2Sz)
	dc.l dvHistory_FM6+(8*dvGraphHis2Sz)
	dc.l dvHistory_FM6+(10*dvGraphHis2Sz)
dHistoryInfoFMSFX1:
	dc.l dvHistory_SFXFM1+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM1+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM1+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM1+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM1+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM1+(10*dvGraphHis2Sz)
dHistoryInfoFMSFX2:
	dc.l dvHistory_SFXFM2+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM2+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM2+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM2+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM2+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM2+(10*dvGraphHis2Sz)
dHistoryInfoFMSFX4:
	dc.l dvHistory_SFXFM4+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM4+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM4+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM4+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM4+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM4+(10*dvGraphHis2Sz)
dHistoryInfoFMSFX5:
	dc.l dvHistory_SFXFM5+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM5+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM5+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM5+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM5+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXFM5+(10*dvGraphHis2Sz)
dHistoryInfoDAC1:
	dc.l dvHistory_DAC1+(0*dvGraphHis2Sz)
	dc.l dvHistory_DAC1+(2*dvGraphHis2Sz)
	dc.l dvHistory_DAC1+(4*dvGraphHis2Sz)
	dc.l dvHistory_DAC1+(6*dvGraphHis2Sz)
	dc.l dvHistory_DAC1+(8*dvGraphHis2Sz)
	dc.l dvHistory_DAC1+(10*dvGraphHis2Sz)
dHistoryInfoDAC2:
	dc.l dvHistory_DAC2+(0*dvGraphHis2Sz)
	dc.l dvHistory_DAC2+(2*dvGraphHis2Sz)
	dc.l dvHistory_DAC2+(4*dvGraphHis2Sz)
	dc.l dvHistory_DAC2+(6*dvGraphHis2Sz)
	dc.l dvHistory_DAC2+(8*dvGraphHis2Sz)
	dc.l dvHistory_DAC2+(10*dvGraphHis2Sz)
dHistoryInfoDAC2SFX:
	dc.l dvHistory_SFXDAC2+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXDAC2+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXDAC2+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXDAC2+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXDAC2+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXDAC2+(10*dvGraphHis2Sz)
dHistoryInfoPSG1:
	dc.l dvHistory_PSG1+(0*dvGraphHis2Sz)
	dc.l dvHistory_PSG1+(2*dvGraphHis2Sz)
	dc.l dvHistory_PSG1+(4*dvGraphHis2Sz)
	dc.l dvHistory_PSG1+(6*dvGraphHis2Sz)
	dc.l dvHistory_PSG1+(8*dvGraphHis2Sz)
	dc.l dvHistory_PSG1+(10*dvGraphHis2Sz)
dHistoryInfoPSG2:
	dc.l dvHistory_PSG2+(0*dvGraphHis2Sz)
	dc.l dvHistory_PSG2+(2*dvGraphHis2Sz)
	dc.l dvHistory_PSG2+(4*dvGraphHis2Sz)
	dc.l dvHistory_PSG2+(6*dvGraphHis2Sz)
	dc.l dvHistory_PSG2+(8*dvGraphHis2Sz)
	dc.l dvHistory_PSG2+(10*dvGraphHis2Sz)
dHistoryInfoPSG3:
	dc.l dvHistory_PSG3+(0*dvGraphHis2Sz)
	dc.l dvHistory_PSG3+(2*dvGraphHis2Sz)
	dc.l dvHistory_PSG3+(4*dvGraphHis2Sz)
	dc.l dvHistory_PSG3+(6*dvGraphHis2Sz)
	dc.l dvHistory_PSG3+(8*dvGraphHis2Sz)
	dc.l dvHistory_PSG3+(10*dvGraphHis2Sz)
dHistoryInfoPSG4:
	dc.l dvHistory_PSG4+(0*dvGraphHis2Sz)
	dc.l dvHistory_PSG4+(2*dvGraphHis2Sz)
	dc.l dvHistory_PSG4+(4*dvGraphHis2Sz)
	dc.l dvHistory_PSG4+(6*dvGraphHis2Sz)
	dc.l dvHistory_PSG4+(8*dvGraphHis2Sz)
	dc.l dvHistory_PSG4+(10*dvGraphHis2Sz)
dHistoryInfoPSG1SFX:
	dc.l dvHistory_SFXPSG1+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG1+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG1+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG1+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG1+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG1+(10*dvGraphHis2Sz)
dHistoryInfoPSG2SFX:
	dc.l dvHistory_SFXPSG2+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG2+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG2+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG2+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG2+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG2+(10*dvGraphHis2Sz)
dHistoryInfoPSG3SFX:
	dc.l dvHistory_SFXPSG3+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG3+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG3+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG3+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG3+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG3+(10*dvGraphHis2Sz)
dHistoryInfoPSG4SFX:
	dc.l dvHistory_SFXPSG4+(0*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG4+(2*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG4+(4*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG4+(6*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG4+(8*dvGraphHis2Sz)
	dc.l dvHistory_SFXPSG4+(10*dvGraphHis2Sz)
dvFetchChannelInfo:
	dc.w 0x1438
	dc.w dvmSelChan
	dc.w 0x43FA
	dc.w (dvChannelList)-*
	dc.w 0x2219
	dc.w 0x6712
	dc.w 0x2041
	dc.w 0xB410
	dc.w 0x660E
	dc.w 0x0828,0x0000
	dc.w dvMusicInfo+3
	dc.w 0x6618
	dc.w 0x7200+(dvMusicInfo)
	dc.w 0x7401
	dc.w 0x4E75
	dc.w 0xB428
	dc.w dvSfxId
	dc.w 0x66E2
	dc.w 0x0828,0x0000
	dc.w dvSfxInfo+3
	dc.w 0x6604
	dc.w 0x7200+(dvSfxInfo)
	dc.w 0x4E75
	dc.w 0x7400
	dc.w 0x4E75
dvChannelInfoSpace:
	dc.l 0,0,0,0,0,0
	dc.w 0x0000
dvChannelInfoFM1:
	dc.l (0x02<<24)+dChannelInfoFM1
	dc.l (0x03<<24)+dChannelInfoSFXFM1
	dc.l dHistoryInfoFM1
	dc.l dHistoryInfoFMSFX1
	dc.l 0x41880003
	dc.l 0x418C0003
	dc.b "F1",0
	even
dvChannelInfoFM2:
	dc.l (0x04<<24)+dChannelInfoFM2
	dc.l (0x05<<24)+dChannelInfoSFXFM2
	dc.l dHistoryInfoFM2
	dc.l dHistoryInfoFMSFX2
	dc.l 0x42080003
	dc.l 0x420C0003
	dc.b "F2",0
	even
dvChannelInfoFM4:
	dc.l (0x06<<24)+dChannelInfoFM4
	dc.l (0x07<<24)+dChannelInfoSFXFM4
	dc.l dHistoryInfoFM4
	dc.l dHistoryInfoFMSFX4
	dc.l 0x42880003
	dc.l 0x428C0003
	dc.b "F4",0
	even
dvChannelInfoFM5:
	dc.l (0x08<<24)+dChannelInfoFM5
	dc.l (0x09<<24)+dChannelInfoSFXFM5
	dc.l dHistoryInfoFM5
	dc.l dHistoryInfoFMSFX5
	dc.l 0x43080003
	dc.l 0x430C0003
	dc.b "F5",0
	even
dvChannelInfoFM6:
	dc.l (0x0A<<24)+dChannelInfoFM6
	dc.l 0x0B000001
	dc.l dHistoryInfoFM6
	dc.l 0
	dc.l 0x43880003
	dc.l 0x438C0003
	dc.b "F6",0
	even
dvChannelInfoFM3o1:
	dc.l (0x0E<<24)+dChannelInfoFM3o1
	dc.l 0x0F000001
	dc.l dHistoryInfoFM3o1
	dc.l 0
	dc.l 0x45080003
	dc.l 0x450C0003
	dc.b "O1",0
	even
dvChannelInfoFM3o2:
	dc.l (0x10<<24)+dChannelInfoFM3o2
	dc.l 0x11000001
	dc.l dHistoryInfoFM3o2
	dc.l 0
	dc.l 0x45880003
	dc.l 0x458C0003
	dc.b "O2",0
	even
dvChannelInfoFM3o3:
	dc.l (0x12<<24)+dChannelInfoFM3o3
	dc.l 0x13000001
	dc.l dHistoryInfoFM3o3
	dc.l 0
	dc.l 0x46080003
	dc.l 0x460C0003
	dc.b "O3",0
	even
dvChannelInfoFM3o4:
	dc.l (0x14<<24)+dChannelInfoFM3o4
	dc.l 0x15000001
	dc.l dHistoryInfoFM3o4
	dc.l 0
	dc.l 0x46880003
	dc.l 0x468C0003
	dc.b "O4",0
	even
dvChannelInfoTA:
	dc.l (0x0C<<24)+dChannelInfoTA
	dc.l 0x0D000001
	dc.l (0x30<<24)+dHistoryInfoTA
	dc.l 0
	dc.l 0x44880003
	dc.l 0x448C0003
	dc.b "TA",0
	even
dvChannelInfoDAC1:
	dc.l (0x16<<24)+dChannelInfoDAC1
	dc.l 0x17000001
	dc.l (0xD0<<24)+dHistoryInfoDAC1
	dc.l 0
	dc.l 0x47880003
	dc.l 0x478C0003
	dc.b "D1",0
	even
dvChannelInfoDAC2:
	dc.l (0x18<<24)+dChannelInfoDAC2
	dc.l (0x19<<24)+dChannelInfoSFXDAC2
	dc.l (0xD0<<24)+dHistoryInfoDAC2
	dc.l dHistoryInfoDAC2SFX
	dc.l 0x48080003
	dc.l 0x480C0003
	dc.b "D2",0
	even
dvChannelInfoPSG1:
	dc.l (0x1A<<24)+dChannelInfoPSG1
	dc.l (0x1B<<24)+dChannelInfoSFXPSG1
	dc.l (0x30<<24)+dHistoryInfoPSG1
	dc.l dHistoryInfoPSG1SFX
	dc.l 0x49080003
	dc.l 0x490C0003
	dc.b "P1",0
	even
dvChannelInfoPSG2:
	dc.l (0x1C<<24)+dChannelInfoPSG2
	dc.l (0x1D<<24)+dChannelInfoSFXPSG2
	dc.l (0x30<<24)+dHistoryInfoPSG2
	dc.l dHistoryInfoPSG2SFX
	dc.l 0x49880003
	dc.l 0x498C0003
	dc.b "P2",0
	even
dvChannelInfoPSG3:
	dc.l (0x1E<<24)+dChannelInfoPSG3
	dc.l (0x1F<<24)+dChannelInfoSFXPSG3
	dc.l (0x30<<24)+dHistoryInfoPSG3
	dc.l dHistoryInfoPSG3SFX
	dc.l 0x4A080003
	dc.l 0x4A0C0003
	dc.b "P3",0
	even
dvChannelInfoPSG4:
	dc.l (0x20<<24)+dChannelInfoPSG4
	dc.l (0x21<<24)+dChannelInfoSFXPSG4
	dc.l (0x30<<24)+dHistoryInfoPSG4
	dc.l dHistoryInfoPSG4SFX
	dc.l 0x4A880003
	dc.l 0x4A8C0003
	dc.b "P4",0
	even
dvsAltHint:
	dc.b " Hold START to press XYZ on 3-button pad",0
dvsMusicTest:
	dc.b "0000",0
dvsChannelMus:
	dc.w 0x1600
dvsChannelSFX:
	dc.w 0x1700
dvsChannelSel2:
dvsChannelSel:
	dc.b "*",0
dvsChannelNul2:
dvsChannelNull:
	dc.b " ",0
	even
dvmChannels_SoundTest:
	dc.w 0x000C
	dc.l (0xFF<<24)+dvSoundNames
	dc.w dvSndTestId
	dc.w snd_First, snd_Last
	dc.l 0x40840003
	dc.w 0x0003
	dc.l (dvSndTestId&0xFFFFFF)
dvChannelMap:
	dc.w 0x001F
	dc.w 0x6100,0x6101,0x6102,0x6103
	dc.w 0x417C,0x417D,0x417E,0x417D,0x417F,0x417C,0x417F
	dc.w 0x417C,0x417D,0x417E,0x417D,0x417F,0x417C,0x417F
	dc.w 0x417C,0x417D,0x417E,0x417D,0x417F,0x417C,0x417F
	dc.w 0x417C,0x417D,0x417E,0x417D,0x417F,0x417C,0x417F
dvVolumeTiles:
	dc.w 0x6100,0x6101,0x6102,0x6103
	dc.w 0x2100,0x2101,0x2102,0x2103
dvVolumeOffs:
	dc.w 0x7878,0x7878
	dc.w 0x7474,0x7474
	dc.w 0x7070,0x7070
	dc.w 0x6C6C,0x6C6C
	dc.w 0x6868,0x6868
	dc.w 0x6464,0x6464
	dc.w 0x6060,0x6060
	dc.w 0x5C5C,0x5C5C
	dc.w 0x5858,0x5858
	dc.w 0x5454,0x5454
	dc.w 0x5050,0x5050
	dc.w 0x4C4C,0x4C4C
	dc.w 0x4848,0x4848
	dc.w 0x4444,0x4444
	dc.w 0x4040,0x4040
	dc.w 0x3C3C,0x3C3C
	dc.w 0x3838,0x3838
	dc.w 0x3434,0x3434
	dc.w 0x3030,0x3030
	dc.w 0x2C2C,0x2C2C
	dc.w 0x2828,0x2828
	dc.w 0x2424,0x2424
	dc.w 0x2020,0x2020
	dc.w 0x1C1C,0x1C1C
	dc.w 0x1818,0x1818
	dc.w 0x1414,0x1414
	dc.w 0x1010,0x1010
	dc.w 0x0C0C,0x0C0C
	dc.b 0x08,0x08,0x08,0x08,0x08
	dc.b 0x04,0x04,0x04,0x04,0x04
	dc.w 0x0000,0x0000,0x0000
dvNoteData:
	dc.w 0x00B4,0x180
	dc.w 0x00B6,0x183
	dc.w 0x00B8,0x181
	dc.w 0x00BA,0x183
	dc.w 0x00BC,0x182
	dc.w 0x00C0,0x180
	dc.w 0x00C2,0x183
	dc.w 0x00C4,0x181
	dc.w 0x00C6,0x183
	dc.w 0x00C8,0x181
	dc.w 0x00CA,0x183
	dc.w 0x00CC,0x182
	dc.w 0x00B4,0x180
	dc.w 0x00B6,0x183
	dc.w 0x00B8,0x181
	dc.w 0x00BA,0x183
	dc.w 0x00BC,0x182
	dc.w 0x00C0,0x180
	dc.w 0x00C2,0x183
	dc.w 0x00C4,0x181
	dc.w 0x00C6,0x183
	dc.w 0x00C8,0x181
	dc.w 0x00CA,0x183
	dc.w 0x00CC,0x182
	dc.w 0x00B4,0x180
	dc.w 0x00B6,0x183
	dc.w 0x00B8,0x181
	dc.w 0x00BA,0x183
	dc.w 0x00BC,0x182
	dc.w 0x00C0,0x180
	dc.w 0x00C2,0x183
	dc.w 0x00C4,0x181
	dc.w 0x00C6,0x183
	dc.w 0x00C8,0x181
	dc.w 0x00CA,0x183
	dc.w 0x00CC,0x182
	dc.w 0x00B4,0x180
	dc.w 0x00B6,0x183
	dc.w 0x00B8,0x181
	dc.w 0x00BA,0x183
	dc.w 0x00BC,0x182
	dc.w 0x00C0,0x180
	dc.w 0x00C2,0x183
	dc.w 0x00C4,0x181
	dc.w 0x00C6,0x183
	dc.w 0x00C8,0x181
	dc.w 0x00CA,0x183
	dc.w 0x00CC,0x182
	dc.w 0x00D0,0x180
	dc.w 0x00D2,0x183
	dc.w 0x00D4,0x181
	dc.w 0x00D6,0x183
	dc.w 0x00D8,0x182
	dc.w 0x00DC,0x180
	dc.w 0x00DE,0x183
	dc.w 0x00E0,0x181
	dc.w 0x00E2,0x183
	dc.w 0x00E4,0x181
	dc.w 0x00E6,0x183
	dc.w 0x00E8,0x182
	dc.w 0x00EC,0x180
	dc.w 0x00EE,0x183
	dc.w 0x00F0,0x181
	dc.w 0x00F2,0x183
	dc.w 0x00F4,0x182
	dc.w 0x00F8,0x180
	dc.w 0x00FA,0x183
	dc.w 0x00FC,0x181
	dc.w 0x00FE,0x183
	dc.w 0x0100,0x181
	dc.w 0x0102,0x183
	dc.w 0x0104,0x182
	dc.w 0x0108,0x180
	dc.w 0x010A,0x183
	dc.w 0x010C,0x181
	dc.w 0x010E,0x183
	dc.w 0x0110,0x182
	dc.w 0x0114,0x180
	dc.w 0x0116,0x183
	dc.w 0x0118,0x181
	dc.w 0x011A,0x183
	dc.w 0x011C,0x181
	dc.w 0x011E,0x183
	dc.w 0x0120,0x182
	dc.w 0x0124,0x180
	dc.w 0x0126,0x183
	dc.w 0x0128,0x181
	dc.w 0x012A,0x183
	dc.w 0x012C,0x182
	dc.w 0x0130,0x180
	dc.w 0x0132,0x183
	dc.w 0x0134,0x181
	dc.w 0x0136,0x183
	dc.w 0x0138,0x181
	dc.w 0x013A,0x183
	dc.w 0x013C,0x182
	dc.w 0x0140,0x180
	dc.w 0x0142,0x183
	dc.w 0x0144,0x181
	dc.w 0x0146,0x183
	dc.w 0x0148,0x182
	dc.w 0x014C,0x180
	dc.w 0x014E,0x183
	dc.w 0x0150,0x181
	dc.w 0x0152,0x183
	dc.w 0x0154,0x181
	dc.w 0x0156,0x183
	dc.w 0x0158,0x182
	dc.w 0x015C,0x180
	dc.w 0x015E,0x183
	dc.w 0x0160,0x181
	dc.w 0x0162,0x183
	dc.w 0x0164,0x182
	dc.w 0x0168,0x180
	dc.w 0x016A,0x183
	dc.w 0x016C,0x181
	dc.w 0x016E,0x183
	dc.w 0x0170,0x181
	dc.w 0x0172,0x183
	dc.w 0x0174,0x182
	dc.w 0x0178,0x180
	dc.w 0x017A,0x183
	dc.w 0x017C,0x181
	dc.w 0x017E,0x183
	dc.w 0x0180,0x182
	dc.w 0x0184,0x180
	dc.w 0x0186,0x183
	dc.w 0x0188,0x181
	dc.w 0x018A,0x183
	dc.w 0x018C,0x181
	dc.w 0x018E,0x183
	dc.w 0x0190,0x182
	dc.w 0x0194,0x180
	dc.w 0x0196,0x183
	dc.w 0x0198,0x181
	dc.w 0x019A,0x183
	dc.w 0x019C,0x182
	dc.w 0x01A0,0x180
	dc.w 0x01A2,0x183
	dc.w 0x01A4,0x181
	dc.w 0x01A6,0x183
	dc.w 0x01A8,0x181
	dc.w 0x01AA,0x183
	dc.w 0x01AC,0x182
	dc.w 0x01B0,0x180
	dc.w 0x01B2,0x183
	dc.w 0x01B4,0x181
	dc.w 0x01B6,0x183
	dc.w 0x01B8,0x182
	dc.w 0x01BC,0x180
	dc.w 0x01BE,0x183
	dc.w 0x01C0,0x181
	dc.w 0x01C2,0x183
	dc.w 0x01C4,0x181
	dc.w 0x01C6,0x183
	dc.w 0x01C8,0x182
	dc.w 0x01B0,0x180
	dc.w 0x01B2,0x183
	dc.w 0x01B4,0x181
	dc.w 0x01B6,0x183
	dc.w 0x01B8,0x182
	dc.w 0x01BC,0x180
	dc.w 0x01BE,0x183
	dc.w 0x01C0,0x181
	dc.w 0x01C2,0x183
	dc.w 0x01C4,0x181
	dc.w 0x01C6,0x183
	dc.w 0x01C8,0x182
	dc.w 0x01B0,0x180
	dc.w 0x01B2,0x183
	dc.w 0x01B4,0x181
	dc.w 0x01B6,0x183
	dc.w 0x01B8,0x182
	dc.w 0x01BC,0x180
	dc.w 0x01BE,0x183
	dc.w 0x01C0,0x181
	dc.w 0x01C2,0x183
	dc.w 0x01C4,0x181
	dc.w 0x01C6,0x183
	dc.w 0x01C8,0x182
	dc.w 0x01B0,0x180
	dc.w 0x01B2,0x183
	dc.w 0x01B4,0x181
	dc.w 0x01B6,0x183
	dc.w 0x01B8,0x182
	dc.w 0x01BC,0x180
	dc.w 0x01BE,0x183
	dc.w 0x01C0,0x181
	dc.w 0x01C2,0x183
	dc.w 0x01C4,0x181
	dc.w 0x01C6,0x183
	dc.w 0x01C8,0x182
dvmInit_Piano:
	dc.w 0x46FC,0x2700
	dc.w 0x41F9
	dc.l dvPiano
	dc.w 0x303C,0x083F
	dc.w 0x2D7C,0x6000,0x0000,0x0004
	dc.w 0x3C98
	dc.w 0x51C8,0xFFFC
	dc.w 0x2D7C,0x4084,0x0003,0x0004
	dc.w 0x4BFA
	dc.w (dvsMusicTest)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x2D7C,0x4B80,0x0003,0x0004
	dc.w 0x4BFA
	dc.w (dvsAltHint)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest)-*
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x203C,0x4184,0x0003
	dc.w 0x41FA
	dc.w (dvChannelList)-*
	dc.w 0x43FA
	dc.w (dvChannelMap)-*
	dc.w 0x7200+(dvString)
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2418
	dc.w 0x672A
	dc.w 0x2442
	dc.w 0x4BEA
	dc.w dvString
	dc.w 0x2D40,0x0004
	dc.w 0x0680,0x0080,0x0000
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x242A
	dc.w dvVolumeCom
	dc.w 0x67E2
	dc.w 0x2D42,0x0004
	dc.w 0x2649
	dc.w 0x341B
	dc.w 0x3C9B
	dc.w 0x51CA,0xFFFC
	dc.w 0x60D2
	dc.w 0x43F8
	dc.w dvPianoSprites
	dc.w 0x41FA
	dc.w (dvChannelList)-*
	dc.w 0x303C,0x0090
	dc.w 0x7201
	dc.w 0x2418
	dc.w 0x6716
	dc.w 0x5040
	dc.w 0x2442
	dc.w 0x4AAA
	dc.w dvVolumeCom
	dc.w 0x67F2
	dc.w 0x32C0
	dc.w 0x32C1
	dc.w 0x4259
	dc.w 0x4259
	dc.w 0x5241
	dc.w 0x60E6
	dc.w 0x4229,0xFFF8
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmChannels_UpdateTest:
	dc.w 0x3418
	dc.w 0x4BF0,0x20FE
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x1410
	dc.w 0xB438
	dc.w dvmSelChan
	dc.w 0x6604
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x4EBA
	dc.w (dWriteNumberMapped2)-*
	dc.w 0x3CBC,0x0020
	dc.w 0x1C3C,0x001F
	dc.w 0x3C86
	dc.w 0x1C3C,0x001E
	dc.w 0x3C86
	dc.w 0x3CBC,0x0020
	dc.w 0x4843
	dc.w 0x0243,0xFFFC
	dc.w 0x2A58
	dc.w 0x2A75,0x3000
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvmUpd_Piano:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x4A38
	dc.w dvPadPress+1
	dc.w 0x6A00
	dc.w (dvmChannels_NotStart)-*
	dc.w 0x0C38,0x00FF
	dc.w dvmSelChan
	dc.w 0x6600+(0xFF&((dvmUpd_Piano_NotSfx)-*-2))
	dc.w 0x3038
	dc.w dvSndTestId
	dc.w 0x4EB9
	dc.l dFractalQueue
dvmChannels_SetSong:
	dc.w 0x41F9
	dc.l dvSoundTables
	dc.w 0x21F0,0x0000
	dc.w dvSongTable
	dc.w 0x41F9
	dc.l dSoundTable
	dc.w 0x21F0,0x0000
	dc.w dvSongHeader
	dc.w 0x4E75
dvmUpd_Piano_NotSfx:
	dc.w 0x4EBA
	dc.w (dvFetchChannelInfo)-*
	dc.w 0x670C
	dc.w 0x21C8
	dc.w dvChanData
	dc.w 0x31C1
	dc.w dvChanOffs
	dc.w 0x4EFA
	dc.w (dvUpdateButtonRow)-*
	dc.w 0x4E75
dvmChannels_NotStart:
	dc.w 0x3038
	dc.w dvPadPress
	dc.w 0x0800,0x0000
	dc.w 0x6732
	dc.w 0x0C38,0x00FF
	dc.w dvmSelChan
	dc.w 0x6610
	dc.w 0x11FC,0x0021
	dc.w dvmSelChan
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest)-*
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x601A
	dc.w 0x0C38,0x0003
	dc.w dvmSelChan
	dc.w 0x6E0E
	dc.w 0x50F8
	dc.w dvmSelChan
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest)-*
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x6004
	dc.w 0x5538
	dc.w dvmSelChan
	dc.w 0x0800,0x0001
	dc.w 0x6730
	dc.w 0x0C38,0x00FF
	dc.w dvmSelChan
	dc.w 0x660E
	dc.w 0x5638
	dc.w dvmSelChan
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest)-*
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x601A
	dc.w 0x0C38,0x0020
	dc.w dvmSelChan
	dc.w 0x6D0E
	dc.w 0x50F8
	dc.w dvmSelChan
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest)-*
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x6004
	dc.w 0x5438
	dc.w dvmSelChan
	dc.w 0x4A38
	dc.w dvmSelChan
	dc.w 0x6A70
	dc.w 0x41FA
	dc.w (dvmChannels_SoundTest+6)-*
	dc.w 0x3258
	dc.w 0x7002
	dc.w 0x6136
	dc.w 0x6710
	dc.w 0x3010
	dc.w 0xB051
	dc.w 0x6704
	dc.w 0x5951
	dc.w 0x6052
	dc.w 0x32A8,0x0002
	dc.w 0x604C
	dc.w 0x7003
	dc.w 0x6120
	dc.w 0x6710
	dc.w 0x3028,0x0002
	dc.w 0xB051
	dc.w 0x6704
	dc.w 0x5851
	dc.w 0x603A
	dc.w 0x3290
	dc.w 0x6036
	dc.w 0x700C
	dc.w 0xC078
	dc.w dvPadHold
	dc.w 0x6642
	dc.w 0x4238
	dc.w dvTestDelay
	dc.w 0x603C
	dc.w 0x0138
	dc.w dvPadPress+1
	dc.w 0x6618
	dc.w 0x0138
	dc.w dvPadHold+1
	dc.w 0x6712
	dc.w 0x0C38,0x002D
	dc.w dvTestDelay
	dc.w 0x660C
	dc.w 0x7003
	dc.w 0xC038
	dc.w dvFrame
	dc.w 0x6608
	dc.w 0x7001
	dc.w 0x4E75
	dc.w 0x5238
	dc.w dvTestDelay
	dc.w 0x7000
	dc.w 0x4E75
	dc.w 0x5148
	dc.w 0x4EBA
	dc.w (dvmChannels_UpdateTest)-*
	dc.w 0x600C
	dc.w 0x0200,0x000C
	dc.w 0x6706
	dc.w 0x0A38,0x0001
	dc.w dvmSelChan
	dc.w 0x41FA
	dc.w (dvChannelList)-*
	dc.w 0x49F8
	dc.w dvPianoSprites+4
	dc.w 0x2018
	dc.w 0x67DE
	dc.w 0x2240
	dc.w 0x4AA9
	dc.w dvVolumeCom
	dc.w 0x67F4
	dc.w 0x6100+(0xFF&((dvChannel_UpdateStatus)-*-2))
	dc.w 0x508C
	dc.w 0x60EE
dvChannel_UpdateStatus:
	dc.w 0x0829,0x0000
	dc.w dvSfxInfo+3
	dc.w 0x6610
	dc.w 0x2469
	dc.w dvSfxInfo
	dc.w 0x3652
	dc.w 0x7408
	dc.w 0x363C,0x2000
	dc.w 0x4A13
	dc.w 0x6B34
	dc.w 0x0829,0x0000
	dc.w dvMusicInfo+3
	dc.w 0x660E
	dc.w 0x2451
	dc.w 0x3652
	dc.w 0x7400
	dc.w 0x363C,0x6000
	dc.w 0x4A13
	dc.w 0x6B1E
	dc.w 0x426C,0x0002
	dc.w 0x4BFA
	dc.w (dvVolumeTiles)-*
	dc.w 0x46FC,0x2700
	dc.w 0x2D69
	dc.w dvVolumeCom
	dc.w 0x0004
	dc.w 0x2C9D
	dc.w 0x2C9D
	dc.w 0x46FC,0x2300
	dc.w 0x6000,0x007A
	dc.w 0x302B
	dc.w cChipVol
	dc.w 0x727F
	dc.w 0xB041
	dc.w 0x6304
	dc.w 0x5AC0
	dc.w 0xC041
	dc.w 0x4BFA
	dc.w (dvVolumeOffs)-*
	dc.w 0x7200
	dc.w 0x1235,0x0000
	dc.w 0x4BFA
	dc.w (dvVolumeTiles)-*
	dc.w 0xDAC2
	dc.w 0x46FC,0x2700
	dc.w 0x2D69
	dc.w dvVolumeCom
	dc.w 0x0004
	dc.w 0x301D
	dc.w 0x8041
	dc.w 0x3C80
	dc.w 0x301D
	dc.w 0x8041
	dc.w 0x3C80
	dc.w 0x301D
	dc.w 0x8041
	dc.w 0x3C80
	dc.w 0x301D
	dc.w 0x8041
	dc.w 0x3C80
	dc.w 0x46FC,0x2300
	dc.w 0x0813
	dc.w cfRest
	dc.w 0x6606
	dc.w 0x0813
	dc.w cfRest
	dc.w 0x6702
	dc.w 0x4243
	dc.w 0x7000
	dc.w 0x4A2B,0x000D
	dc.w 0x5BC0
	dc.w 0x4400
	dc.w 0xD02B
	dc.w cChipFrac
	dc.w 0xD029
	dc.w dvFracOffset
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x4BFA
	dc.w (dvNoteData)-*
	dc.w 0x3975,0x0000,0x0002
	dc.w 0x8675,0x0002
	dc.w 0x3883
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x4BFA
	dc.w (dvsChannelMus)-*
	dc.w 0x1038
	dc.w dvmSelChan
	dc.w 0xB011
	dc.w 0x6612
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x0829,0x0000
	dc.w dvMusicInfo+3
	dc.w 0x674C
	dc.w 0x4BFA
	dc.w (dvsChannelSel2)-*
	dc.w 0x6046
	dc.w 0x0829,0x0000
	dc.w dvMusicInfo+3
	dc.w 0x663A
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x2038
	dc.w dvChanData
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0xB089
	dc.w 0x6608
	dc.w 0x0C78
	dc.w dvMusicInfo
	dc.w dvChanOffs
	dc.w 0x6724
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2651
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6B06
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x6012
	dc.w 0x082B
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x670A
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x6004
	dc.w 0x4BFA
	dc.w (dvsChannelNul2)-*
	dc.w 0x2F0D
	dc.w 0x3F06
	dc.w 0x4BFA
	dc.w (dvsChannelSFX)-*
	dc.w 0x1038
	dc.w dvmSelChan
	dc.w 0xB029
	dc.w dvSfxId
	dc.w 0x6612
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x0829,0x0000
	dc.w dvSfxInfo+3
	dc.w 0x674E
	dc.w 0x4BFA
	dc.w (dvsChannelSel)-*
	dc.w 0x6048
	dc.w 0x0829,0x0000
	dc.w dvSfxInfo+3
	dc.w 0x663C
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x2038
	dc.w dvChanData
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0xB089
	dc.w 0x6608
	dc.w 0x0C78
	dc.w dvSfxInfo
	dc.w dvChanOffs
	dc.w 0x6726
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2669
	dc.w dvSfxInfo
	dc.w 0x3653
	dc.w 0x4A13
	dc.w 0x6B06
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x6012
	dc.w 0x082B
	dc.w cfMuted
	dc.w cModeFlags
	dc.w 0x670A
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x6004
	dc.w 0x4BFA
	dc.w (dvsChannelNull)-*
	dc.w 0x46FC,0x2700
	dc.w 0x2D69
	dc.w dvChannelCom
	dc.w 0x0004
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x3C1F
	dc.w 0x2A5F
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvsStatusStringArray:
	dc.w 0x0026,0x0030,0x003A,0x0044
	dc.w 0x004E,0x006E,0x0088
	dc.w 0x00A2,0x0092
	dc.w 0x00BA,0x00AA
	dc.w 0x00C4,0x00DA
	dc.w 0x00F0
	dc.w 0x00FC
	dc.w 0x0108
	dc.w 0x0114
	dc.w 0x0120
	dc.w 0
	dc.l 0x40840003
	dc.b "Flags:",0
	even
	dc.l 0x41040003
	dc.b "Delay:",0
	even
	dc.l 0x41840003
	dc.b "Voice:",0
	even
	dc.l 0x42040003
	dc.b "Volume:",0
	even
	dc.l 0x42840003
	dc.b "Note:   $0000 Fraction: $0000",0
	even
	dc.l 0x43040003
	dc.b "Op mask: $00  AMS+FMS:",0
	even
	dc.l 0x43840003
	dc.b "Panning:",0
	even
	dc.l 0x45040003
	dc.b "Tremolo:",0
	even
	dc.l 0x45840003
	dc.b "Envelope:",0
	even
	dc.l 0x47040003
	dc.b "Vibrato:",0
	even
	dc.l 0x47840003
	dc.b "Envelope:",0
	even
	dc.l 0x48040003
	dc.b "Porta Target: $0000",0
	even
	dc.l 0x48840003
	dc.b "Porta Speed:  $0000",0
	even
	dc.l 0x4A040003
	dc.b "Address:",0
	even
	even
	dc.l 0x4A040003
	dc.b "Stack 0:",0
	even
	dc.l 0x4A840003
	dc.b "Stack 1:",0
	even
	dc.l 0x4B040003
	dc.b "Stack 2:",0
	even
	dc.l 0x4B840003
	dc.b "Stack 3:",0
	even
dvmInit_Status:
	dc.w 0x46FC,0x2700
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvsStatusStringArray)-*
	dc.w 0x4EBA
	dc.w (dvWriteMultiString)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmUpd_Status:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x4EBA
	dc.w (dvmGlobal_UpDown)-*
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x7003
	dc.w 0xC038
	dc.w dvFrame
	dc.w 0xD000
	dc.w 0xD000
	dc.w 0x287B,0x0006
	dc.w 0x4EFA
	dc.w (dvmGlobal_Draw)-*
	dc.l dvmStatus_DrawStack
	dc.l dvmStatus_DrawStrings
	dc.l dvmStatus_DrawVals1
	dc.l dvmStatus_DrawVals2
dvmStatus_DrawVals1:
	dc.w 0x7FFF
	dc.w 0x0060
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x005E
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x005C
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x005A
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0058
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0056
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0054
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0052
	dc.l 0x40000003,0x40000003
	dc.w 0xFFFF
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x40960003
	dc.b 0x01
	dc.b 0xFF
	dc.w cTrackFlags
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x409E0003
	dc.b 0x01
	dc.b 0xFF
	dc.w cModeFlags
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x41160003
	dc.b 0x01
	dc.b 0xFF
	dc.w cDelay
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x411E0003
	dc.b 0x01
	dc.b 0xFF
	dc.w cLastDelay
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x42160003
	dc.b 0x01
	dc.b 0xFF
	dc.w cVolume
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x43160003
	dc.b 0x01
	dc.b 0xFF
	dc.w cOpMask
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x43340003
	dc.b 0x01
	dc.b 0xFF
	dc.w cLFO
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x2D7C,0x4396,0x0003,0x0004
	dc.w 0x1C3C,0x0024
	dc.w 0x3C86
	dc.w 0x3A68
	dc.w ciPanning
	dc.w 0x1615
	dc.w 0x7A01
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvmStatus_DrawVals2:
	dc.w 0x7FFF
	dc.w 0x0030
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x002E
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x002C
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x002C
	dc.l 0x40000003,0x40000003
	dc.w 0xFFFF
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x42940003
	dc.b 0x03
	dc.b 0x00
	dc.w cNote
	dc.w dvmGlobal_DrawNumMapA1
	dc.l 0x42B40003
	dc.b 0x03
	dc.b 0x00
	dc.w cFrac
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x4EBA
	dc.w (dvmStatus_DrawFracVal)-*
	dc.l 0x48200003
	dc.w cPortaTarget
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x4EBA
	dc.w (dvmStatus_DrawFracVal)-*
	dc.l 0x48A00003
	dc.w cPortaDisp
dvmStatus_DrawFracVal:
	dc.w 0x2A5F
	dc.w 0x2D5D,0x0004
	dc.w 0x1C3C,0x0024
	dc.w 0x3C86
	dc.w 0x3A1D
	dc.w 0x7600
	dc.w 0x6100+(0xFF&((dvmStatus_GetFrac)-*-2))
	dc.w 0x6704
	dc.w 0x3635,0x5000
	dc.w 0x7A03
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvmStatus_GetFrac:
	dc.w 0x3028
	dc.w ciFreqData
	dc.w 0x6702
	dc.w 0x3A40
	dc.w 0x4E75
dvmStatus_DrawStrings:
	dc.w 0x7FFF
	dc.w 0x003E
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0040
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0018
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0036
	dc.l 0x40000003,0x40000003
	dc.w 0xFFFF
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_GetFrac)-*-2))
	dc.w 0x6100+(0xFF&((dvmStatus_WriteDataStr)-*-2))
	dc.l 0x47180003
	dc.w cdVibId,0x8008
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_GetVol)-*-2))
	dc.w 0x6100+(0xFF&((dvmStatus_WriteDataStr)-*-2))
	dc.l 0x45180003
	dc.w cdVibId,0x8008
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_GetVol)-*-2))
	dc.w 0x6100+(0xFF&((dvmStatus_WriteDataStr)-*-2))
	dc.l 0x45980003
	dc.w cdEnvId,0x0C
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_GetFrac)-*-2))
	dc.w 0x6100+(0xFF&((dvmStatus_WriteDataStr)-*-2))
	dc.l 0x47980003
	dc.w cdEnvId,0x0C
dvmStatus_GetVol:
	dc.w 0x3028
	dc.w ciVolData
	dc.w 0x6702
	dc.w 0x3A40
	dc.w 0x4E75
dvmStatus_WriteDataStr:
	dc.w 0x56C7
	dc.w 0x245F
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x2D52,0x0004
	dc.w 0x7000
	dc.w 0x720E
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x2D5A,0x0004
	dc.w 0x4A07
	dc.w 0x6718
	dc.w 0x301A
	dc.w 0x7200
	dc.w 0x1235,0x0000
	dc.w 0x4A52
	dc.w 0x6A24
	dc.w 0x4A15
	dc.w 0x6B22
	dc.w 0x4BFA,0x0018
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.w 0x4BFA,0x0006
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.b "<unknown>",0
	dc.b "<off>",0
	even
	dc.w 0xE249
	dc.w 0x707C
	dc.w 0xC05A
	dc.w 0x2A78
	dc.w dvSongTable
	dc.w 0x2A75,0x0000
	dc.w 0x4A95
	dc.w 0x67D6
	dc.w 0xB215
	dc.w 0x62D2
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x2A75,0x1000
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvmStatus_DrawStack:
	dc.w 0x7FFF
	dc.w 0x003C
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0038
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0036
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0034
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0x0032
	dc.l 0x40000003,0x40000003
	dc.w 0xFFFF
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_DrawAddress)-*-2))
	dc.l 0x499E0003
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_DrawStackEntry)-*-2))
	dc.l 0x4A160003
	dc.w 0xFFFC
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_DrawStackEntry)-*-2))
	dc.l 0x4A960003
	dc.w 0xFFF8
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_DrawStackEntry)-*-2))
	dc.l 0x4B160003
	dc.w 0xFFF4
	dc.w dvmGlobal_DrawGetAddr
	dc.w 0x6100+(0xFF&((dvmStatus_DrawStackEntry)-*-2))
	dc.l 0x4B960003
	dc.w 0xFFF0
dvmStatus_DrawStackEntry:
	dc.w 0x2A5F
	dc.w 0x6100+(0xFF&((dvmStatus_DrawAddress_InitClear)-*-2))
	dc.w 0x2D5D,0x0004
	dc.w 0x7000
	dc.w 0x1029
	dc.w cCallStack
	dc.w 0xD05D
	dc.w 0x0C40
	dc.w cStack
	dc.w 0x6402
	dc.w 0x4E75
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x1C3C,0x0024
	dc.w 0x3C86
	dc.w 0x4BF1,0x0000
	dc.w 0x1615
	dc.w 0x7A01
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x3CBC,0x0020
	dc.w 0x2615
	dc.w 0x6000+(0xFF&((dvmStatus_DrawAddress_Dump)-*-2))
dvmStatus_DrawAddress:
	dc.w 0x2A5F
	dc.w 0x6100+(0xFF&((dvmStatus_DrawAddress_InitClear)-*-2))
	dc.w 0x2D5D,0x0004
	dc.w 0x2611
dvmStatus_DrawAddress_Dump:
	dc.w 0x0283,0x00FF,0xFFFF
	dc.w 0x4EFA
	dc.w (dvmTracker_WriteLabel)-*
dvmStatus_DrawAddress_InitClear:
	dc.w 0x2D55,0x0004
	dc.w 0x7000
	dc.w 0x720F
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x4E75
dvsGlobalStringArray:
	dc.w 0x0014
	dc.w 0x0022,0x0038
	dc.w 0x0046,0x0058,0x0066
	dc.w 0x0072,0x0082,0x00A2
	dc.w 0
	dc.l 0x40840003
	dc.b "Main flags:",0
	even
	dc.l 0x41040003
	dc.b "Tempo accumulator:",0
	even
	dc.l 0x41840003
	dc.b "Main tempo:",0
	even
	dc.l 0x42840003
	dc.b "FM/DAC volume:",0
	even
	dc.l 0x43040003
	dc.b "PSG volume:",0
	even
	dc.l 0x43840003
	dc.b "Fraction:",0
	even
	dc.l 0x4A840003
	dc.b "Timing flags:",0
	even
	dc.l 0x4B040003
	dc.b "$00:   $00   $00   $00   $00",0
	even
	dc.l 0x4B840003
	dc.b "$04:   $00   $00   $00",0
	even
dvmInit_Global:
	dc.w 0x46FC,0x2700
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvsGlobalStringArray)-*
	dc.w 0x4EBA
	dc.w (dvWriteMultiString)-*
	dc.w 0x31FC,0x0014
	dc.w dvTestMax
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmGlobal_EditTiming:
	dc.w 0x3038
	dc.w dvTestSelection
	dc.w 0x3A7B,0x00FE
	dc.w 0xD515
	dc.w 0x4E75
	dc.w mTiming+0, mTiming+1, mTiming+2, mTiming+3
	dc.w mTiming+4, mTiming+5, mTiming+6, mTiming+7
dvmGlobal_EditTempoCur:
	dc.w 0xD578
	dc.w mTempoCur
	dc.w 0x0278,0x07FF
	dc.w mTempoCur
	dc.w 0x4E75
dvmGlobal_EditVolumeFMDAC:
	dc.w 0xD578
	dc.w mMasterVol
	dc.w 0x6000+(0xFF&((dvmGlobal_EditVolumeAny)-*-2))
dvmGlobal_EditVolumePSG:
	dc.w 0xD578
	dc.w mMasterVolPSG
dvmGlobal_EditVolumeAny:
	dc.w 0x4EF9
	dc.l dSetVolumeFlag
dvmGlobal_EditFraction:
	dc.w 0xD578
	dc.w mMasterFrac
	dc.w 0x4EF9
	dc.l dSetVolumeFlag
dvmGlobal_UpDown:
	dc.w 0x70FE
	dc.w 0x0838,0x0000
	dc.w dvPadPress+1
	dc.w 0x660A
	dc.w 0x0838,0x0001
	dc.w dvPadPress+1
	dc.w 0x671A
	dc.w 0x7002
	dc.w 0x3238
	dc.w dvTestMax
	dc.w 0xD178
	dc.w dvTestSelection
	dc.w 0x6A04
	dc.w 0x31C1
	dc.w dvTestSelection
	dc.w 0xB278
	dc.w dvTestSelection
	dc.w 0x6404
	dc.w 0x4278
	dc.w dvTestSelection
	dc.w 0x4E75
dvmGlobal_LeftRight:
	dc.w 0x74FF
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0x74E0
	dc.w 0x7002
	dc.w 0x4EBA
	dc.w (dvmTestScale_HoldCheck)-*
	dc.w 0x660A
	dc.w 0x7003
	dc.w 0x4EBA
	dc.w (dvmTestScale_HoldCheck)-*
	dc.w 0x670E
	dc.w 0x4482
	dc.w 0x3038
	dc.w dvTestSelection
	dc.w 0x3034,0x0000
	dc.w 0x4EF4,0x0000
	dc.w 0x700C
	dc.w 0xC078
	dc.w dvPadHold
	dc.w 0x6604
	dc.w 0x4238
	dc.w dvTestDelay
	dc.w 0x4E75
dvmUpd_Global:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x6100+(0xFF&((dvmGlobal_UpDown)-*-2))
	dc.w 0x49FA,0x0016
	dc.w 0x6100+(0xFF&((dvmGlobal_LeftRight)-*-2))
	dc.w 0x0838,0x0000
	dc.w dvFrame
	dc.w 0x6600,0x015E
	dc.w 0x49FA,0x001E
	dc.w 0x4EFA
	dc.w (dvmGlobal_Draw)-*
	dc.w 0xFF58
	dc.w 0xFF64
	dc.w 0xFF6A
	dc.w 0xFF74
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0xFF3C
	dc.w 0x0008
	dc.w 0x0054
	dc.l 0x4B0E0003,0x4B1A0003
	dc.w 0x000A
	dc.w 0x0054
	dc.l 0x4B1A0003,0x4B260003
	dc.w 0x000C
	dc.w 0x0054
	dc.l 0x4B260003,0x4B320003
	dc.w 0x000E
	dc.w 0x0054
	dc.l 0x4B320003,0x4B3E0003
	dc.w 0x0010
	dc.w 0x0054
	dc.l 0x4B8E0003,0x4B9A0003
	dc.w 0x0012
	dc.w 0x0054
	dc.l 0x4B9A0003,0x4BA60003
	dc.w 0x0014
	dc.w 0x0054
	dc.l 0x4BA60003,0x4BB20003
	dc.w 0xFFFF
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B120003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+0&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B1E0003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+1&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B2A0003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+2&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B360003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+3&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B920003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+4&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4B9E0003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+5&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x4BAA0003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mTiming+6&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x40AC0003
	dc.w 0x0001
	dc.l (0xFF<<24)+(mFlags&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x412A0003
	dc.w 0x0003
	dc.l (mTempoAcc&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x41AA0003
	dc.w 0x0003
	dc.l (mTempoCur&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x42AA0003
	dc.w 0x0003
	dc.l (mMasterVol&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x432A0003
	dc.w 0x0003
	dc.l (mMasterVolPSG&0xFFFFFF)
	dc.w dvmGlobal_DrawNumMap
	dc.l 0x43AA0003
	dc.w 0x0003
	dc.l (mMasterFrac&0xFFFFFF)
	dc.w 0x7FFF
	dc.w 0xFFB6
	dc.l 0x40000003,0x40000003
	dc.w 0x7FFF
	dc.w 0xFFB6
	dc.l 0x40000003,0x40000003
	dc.w 0
	dc.w 0xFFB6
	dc.l 0x41A60003,0x41B60003
	dc.w 2
	dc.w 0xFFB6
	dc.l 0x42A60003,0x42B60003
	dc.w 4
	dc.w 0xFFB6
	dc.l 0x43260003,0x43360003
	dc.w 6
	dc.w 0xFFB6
	dc.l 0x43A60003,0x43B60003
	dc.w 0xFFFF
	dc.w 0x49FA,0xFFB4
dvmGlobal_Draw:
	dc.w 0x47FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2F0C
	dc.w 0x301C
	dc.w 0x6B18
	dc.w 0xB078
	dc.w dvTestSelection
	dc.w 0x6704
	dc.w 0x6122
	dc.w 0x60F2
	dc.w 0x558C
	dc.w 0x2E8C
	dc.w 0xD9FC,0x0000,0x000C
	dc.w 0x60E6
	dc.w 0x4E75
	dc.w 0x285F
	dc.w 0x301C
	dc.w 0xB078
	dc.w dvTestSelection
	dc.w 0x66F4
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x47FA
	dc.w (dvmTest_YesArrow)-*
	dc.w 0x301C
	dc.w 0x4BF4,0x00FE
	dc.w 0x301D
	dc.w 0x4EBB,0x0016
	dc.w 0x2D5C,0x0004
	dc.w 0x1C13
	dc.w 0x3C86
	dc.w 0x2D5C,0x0004
	dc.w 0x1C2B,0x0001
	dc.w 0x3C86
	dc.w 0x4E75
	dc.w 0x2D5D,0x0004
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.w 0x4EFA
	dc.w (dWriteNumberMapped)-*
	dc.w 0x4EFA
	dc.w (dWriteNumberMapped_OffsetA1)-*
	dc.w 0x4ED5
dvmTracker_CopyPara:
	dc.l 0x940C9300
	dc.l 0x96C09580
	dc.l 0x940B9380
	dc.l 0x96C19500
	dc.l 0x940B9300
	dc.l 0x96C19580
	dc.l 0x940A9380
	dc.l 0x96C29500
	dc.l 0x940A9300
	dc.l 0x96C29580
	dc.l 0x94099380
	dc.l 0x96C39500
	dc.l 0x94099300
	dc.l 0x96C39580
	dc.l 0x94089380
	dc.l 0x96C49500
	dc.l 0x94089300
	dc.l 0x96C49580
	dc.l 0x94079380
	dc.l 0x96C59500
	dc.l 0x94079300
	dc.l 0x96C59580
	dc.l 0x94069380
	dc.l 0x96C69500
	dc.l 0x94069300
	dc.l 0x96C69580
	dc.l 0x94059380
	dc.l 0x96C79500
	dc.l 0x94059300
	dc.l 0x96C79580
dvmTracker_WritePara:
	dc.b 0x38
	dc.b 0x01
	dc.w dvTrackEndAddr
	dc.w 0x000D
	dc.w dvTrackLines+0x4
	dc.b 0x34
	dc.b 0x02
	dc.w dvTrackEndAddr
	dc.w 0x000C
	dc.w dvTrackLines+0x8
	dc.b 0x30
	dc.b 0x03
	dc.w dvTrackEndAddr
	dc.w 0x000B
	dc.w dvTrackLines+0xC
	dc.b 0x2C
	dc.b 0x04
	dc.w dvTrackEndAddr
	dc.w 0x000A
	dc.w dvTrackLines+0x10
	dc.b 0x28
	dc.b 0x05
	dc.w dvTrackEndAddr
	dc.w 0x0009
	dc.w dvTrackLines+0x14
	dc.b 0x24
	dc.b 0x06
	dc.w dvTrackEndAddr
	dc.w 0x0008
	dc.w dvTrackLines+0x18
	dc.b 0x20
	dc.b 0x07
	dc.w dvTrackEndAddr
	dc.w 0x0007
	dc.w dvTrackLines+0x1C
	dc.b 0x1C
	dc.b 0x08
	dc.w dvTrackEndAddr
	dc.w 0x0006
	dc.w dvTrackLines+0x20
	dc.b 0x18
	dc.b 0x09
	dc.w dvTrackEndAddr
	dc.w 0x0005
	dc.w dvTrackLines+0x24
	dc.b 0x14
	dc.b 0x0A
	dc.w dvTrackEndAddr
	dc.w 0x0004
	dc.w dvTrackLines+0x28
	dc.b 0x10
	dc.b 0x0B
	dc.w dvTrackEndAddr
	dc.w 0x0003
	dc.w dvTrackLines+0x2C
	dc.b 0x0C
	dc.b 0x0C
	dc.w dvTrackEndAddr
	dc.w 0x0002
	dc.w dvTrackLines+0x30
	dc.b 0x08
	dc.b 0x0D
	dc.w dvTrackEndAddr
	dc.w 0x0001
	dc.w dvTrackLines+0x34
	dc.b 0x04
	dc.b 0x0E
	dc.w dvTrackEndAddr
	dc.w 0x0000
	dc.w dvTrackLines+0x38
	dc.b 0x00
	dc.b 0x0F
	dc.w dvTrackLines+0x3C
	dc.w 0xFFFF
dvmTracker_WriteComms:
	dc.l 0x45040003
	dc.l 0x45840003
	dc.l 0x46040003
	dc.l 0x46840003
	dc.l 0x47040003
	dc.l 0x47840003
	dc.l 0x48040003
	dc.l 0x48840003
	dc.l 0x49040003
	dc.l 0x49840003
	dc.l 0x4A040003
	dc.l 0x4A840003
	dc.l 0x4B040003
	dc.l 0x4B840003
	dc.l 0x4C040003
dvmTracker_Invalid:
	dc.b "  INVALID                               ",0
dvmTracker_Ext:
	dc.b "lext",0
dvNoteCommand:
	dc.b "sNote        "
dvStr_Frac:
	dc.b "s","Frac"
	dc.w 0x2020,0x2020,0x2020,0x2020
dvStr_Vol:
	dc.b "s","Vol"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Tempo:
	dc.b "s","Tempo"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_VolEnv:
	dc.b "s","VolEnv"
	dc.w 0x2020,0x2020,0x2020
dvStr_FreqEnv:
	dc.b "s","FreqEnv"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_VolVibSet:
	dc.b "s","VolVibSet"
	dc.b 0x20,0x20,0x20
dvStr_VolVibOn:
	dc.b "s","VolVibOn"
	dc.w 0x2020,0x2020
dvStr_VolVibOff:
	dc.b "s","VolVibOff"
	dc.b 0x20,0x20,0x20
dvStr_FreqVibSet:
	dc.b "s","FreqVibSet"
	dc.w 0x2020
dvStr_FreqVibOn:
	dc.b "s","FreqVibOn"
	dc.b 0x20,0x20,0x20
dvStr_FreqVibOff:
	dc.b "s","FreqVibOff"
	dc.w 0x2020
dvStr_PortaSpeed:
	dc.b "s","PortaSpeed"
	dc.w 0x2020
dvStr_PortaTarget:
	dc.b "s","PortaTarget"
	dc.b 0x20
dvStr_FastCut:
	dc.b "s","FastCut"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_LFO:
	dc.b "s","LFO"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Pan:
	dc.b "s","Pan"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_AMSFMS:
	dc.b "s","AMSFMS"
	dc.w 0x2020,0x2020,0x2020
dvStr_OpMask:
	dc.b "s","OpMask"
	dc.w 0x2020,0x2020,0x2020
dvStr_YMW:
	dc.b "s","YMW"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_SetTLA:
	dc.b "s","SetTLA"
	dc.w 0x2020,0x2020,0x2020
dvStr_SetTLB:
	dc.b "s","SetTLB"
	dc.w 0x2020,0x2020,0x2020
dvStr_Queue:
	dc.b "s","Queue"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Tie:
	dc.b "s","Tie"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Voice:
	dc.b "s","Voice"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Backup:
	dc.b "s","Backup"
	dc.w 0x2020,0x2020,0x2020
dvStr_Stop:
	dc.b "s","Stop"
	dc.w 0x2020,0x2020,0x2020,0x2020
dvStr_Ret:
	dc.b "s","Ret"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_Jump:
	dc.b "s","Jump"
	dc.w 0x2020,0x2020,0x2020,0x2020
dvStr_Call:
	dc.b "s","Call"
	dc.w 0x2020,0x2020,0x2020,0x2020
dvStr_Cont:
	dc.b "s","Cont"
	dc.w 0x2020,0x2020,0x2020,0x2020
dvStr_CondJump:
	dc.b "s","CondJump"
	dc.w 0x2020,0x2020
dvStr_BitJump:
	dc.b "s","BitJump"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_CommSet:
	dc.b "s","CommSet"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_CommAdd:
	dc.b "s","CommAdd"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_Flags:
	dc.b "s","Flags"
	dc.b 0x20,0x20,0x20,0x20,0x20,0x20,0x20
dvStr_SpinRev:
	dc.b "s","SpinRev"
	dc.b 0x20,0x20,0x20,0x20,0x20
dvStr_SpinReset:
	dc.b "s","SpinReset"
	dc.b 0x20,0x20,0x20
dvNoteCut:
	dc.b "nCut",0
dvNoteRest:
	dc.b "nRst",0
dvNoteKey:
	dc.b "nKey",0
dvNoteTie:
	dc.b "sTie",0
dvOctaveStrings:
	dc.b "nC-"
	dc.b "nCs"
	dc.b "nD-"
	dc.b "nDs"
	dc.b "nE-"
	dc.b "nF-"
	dc.b "nFs"
	dc.b "nG-"
	dc.b "nGs"
	dc.b "nA-"
	dc.b "nAs"
	dc.b "nB-"
	even
dvmInit_Tracker:
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x6480,0x0003,0x0004
	dc.w 0x303C,0x0001
	dc.w 0x723F
	dc.w 0x3C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x41F9
	dc.l dvFontAlt
	dc.w 0x303C,0x07FF
	dc.w 0x2D7C,0x6000,0x0000,0x0004
	dc.w 0x3C98
	dc.w 0x51C8,0xFFFC
	dc.w 0x46FC,0x2300
	dc.w 0x41F8
	dc.w dvTrackLineAddr
	dc.w 0x700F
	dc.w 0x4298
	dc.w 0x51C8,0xFFFC
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x49F8
	dc.w dvCallStack
	dc.w 0x323C
	dc.w cStack
	dc.w 0x74FF
	dc.w 0x7000
	dc.w 0x1029
	dc.w cCallStack
	dc.w 0x670E
	dc.w 0xB240
	dc.w 0x670A
	dc.w 0x28F1,0x1000
	dc.w 0x5841
	dc.w 0x5242
	dc.w 0x60F2
	dc.w 0x31CC
	dc.w dvCallStackAddr
	dc.w 0x31C2
	dc.w dvTrackerBlank
	dc.w 0x08B8,0x0002
	dc.w dvTrackerFlags
	dc.w 0x4E75
dvmUpd_Tracker:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x3250
	dc.w 0x46FC,0x2700
	if SAFE_MODE
	dc.w 0x2451
	if SAFE_MODE
	dc.w 0x200A
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x0C80
	dc.l dSoundData
	dc.w 0x6508
	dc.w 0x0C80
	dc.l dSoundData_End
	dc.w 0x6504
	dc.w 0x6000
	dc.w (dvmUpd_Tracker_Invalid)-*
	endif
	dc.w 0x2440
	else
	dc.w 0x2011
	dc.w 0x6700
	dc.w (dvmUpd_Tracker_Invalid)-*
	dc.w 0x0280,0x00FF,0xFFFF
	dc.w 0x2440
	endif
	dc.w 0x49F8
	dc.w dvTrackLines
	dc.w 0x294A,0x003C
	dc.w 0xB5DC
	dc.w 0x6700,0x00A2
	dc.w 0x700D
	dc.w 0x72F8
	dc.w 0x5041
	dc.w 0xB5DC
	dc.w 0x6700,0x0008
	dc.w 0x51C8,0xFFF6
	dc.w 0x5041
	dc.w 0x49FA
	dc.w (dvmTracker_CopyPara)-*
	dc.w 0xD8C1
	dc.w 0x2D5C,0x0004
	dc.w 0x2D5C,0x0004
	dc.w 0x2D7C,0x97C0,0x8F01,0x0004
	dc.w 0x2D7C,0x4000,0x00C3,0x0004
	dc.w 0x49FA
	dc.w (dvmTracker_WritePara)-*
	dc.w 0xD8C1
	dc.w 0x4BFA
	dc.w (dvmTracker_WriteComms)-*
	dc.w 0x7000
	dc.w 0x101C
	dc.w 0xDAC0
	dc.w 0x11DC
	dc.w dvTrackerLeft
	dc.w 0x345C
	dc.w 0x2452
	dc.w 0x47F8
	dc.w dvTrackLines
	dc.w 0x301C
	dc.w 0x6B08
	dc.w 0x3854
	dc.w 0x26DC
	dc.w 0x51C8,0xFFFC
	dc.w 0x31CB
	dc.w dvTrackLineAddr
	dc.w 0x44EE,0x0004
	dc.w 0x69FA
	dc.w 0x3D7C,0x8F02,0x0004
	dc.w 0x46FC,0x2700
	dc.w 0x2D55,0x0004
	dc.w 0x4EBA
	dc.w (dvmTracker_ClearLine)-*
	dc.w 0x2D5D,0x0004
	dc.w 0x2F0D
	dc.w 0x3C3C,0x002E
	dc.w 0x3038
	dc.w dvTrackerBlank
	dc.w 0x6B06
	dc.w 0x3C86
	dc.w 0x51C8,0xFFFC
	dc.w 0x4EBA
	dc.w (dvmTracker_Line)-*
	dc.w 0x46FC,0x2300
	dc.w 0x2A5F
	dc.w 0x5338
	dc.w dvTrackerLeft
	dc.w 0x66CE
	dc.w 0x21CA
	dc.w dvTrackEndAddr
	dc.w 0x4E75
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmUpd_Tracker_Invalid:
	dc.w 0x4BFA
	dc.w (dvmTracker_Invalid)-*
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4500,0x0003,0x0004
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmTracker_ClearLine:
	dc.w 0x7200
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x2C81
	dc.w 0x4E75
dvmTracker_FindLabel:
	dc.w 0x4BFA
	dc.w (dvLabelTable)-*
	dc.w 0x201D
	dc.w 0x4BED,0x0008
	dc.w 0x223C,0x7FFF,0xFFF8
	dc.w 0x6004
	dc.w 0x4BF5,0x0808
	dc.w 0xE288
	dc.w 0xC081
	dc.w 0x670E
	dc.w 0xB6B5,0x0800
	dc.w 0x65F4
	dc.w 0x62EE
	dc.w 0x2A75,0x0804
	dc.w 0x4E75
	dc.w 0xB69D
	dc.w 0x6604
	dc.w 0x2A55
	dc.w 0x4E75
	dc.w 0x4BED,0xFFF4
	dc.w 0x7001
	dc.w 0x4E75
dvmTracker_Line:
	dc.w 0x3878
	dc.w dvTrackLineAddr
	dc.w 0x28CA
	dc.w 0x31CC
	dc.w dvTrackLineAddr
	dc.w 0x08B8,0x0002
	dc.w dvTrackerFlags
	dc.w 0x6714
	dc.w 0x0C12
	dc.w com_Stop
	dc.w 0x6706
	dc.w 0x0C12
	dc.w com_Backup
	dc.w 0x6608
	dc.w 0x08F8,0x0002
	dc.w dvTrackerFlags
	dc.w 0x4E75
	dc.w 0x08F8,0x0001
	dc.w dvTrackerFlags
	dc.w 0x6616
	dc.w 0x260A
	dc.w 0x4EBA
	dc.w (dvmTracker_FindLabel)-*
	dc.w 0x660E
	dc.w 0x3C3C
	dc.w dvtRedd
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x3CBC,0x013A
	dc.w 0x4E75
	dc.w 0x08B8,0x0001
	dc.w dvTrackerFlags
	dc.w 0x7200
	dc.w 0x121A
	dc.w 0x6B00,0x00D0
	dc.w 0x4BFA
	dc.w (dvNoteCommand)-*
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x4EBA
	dc.w (dvmTracker_WriteCommand)-*
	dc.w 0x4A01
	dc.w 0x672E
	dc.w 0x5101+((nFirstNote)<<9)
	dc.w 0x6538
	dc.w 0x7430
	dc.w 0x700C
	dc.w 0x6002
	dc.w 0x5202
	dc.w 0x9200
	dc.w 0x64FA
	dc.w 0xD200
	dc.w 0x3001
	dc.w 0xD040
	dc.w 0xD240
	dc.w 0x4BFA
	dc.w (dvOctaveStrings)-*
	dc.w 0xDAC1
	dc.w 0x7002
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvmTracker_WriteStr)-*
	dc.w 0x1C02
	dc.w 0x3C86
	dc.w 0x603C
	dc.w 0x4BFA
	dc.w (dvNoteCut)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x602E
	dc.w 0x4BFA
	dc.w (dvNoteKey)-*
	dc.w 0x5201
	dc.w 0x6704
	dc.w 0x4BFA
	dc.w (dvNoteRest)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x6018
	dc.w 0x4BFA
	dc.w (dvNoteCommand)-*
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x4EBA
	dc.w (dvmTracker_WriteCommand)-*
	dc.w 0x4BFA
	dc.w (dvNoteTie)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x0C12,0x00D0
	dc.w 0x6E4C
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x7200
	dc.w 0x121A
	dc.w 0x600C
	dc.w 0x4BFA
	dc.w (dvNoteCommand)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4EBA
	dc.w (dvmTracker_WriteCommand)-*
	dc.w 0x0201,0x007F
	dc.w 0x6710
	dc.w 0x47F9
	dc.l dDelayTable
	dc.w 0x1633
	dc.w 0x1000+(0xFF&(-(lFirst&0x7F)))
	dc.w 0x3C3C
	dc.w dvtRedd
	dc.w 0x6014
	dc.w 0x4BFA
	dc.w (dvmTracker_Ext)-*
	dc.w 0x3C3C
	dc.w dvtRedd
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x161A
	dc.w 0x3CBC,0x0124
	dc.w 0x7A01
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
	dc.w 0x4E75
	dc.w 0x0C01
	dc.w com_First
	dc.w 0x65B8
	dc.w 0x0C01
	dc.w com_Tie
	dc.w 0x6788
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0xD241
	dc.w 0x47FA
	dc.w (dvCommandPointers-(com_First*8))-*
	dc.w 0xD6C1
	dc.w 0x2A5B
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x4EBA
	dc.w (dvmTracker_WriteCommand)-*
	dc.w 0x265B
	dc.w 0x4ED3
dvmTracker_WriteCommand:
	dc.w 0x700C
dvmTracker_WriteStr:
	dc.w 0x1C1D
	dc.w 0x3C86
	dc.w 0x51C8,0xFFFA
	dc.w 0x4E75
dvCommandPointers:
	dc.l dvStr_Frac,dvCmd_Frac
	dc.l dvStr_Vol,dvCmd_Vol
	dc.l dvStr_Tempo,dvCmd_Tempo
	dc.l dvStr_VolEnv,dvCmd_VolEnv
	dc.l dvStr_FreqEnv,dvCmd_FreqEnv
	dc.l dvStr_VolVibSet,dvCmd_VolVibSet
	dc.l dvStr_VolVibOn,dvCmd_VolVibOn
	dc.l dvStr_VolVibOff,dvCmd_VolVibOff
	dc.l dvStr_FreqVibSet,dvCmd_FreqVibSet
	dc.l dvStr_FreqVibOn,dvCmd_FreqVibOn
	dc.l dvStr_FreqVibOff,dvCmd_FreqVibOff
	dc.l dvStr_PortaSpeed,dvCmd_PortaSpeed
	dc.l dvStr_PortaTarget,dvCmd_PortaTarget
	dc.l dvStr_FastCut,dvCmd_FastCut
	dc.l dvStr_LFO,dvCmd_LFO
	dc.l dvStr_Pan,dvCmd_Pan
	dc.l dvStr_AMSFMS,dvCmd_AMSFMS
	dc.l dvStr_OpMask,dvCmd_OpMask
	dc.l dvStr_YMW,dvCmd_YMW
	dc.l dvStr_SetTLA,dvCmd_SetTLA
	dc.l dvStr_SetTLB,dvCmd_SetTLB
	dc.l dvStr_Queue,dvCmd_Queue
	dc.l dvStr_Tie,dvCmd_Tie
	dc.l dvStr_Voice,dvCmd_Voice
	dc.l dvStr_Backup,dvCmd_Backup
	dc.l dvStr_Stop,dvCmd_Stop
	dc.l dvStr_Ret,dvCmd_Ret
	dc.l dvStr_Jump,dvCmd_Jump
	dc.l dvStr_Call,dvCmd_Call
	dc.l dvStr_Cont,dvCmd_Cont
	dc.l dvStr_CondJump,dvCmd_CondJump
	dc.l dvStr_BitJump,dvCmd_BitJump
	dc.l dvStr_CommSet,dvCmd_CommSet
	dc.l dvStr_CommAdd,dvCmd_CommAdd
	dc.l dvStr_Flags,dvCmd_Flags
	dc.l dvStr_SpinRev,dvCmd_SpinRev
	dc.l dvStr_SpinReset,dvCmd_SpinReset
dvCmd_SetTLA:
	dc.w 0x7601
	dc.w 0x6000+(0xFF&((dvCmd_SetTLAB)-*-2))
dvCmd_SetTLB:
	dc.w 0x7603
dvCmd_SetTLAB:
	dc.w 0x101A
	dc.w 0x6A06
	dc.w 0x5203
	dc.w 0x0200,0x007F
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x7A00
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x3CBC,0x2024
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x3600
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_OpMask:
dvCmd_AMSFMS:
dvCmd_LFO:
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x3CBC,0x2024
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_YMW:
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x3CBC,0x4024
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x3CBC,0x2024
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_Queue:
	dc.w 0x3CBC,0x4024
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x7A03
	dc.w 0x1E9A
	dc.w 0x3617
	dc.w 0x161A
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_Flags:
dvCmd_CommSet:
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x3CBC,0x2024
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_Vol:
dvCmd_Pan:
dvCmd_CommAdd:
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x6A06
	dc.w 0x3CBC,0x202D
	dc.w 0x4403
	dc.w 0x3CBC,0x2024
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_PortaTarget:
dvCmd_Tempo:
dvCmd_TempoShoes:
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A03
	dc.w 0x1E9A
	dc.w 0x3617
	dc.w 0x161A
	dc.w 0x3CBC,0x2024
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_Frac:
dvCmd_PortaSpeed:
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A03
	dc.w 0x1E9A
	dc.w 0x3617
	dc.w 0x161A
	dc.w 0x4A43
	dc.w 0x6A06
	dc.w 0x3CBC,0x202D
	dc.w 0x4443
	dc.w 0x3CBC,0x2024
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvCmd_CSMOn:
	dc.w 0x161A
	dc.w 0x4E75
dvCmd_VolEnv:
dvCmd_FreqEnv:
	dc.w 0x7600
	dc.w 0x161A
	dc.w 0xD643
	dc.w 0x2A78
	dc.w dvSongTable
	dc.w 0x2A6D,0x000C
	dc.w 0x2A75,0x3000
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvCmd_VolVibSet:
dvCmd_FreqVibSet:
	dc.w 0x7600
	dc.w 0x161A
	dc.w 0xD643
	dc.w 0xD643
	dc.w 0x2A78
	dc.w dvSongTable
	dc.w 0x2A6D,0x0008
	dc.w 0x2A75,0x3000
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvCmd_Voice:
	dc.w 0x7600
	dc.w 0x161A
	dc.w 0xD643
	dc.w 0xD643
	dc.w 0x7000
	dc.w 0x0828
	dc.w ctbDAC
	dc.w ciType
	dc.w 0x6702
	dc.w 0x7004
	dc.w 0x2A78
	dc.w dvSongTable
	dc.w 0x2A75,0x0000
	dc.w 0x2A75,0x3000
	dc.w 0x3C3C
	dc.w dvtGren
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvCmd_BitJump:
	dc.w 0x7A00
	dc.w 0x161A
	dc.w 0xEA0B
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x3CBC,0x2024
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x701F
	dc.w 0xC01A
	dc.w 0x263C
	dc.l mTiming&0xFFFFFF
	dc.w 0xD640
	dc.w 0x3CBC,0x4024
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x7A05
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x6000+(0xFF&((dvCmd_Jump)-*-2))
dvCmd_CondJump:
	dc.w 0x7000
	dc.w 0x101A
	dc.w 0x263C
	dc.l mTiming&0xFFFFFF
	dc.w 0xD640
	dc.w 0x3CBC,0x4024
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x7A05
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x3CBC,0x2024
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x161A
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x6000+(0xFF&((dvCmd_Jump)-*-2))
dvCmd_Call:
	dc.w 0x3878
	dc.w dvCallStackAddr
	dc.w 0x161A
	dc.w 0x28CA
	dc.w 0x1943,0xFFFC
	dc.w 0x3CBC,0x2024
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x7A01
	dc.w 0x4EBA
	dc.w (dWriteNumber)-*
	dc.w 0x2CBC,0x002C,0x0020
	dc.w 0x31CC
	dc.w dvCallStackAddr
	dc.w 0x5278
	dc.w dvTrackerBlank
dvCmd_Cont:
dvCmd_Jump:
	dc.w 0x7600
	dc.w 0x161A
	dc.w 0x4843
	dc.w 0x1E9A
	dc.w 0x3617
	dc.w 0x161A
	dc.w 0x2443
	dc.w 0x6000+(0xFF&((dvmTracker_WriteLabel)-*-2))
dvCmd_Backup:
dvCmd_Stop:
	dc.w 0x08F8,0x0002
	dc.w dvTrackerFlags
	dc.w 0x534A
dvCmd_VolVibOn:
dvCmd_VolVibOff:
dvCmd_FreqVibOn:
dvCmd_FreqVibOff:
dvCmd_CSMOff:
dvCmd_Tie:
dvCmd_SpinRev:
dvCmd_SpinReset:
dvCmd_FastCut:
dvCmdRts:
	dc.w 0x4E75
dvCmd_Ret:
	dc.w 0x3878
	dc.w dvCallStackAddr
	dc.w 0xB8FC
	dc.w dvCallStack
	dc.w 0x6300+(0xFF&((dvCmdRts)-*-2))
	dc.w 0x2624
	dc.w 0x0283,0x00FF,0xFFFF
	dc.w 0x5314
	dc.w 0x6704
	dc.w 0x2443
	dc.w 0x6000+(0xFF&((dvCmd_Jump)-*-2))
	dc.w 0x31CC
	dc.w dvCallStackAddr
	dc.w 0x5378
	dc.w dvTrackerBlank
	dc.w 0x5683
	dc.w 0x2443
dvmTracker_WriteLabel:
	dc.w 0x4EBA
	dc.w (dvmTracker_FindLabel)-*
	dc.w 0x6608
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.w 0x969D
	dc.w 0x2A55
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x2CBC,0x002B,0x2024
	dc.w 0x7A03
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
	even
dvmInit_TestScale:
	dc.w 0x4278
	dc.w dvTestId
	dc.w 0x4278
	dc.w dvTestEdit
	dc.w 0x4278
	dc.w dvTestSelection
	dc.w 0x4278
	dc.w dvTestHistCount
	dc.w 0x4EBA
	dc.w (dvmGraph_LoadPlane)-*
	dc.w 0x46FC,0x2700
	dc.w 0x7004
	dc.w 0x4EBA
	dc.w (dvmTest_ClearSelection2)-*
	dc.w 0x7008
	dc.w 0x4EBA
	dc.w (dvmTest_ClearSelection2)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EBA
	dc.w (dvmTest_CopyBuffer)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawEdits)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmUpd_TestScale:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x7EFC
	dc.w 0x0838,0x0000
	dc.w dvPadPress+1
	dc.w 0x660A
	dc.w 0x0838,0x0001
	dc.w dvPadPress+1
	dc.w 0x6736
	dc.w 0x7E04
	dc.w 0x46FC,0x2700
	dc.w 0x3038
	dc.w dvTestSelection
	dc.w 0x4EBA
	dc.w (dvmTest_ClearSelection)-*
	dc.w 0x46FC,0x2300
	dc.w 0x3038
	dc.w dvTestMax
	dc.w 0xDF78
	dc.w dvTestSelection
	dc.w 0x6A04
	dc.w 0x31C0
	dc.w dvTestSelection
	dc.w 0xB078
	dc.w dvTestSelection
	dc.w 0x6404
	dc.w 0x4278
	dc.w dvTestSelection
	dc.w 0x46FC,0x2700
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x46FC,0x2300
	dc.w 0x74FF
	dc.w 0x7002
	dc.w 0x6100+(0xFF&((dvmTestScale_HoldCheck)-*-2))
	dc.w 0x6608
	dc.w 0x7003
	dc.w 0x6100+(0xFF&((dvmTestScale_HoldCheck)-*-2))
	dc.w 0x671C
	dc.w 0x7401
	dc.w 0x3038
	dc.w dvTestSelection
	dc.w 0x207B
	dc.w 0x0000+(0xFF&((dvmTest_SelectArray)-*))
	dc.w 0x46FC,0x2700
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x4EB0,0x0000
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
	dc.w 0x700C
	dc.w 0xC078
	dc.w dvPadHold
	dc.w 0x66F6
	dc.w 0x4238
	dc.w dvTestDelay
	dc.w 0x2078
	dc.w dvTestUpdate
	dc.w 0x4ED0
dvmTestScale_HoldCheck:
	dc.w 0x0138
	dc.w dvPadPress+1
	dc.w 0x6610
	dc.w 0x0138
	dc.w dvPadHold+1
	dc.w 0x670A
	dc.w 0x0C38,0x001E
	dc.w dvTestDelay
	dc.w 0x6604
	dc.w 0x7001
	dc.w 0x4E75
	dc.w 0x5238
	dc.w dvTestDelay
	dc.w 0x7000
	dc.w 0x4E75
dvmTest_SelectArray:
	dc.l dvmTest_SelTypeLR
	dc.l dvmTest_SelIdLR
	dc.l dvmTest_SelScaleLR
	dc.l dvmTest_SelV1LR
	dc.l dvmTest_SelV2LR
	dc.l dvmTest_SelV3LR
	dc.l dvmTest_SelV4LR
	dc.l dvmTest_SelV5LR
dvmTest_Invalid:
	dc.b "<empty>",0
	even
dvmTest_NoArrow:
	dc.b "  "
dvmTest_YesArrow:
	dc.w 0x1F1E
dvmTest_ClearSelection:
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x6000+(0xFF&((dvmTest_RenderSelection)-*-2))
dvmTest_ClearSelection2:
	dc.w 0x99CC
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x6000+(0xFF&((dvmTest_RenderSelection)-*-2))
dvmTest_DrawSelection:
	dc.w 0x49FA
	dc.w (dvmTest_YesArrow)-*
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x3038
	dc.w dvTestSelection
dvmTest_RenderSelection:
	dc.w 0x207B
	dc.w 0x0000+(0xFF&((dvmTest_DrawArray)-*))
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x4EF0,0x0000
dvmTest_DrawArray:
	dc.l dvmTest_DrawTypeLR
	dc.l dvmTest_DrawIdLR
	dc.l dvmTest_DrawScaleLR
	dc.l dvmTest_DrawV1LR
	dc.l dvmTest_DrawV2LR
	dc.l dvmTest_DrawV3LR
	dc.l dvmTest_DrawV4LR
	dc.l dvmTest_DrawV5LR
dvmTest_SelV1LR:
	dc.w 0x6000
	dc.w (dvmTest_SelVoiceEdit1)-*
	dc.w 0x6000
	dc.w (dvmTest_SelSampleEdit)-*
	dc.w 0x6000
	dc.w (dvmTest_SelVibEdit1)-*
	dc.w 0x4E75
dvmTest_DrawV1LR:
	dc.w 0x6000
	dc.w (dvmTest_DrawVoiceEdit1)-*
	dc.w 0x6000
	dc.w (dvmTest_DrawSampleEdit)-*
	dc.w 0x6000
	dc.w (dvmTest_DrawVibEdit1)-*
	dc.w 0x4E75
dvmTest_SelV2LR:
	dc.w 0x6000
	dc.w (dvmTest_SelVoiceEdit2)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_SelVibEdit2)-*
	dc.w 0x4E75
dvmTest_DrawV2LR:
	dc.w 0x6000
	dc.w (dvmTest_DrawVoiceEdit2)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_DrawVibEdit2)-*
	dc.w 0x4E75
dvmTest_SelV3LR:
	dc.w 0x6000
	dc.w (dvmTest_SelVoiceEdit3)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_SelVibEdit3)-*
	dc.w 0x4E75
dvmTest_DrawV3LR:
	dc.w 0x6000
	dc.w (dvmTest_DrawVoiceEdit3)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_DrawVibEdit3)-*
	dc.w 0x4E75
dvmTest_SelV4LR:
	dc.w 0x6000
	dc.w (dvmTest_SelVoiceEdit4)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_SelVibEdit4)-*
	dc.w 0x4E75
dvmTest_DrawV4LR:
	dc.w 0x6000
	dc.w (dvmTest_DrawVoiceEdit4)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_DrawVibEdit4)-*
	dc.w 0x4E75
dvmTest_SelV5LR:
	dc.w 0x6000
	dc.w (dvmTest_SelVoiceEdit5)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_SelVibEdit5)-*
	dc.w 0x4E75
dvmTest_DrawV5LR:
	dc.w 0x6000
	dc.w (dvmTest_DrawVoiceEdit5)-*
	dc.w 0x4E75
	dc.w 0x4E75
	dc.w 0x6000
	dc.w (dvmTest_DrawVibEdit5)-*
	dc.w 0x4E75
dvmTest_SelTypeLR:
	dc.w 0x6000,0x000A
	dc.w 0x6000,0x0006
	dc.w 0x6000,0x0002
	dc.w 0xD442
	dc.w 0xD442
	dc.w 0xD578
	dc.w dvTestType
	dc.w 0x6A06
	dc.w 0x31FC,0x000C
	dc.w dvTestType
	dc.w 0x0C78,0x000C
	dc.w dvTestType
	dc.w 0x6304
	dc.w 0x4278
	dc.w dvTestType
	dc.w 0x4278
	dc.w dvTestId
	dc.w 0x4278
	dc.w dvTestEdit
	dc.w 0x7004
	dc.w 0x4EBA
	dc.w (dvmTest_ClearSelection2)-*
	dc.w 0x4EBA
	dc.w (dvmTest_CopyBuffer)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawEdits)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_DrawTypeLR:
	dc.w 0x6000,0x0040
	dc.w 0x6000,0x0036
	dc.w 0x6000,0x002C
	dc.w 0x4BFA,0x0004
	dc.w 0x6034
	dc.b "Envelope",0
	dc.b "Vibrato ",0
	dc.b " Voice  ",0
	dc.b " Sample ",0
	even
	dc.w 0x4BFA,0xFFE3
	dc.w 0x600A
	dc.w 0x4BFA,0xFFEF
	dc.w 0x6004
	dc.w 0x4BFA,0xFFE0
	dc.w 0xB9FC,0x0000,0x0000
	dc.w 0x6718
	dc.w 0x2D7C,0x4106,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x411C,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x410A,0x0003,0x0004
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvmTest_SelIdLR:
	dc.w 0x6000,0x000A
	dc.w 0x6000,0x0006
	dc.w 0x6000,0x0002
	dc.w 0x4A78
	dc.w dvTestId
	dc.w 0x6A02
	dc.w 0x4E75
	dc.w 0x2078
	dc.w dvSongTable
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x2070,0x0000
	dc.w 0x7000
	dc.w 0x1010
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0xD442
	dc.w 0xD442
	dc.w 0xD578
	dc.w dvTestId
	dc.w 0x6A04
	dc.w 0x31C0
	dc.w dvTestId
	dc.w 0xB078
	dc.w dvTestId
	dc.w 0x6404
	dc.w 0x4278
	dc.w dvTestId
	dc.w 0x4EBA
	dc.w (dvmTest_CopyBuffer)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawEdits)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_DrawIdLR:
	dc.w 0x6000,0x000A
	dc.w 0x6000,0x0006
	dc.w 0x6000,0x0002
	dc.w 0xB9FC,0x0000,0x0000
	dc.w 0x6718
	dc.w 0x2D7C,0x411C,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4140,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4120,0x0003,0x0004
	dc.w 0x7000
	dc.w 0x7207
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x2D7C,0x4120,0x0003,0x0004
	dc.w 0x2A78
	dc.w dvSongTable
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x2A75,0x0000
	dc.w 0x4A95
	dc.w 0x670C
	dc.w 0x3038
	dc.w dvTestId
	dc.w 0x2A75,0x0000
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.w 0x50F8
	dc.w dvTestId
	dc.w 0x4BFA
	dc.w (dvmTest_Invalid)-*
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvmTest_SelScaleLR:
	dc.w 0x6000,0x000A
	dc.w 0x6000,0x0006
	dc.w 0x6000,0x0002
	dc.w 0xD578
	dc.w dvTestHistCount
	dc.w 0x0278,0x0007
	dc.w dvTestHistCount
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_DrawScaleLR:
	dc.w 0x6000,0x000A
	dc.w 0x6000,0x0006
	dc.w 0x6000,0x0002
	dc.w 0x2D7C,0x4684,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x46CC,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x4E75
dvmTest_CopyBuffer:
	dc.w 0x43F8
	dc.w dvTestBuffer
	dc.w 0x2078
	dc.w dvSongHeader
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x2070,0x0000
	dc.w 0x3238
	dc.w dvTestId
	dc.w 0x4EFB,0x0002
	dc.w 0x6000,0x0052
	dc.w 0x6000,0x0030
	dc.w 0x6000,0x0012
	dc.w 0x6E08
	dc.w 0x22BC
	dc.l dvmTest_NullEnv
	dc.w 0x4E75
	dc.w 0x22B0,0x10FC
	dc.w 0x4E75
	dc.w 0x6A0E
	dc.w 0x22FC,0x0100,0x0000
	dc.w 0x22FC,0x0200,0x0000
	dc.w 0x4E75
	dc.w 0xD241
	dc.w 0xD0C1
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x4E75
	dc.w 0x6A06
	dc.w 0x41FA,0x0042
	dc.w 0x6004
	dc.w 0xE749
	dc.w 0xD0C1
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x4E75
	dc.w 0x6A06
	dc.w 0x41FA,0x0044
	dc.w 0x6004
	dc.w 0xE749
	dc.w 0xD0C1
	dc.w 0x5648
	dc.w 0x32FC,0x1A84
	dc.w 0x12FC,0x00F0
	dc.w 0x12D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x22D8
	dc.w 0x4E75
	dc.w 0x0000
	dc.w 0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000
	dc.b "SAMPLE"
	dc.b "VOI",0
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
	dc.w 0x0000,0x0000
dvmTest_NullEnv:
	dc.w 0x8880,0x0000
dvmTest_DrawEdits:
	dc.w 0x2D7C,0x4B80,0x0003,0x0004
	dc.w 0x7000
	dc.w 0x720F
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x2D7C,0x4C00,0x0003,0x0004
	dc.w 0x7000
	dc.w 0x7213
	dc.w 0x2C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x4EFB,0x0002
	dc.w 0x6000
	dc.w (dvmTest_DrawEdits_Voice)-*
	dc.w 0x6000,0x0050
	dc.w 0x6000,0x000A
	dc.w 0x31FC,0x0008
	dc.w dvTestMax
	dc.w 0x4E75
	dc.w 0x31FC,0x001C
	dc.w dvTestMax
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVibEdit1)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVibEdit2)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVibEdit3)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVibEdit4)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EFA
	dc.w (dvmTest_DrawVibEdit5)-*
	dc.w 0x31FC,0x000C
	dc.w dvTestMax
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSampleEdit)-*
	dc.w 0x2D7C,0x4B84,0x0003,0x0004
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x4BFA,0x0006
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.b "Frequency: ",0
	even
dvmTest_DrawEdits_Voice:
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVoiceEdit1)-*
dvmTest_DrawEdits_Voice2:
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVoiceEdit2)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVoiceEdit3)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EBA
	dc.w (dvmTest_DrawVoiceEdit4)-*
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x49FA
	dc.w (dvmTest_NoArrow)-*
	dc.w 0x4EFA
	dc.w (dvmTest_DrawVoiceEdit5)-*
dvmTest_DrawSampleEdit:
	dc.w 0x2D7C,0x4B98,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4BA8,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4B9C,0x0003,0x0004
	dc.w 0x1C3C,0x002B
	dc.w 0x3638
	dc.w dvTestBuffer+0
	dc.w 0x0643,0x0100
	dc.w 0x6A06
	dc.w 0x4443
	dc.w 0x1C3C,0x002D
	dc.w 0x3C86
	dc.w 0x7A03
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvmTest_SelSampleEdit:
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0xED42
	dc.w 0xD578
	dc.w dvTestBuffer+0
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_DrawVibEdit5:
	dc.w 0x2D7C,0x4C04,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4C4A,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4C08,0x0003,0x0004
	dc.w 0x7000
	dc.w 0x1038
	dc.w dvTestBuffer+2
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x4BFA
	dc.w (dvShapePointers)-*
	dc.w 0x2A75,0x0000
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
dvmTest_DrawVibEdit1:
	dc.w 0x1638
	dc.w dvTestBuffer+6
	dc.w 0x4BFA,0x0004
	dc.w 0x6000+(0xFF&((dvmTest_DrawVibEditGeneric)-*-2))
	dc.l 0x4B840003,0x4B8E0003,0x4B880003
	dc.w 0x0100
dvmTest_DrawVibEdit2:
	dc.w 0x1638
	dc.w dvTestBuffer+7
	dc.w 0x4BFA,0x0004
	dc.w 0x6000+(0xFF&((dvmTest_DrawVibEditGeneric)-*-2))
	dc.l 0x4B8E0003,0x4B980003,0x4B920003
	dc.w 0x0100
dvmTest_DrawVibEdit3:
	dc.w 0x3638
	dc.w dvTestBuffer+0
	dc.w 0x4BFA,0x0004
	dc.w 0x6000+(0xFF&((dvmTest_DrawVibEditGeneric)-*-2))
	dc.l 0x4B980003,0x4BA80003,0x4B9C0003
	dc.w 0x0301
dvmTest_DrawVibEdit4:
	dc.w 0x3638
	dc.w dvTestBuffer+4
	dc.w 0x4BFA,0x0004
	dc.w 0x6000+(0xFF&((dvmTest_DrawVibEditGeneric)-*-2))
	dc.l 0x4BA80003,0x4BB80003,0x4BAC0003
	dc.w 0x0301
dvmTest_DrawVibEditGeneric:
	dc.w 0x2D5D,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D5D,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x7A00
	dc.w 0x2D5D,0x0004
	dc.w 0x1A1D
	dc.w 0x4A15
	dc.w 0x6710
	dc.w 0x1C3C,0x002B
	dc.w 0x4A43
	dc.w 0x6A06
	dc.w 0x4443
	dc.w 0x1C3C,0x002D
	dc.w 0x3C86
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvmTest_SelVibEdit1:
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0xE902
	dc.w 0xD538
	dc.w dvTestBuffer+6
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_SelVibEdit2:
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0xE902
	dc.w 0xD538
	dc.w dvTestBuffer+7
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_SelVibEdit3:
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0xE142
	dc.w 0xD578
	dc.w dvTestBuffer+0
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_SelVibEdit4:
	dc.w 0x4A38
	dc.w dvPadHold
	dc.w 0x6A02
	dc.w 0xE142
	dc.w 0xD578
	dc.w dvTestBuffer+4
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_SelVibEdit5:
	dc.w 0x123A
	dc.w (dvShapePointers)-*
	dc.w 0xD538
	dc.w dvTestBuffer+2
	dc.w 0x6A04
	dc.w 0x11C1
	dc.w dvTestBuffer+2
	dc.w 0xB238
	dc.w dvTestBuffer+2
	dc.w 0x6404
	dc.w 0x4238
	dc.w dvTestBuffer+2
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_DrawVoiceEdit1:
	dc.w 0x2D7C,0x4B88,0x0003,0x0004
	dc.w 0x7000
	dc.w 0x720C
	dc.w 0x3C80
	dc.w 0x51C9,0xFFFC
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0xD040
	dc.w 0x4BFB,0x0028
	dc.w 0x2D7C,0x4B84,0x0003,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D5D,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D7C,0x4B88,0x0003,0x0004
	dc.w 0x11D5
	dc.w dvTestMax+1
	dc.w 0x2A5D
	dc.w 0x4EFA
	dc.w (dvWriteString)-*
	dc.l 0x4B9C0003,(0x10<<24)+dvmTest_Str_AL
	dc.l 0x4B9A0003,(0x10<<24)+dvmTest_Str_FB
	dc.l 0x4B960003,(0x1C<<24)+dvmTest_Str_DT
	dc.l 0x4B9A0003,(0x1C<<24)+dvmTest_Str_ML
	dc.l 0x4B9C0003,(0x1C<<24)+dvmTest_Str_RS
	dc.l 0x4B9E0003,(0x1C<<24)+dvmTest_Str_AR
	dc.l 0x4B960003,(0x1C<<24)+dvmTest_Str_AM
	dc.l 0x4B9E0003,(0x1C<<24)+dvmTest_Str_1R
	dc.l 0x4BA00003,(0x1C<<24)+dvmTest_Str_1L
	dc.l 0x4B9E0003,(0x1C<<24)+dvmTest_Str_2R
	dc.l 0x4BA00003,(0x1C<<24)+dvmTest_Str_RR
	dc.l 0x4B940003,(0x1C<<24)+dvmTest_Str_SG
	dc.l 0x4B9E0003,(0x1C<<24)+dvmTest_Str_TL
dvmTest_Str_AL:
	dc.b "Algorithm",0
dvmTest_Str_FB:
	dc.b "Feedback",0
dvmTest_Str_DT:
	dc.b "Detune",0
dvmTest_Str_ML:
	dc.b "Multiple",0
dvmTest_Str_RS:
	dc.b "RateScale",0
dvmTest_Str_AR:
	dc.b "AttackRate",0
dvmTest_Str_AM:
	dc.b "AmpMod",0
dvmTest_Str_1R:
	dc.b "Decay1Rate",0
dvmTest_Str_2R:
	dc.b "Decay2Rate",0
dvmTest_Str_1L:
	dc.b "Decay1Level",0
dvmTest_Str_RR:
	dc.b "ReleaseRate",0
dvmTest_Str_SG:
	dc.b "SSGEG",0
dvmTest_Str_TL:
	dc.b "TotalLevel",0
	even
dvmTest_DrawVoiceEditGeneric:
	dc.w 0x2D58,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D58,0x0004
	dc.w 0x1C1C
	dc.w 0x3C86
	dc.w 0x2D58,0x0004
	dc.w 0x7600
	dc.w 0x161D
	dc.w 0x6A08
	dc.w 0x2CBC,0x0000,0x0000
	dc.w 0x4E75
	dc.w 0x43F8
	dc.w dvTestBuffer+3
	dc.w 0x1631,0x3000
	dc.w 0xC61D
	dc.w 0x7000
	dc.w 0x101D
	dc.w 0xE02B
	dc.w 0x7A01
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvmTest_DrawVoiceEdit2:
	dc.w 0x4BFA
	dc.w (dvmTest_DrawVoiceEdit2_Data)-*
	dc.w 0xDAF8
	dc.w dvTestEdit
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit2_Pos)-*
	dc.w 0x6000+(0xFF&((dvmTest_DrawVoiceEditGeneric)-*-2))
dvmTest_DrawVoiceEdit3:
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0x4BFB
	dc.w 0x0000+(0xFF&((dvmTest_DrawVoiceEdit3_Data)-*))
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit3_Pos)-*
	dc.w 0x6000+(0xFF&((dvmTest_DrawVoiceEditGeneric)-*-2))
dvmTest_DrawVoiceEdit4:
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0x4BFB
	dc.w 0x0000+(0xFF&((dvmTest_DrawVoiceEdit4_Data)-*))
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit4_Pos)-*
	dc.w 0x6000+(0xFF&((dvmTest_DrawVoiceEditGeneric)-*-2))
dvmTest_DrawVoiceEdit5:
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0x4BFB
	dc.w 0x0000+(0xFF&((dvmTest_DrawVoiceEdit5_Data)-*))
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit5_Pos)-*
	dc.w 0x6000+(0xFF&((dvmTest_DrawVoiceEditGeneric)-*-2))
dvmTest_DrawVoiceEdit3_Data:
	dc.w 0xFF07,0x0002
	dc.w 0xFF38,0x0302
	dc.w 0x0270,0x0402
	dc.w 0x020F,0x0002
	dc.w 0x06C0,0x0601
	dc.w 0x061F,0x0003
	dc.w 0x0A80,0x0700
	dc.w 0x0A1F,0x0003
	dc.w 0x12F0,0x0402
	dc.w 0x0E1F,0x0003
	dc.w 0x120F,0x0002
	dc.w 0x160F,0x0002
	dc.w 0x1A7F,0x0004
dvmTest_DrawVoiceEdit4_Data:
	dc.w 0xFF07,0x0002
	dc.w 0xFF38,0x0302
	dc.w 0x0370,0x0402
	dc.w 0x030F,0x0002
	dc.w 0x07C0,0x0601
	dc.w 0x071F,0x0003
	dc.w 0x0B80,0x0700
	dc.w 0x0B1F,0x0003
	dc.w 0x13F0,0x0402
	dc.w 0x0F1F,0x0003
	dc.w 0x130F,0x0002
	dc.w 0x170F,0x0002
	dc.w 0x1B7F,0x0004
dvmTest_DrawVoiceEdit5_Data:
	dc.w 0xFF07,0x0002
	dc.w 0xFF38,0x0302
	dc.w 0x0470,0x0402
	dc.w 0x040F,0x0002
	dc.w 0x08C0,0x0601
	dc.w 0x081F,0x0003
	dc.w 0x0C80,0x0700
	dc.w 0x0C1F,0x0003
	dc.w 0x14F0,0x0402
	dc.w 0x101F,0x0003
	dc.w 0x140F,0x0002
	dc.w 0x180F,0x0002
	dc.w 0x1C7F,0x0004
dvmTest_DrawVoiceEdit2_Data:
	dc.w 0x0007,0x0002
	dc.w 0x0038,0x0302
	dc.w 0x0170,0x0402
	dc.w 0x010F,0x0002
	dc.w 0x05C0,0x0601
	dc.w 0x051F,0x0003
	dc.w 0x0980,0x0700
	dc.w 0x091F,0x0003
	dc.w 0x11F0,0x0402
	dc.w 0x0D1F,0x0003
	dc.w 0x110F,0x0002
	dc.w 0x150F,0x0002
	dc.w 0x197F,0x0004
dvmTest_SelVoiceEdit5:
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0x41FB
	dc.w 0x0000+(0xFF&((dvmTest_DrawVoiceEdit5_Data)-*))
	dc.w 0x6000+(0xFF&((dvmTest_SelVoiceEditGeneric)-*-2))
dvmTest_SelVoiceEdit2:
	dc.w 0x3038
	dc.w dvTestEdit
	dc.w 0x41FB
	dc.w 0x0000+(0xFF&((dvmTest_DrawVoiceEdit2_Data)-*))
	dc.w 0x6000+(0xFF&((dvmTest_SelVoiceEditGeneric)-*-2))
dvmTest_SelVoiceEdit3:
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit3_Data)-*
	dc.w 0xD0F8
	dc.w dvTestEdit
	dc.w 0x6000+(0xFF&((dvmTest_SelVoiceEditGeneric)-*-2))
dvmTest_SelVoiceEdit4:
	dc.w 0x41FA
	dc.w (dvmTest_DrawVoiceEdit4_Data)-*
	dc.w 0xD0F8
	dc.w dvTestEdit
dvmTest_SelVoiceEditGeneric:
	dc.w 0x7000
	dc.w 0x1018
	dc.w 0x6B2A
	dc.w 0x43F8
	dc.w dvTestBuffer+3
	dc.w 0xD2C0
	dc.w 0x1011
	dc.w 0xC018
	dc.w 0x7200
	dc.w 0x4A38
	dc.w dvPadHold+1
	dc.w 0x6A06
	dc.w 0x1228,0x0001
	dc.w 0xE322
	dc.w 0x1210
	dc.w 0xE322
	dc.w 0xD002
	dc.w 0xC020
	dc.w 0x72FF
	dc.w 0x1410
	dc.w 0xB501
	dc.w 0xC311
	dc.w 0x8111
	dc.w 0x4EBA
	dc.w (dvmTest_DrawSelection)-*
	dc.w 0x4EFA
	dc.w (dvmTest_InitScale)-*
dvmTest_SelVoiceEdit1:
	dc.w 0xD442
	dc.w 0xD442
	dc.w 0xD578
	dc.w dvTestEdit
	dc.w 0x6A06
	dc.w 0x31FC,0x0030
	dc.w dvTestEdit
	dc.w 0x0C78,0x0030
	dc.w dvTestEdit
	dc.w 0x6304
	dc.w 0x4278
	dc.w dvTestEdit
	dc.w 0x4EBA
	dc.w (dvmTest_DrawEdits_Voice2)-*
	dc.w 0x4EFA
	dc.w (dvmTest_DrawSelection)-*
dvmTest_DrawVoiceEdit2_Pos:
	dc.l 0x4C040003,0x4C0E0003,0x4C080003
dvmTest_DrawVoiceEdit3_Pos:
	dc.l 0x4C0E0003,0x4C180003,0x4C120003
dvmTest_DrawVoiceEdit4_Pos:
	dc.l 0x4C180003,0x4C220003,0x4C1C0003
dvmTest_DrawVoiceEdit5_Pos:
	dc.l 0x4C220003,0x4C2C0003,0x4C260003
dvGraphParams:
	dc.l dvGraphPara_Frac
	dc.l dvGraphPara_Freq
	dc.l dvGraphPara_Vol
	dc.l dvGraphPara_Delay
	dc.l dvGraphPara_Voice
	dc.l dvGraphPara_Pan
dvGraphParams_End:
dvGraphPara_Frac:
	dc.w 0x0020,0x7000
	dc.w 0x0100,0x1800
	dc.b "       Fraction",0
	dc.w 0x3250
	dc.w 0x3029
	dc.w cChipFrac
	dc.w 0x1EA8
	dc.w ciTranspose
	dc.w 0x3217
	dc.w 0x4201
	dc.w 0x9041
	dc.w 0x4E75
dvGraphPara_Freq:
	dc.w 0x0020,0x2000
	dc.w 0x0400,0x0200
	dc.b "  Raw frequency",0
	dc.w 0x3250
	dc.w 0x3029
	dc.w cChipFreq
	dc.w 0x4E75
dvGraphPara_Vol:
	dc.w 0x0000,0x0400
	dc.w 0x0080,0x003F
	dc.b "         Volume",0
	dc.w 0x3250
	dc.w 0x3029
	dc.w cChipVol
	dc.w 0x4E75
dvGraphPara_Delay:
	dc.w 0x0010,0x00C0
	dc.w 0x00C0,0x0080
	dc.b "          Delay",0
	dc.w 0x3250
	dc.w 0x7000
	dc.w 0x1029
	dc.w cLastDelay
	dc.w 0x6604
	dc.w 0x303C,0x0100
	dc.w 0x4E75
dvGraphPara_Voice:
	dc.w 0x0002,0x00C0
	dc.w 0x0020,0x0020
	dc.b "   Voice/Sample",0
	dc.w 0x3250
	dc.w 0x7000
	dc.w 0x1029
	dc.w cVoice
	dc.w 0x5200
	dc.w 0x4E75
dvGraphPara_Pan:
	dc.w 0x00C0,0x00C0
	dc.w 0x00C0,0x0000
	dc.b "        Panning",0
	dc.w 0x3268
	dc.w ciPanning
	dc.w 0x1011
	dc.w 0x4880
	dc.w 0x4E75
dvmInit_Graph:
	dc.w 0x46FC,0x2700
	dc.w 0x4EBA
	dc.w (dvmGraph_UpdateParam)-*
dvmGraph_LoadPlane:
	dc.w 0x7201
	dc.w 0x303C,0x04FF
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4180,0x0003,0x0004
	dc.w 0x3C81
	dc.w 0x51C8,0xFFFC
	dc.w 0x2D7C,0x6180,0x0003,0x0004
	dc.w 0x343C,0x8080
	dc.w 0x7613
	dc.w 0x3202
	dc.w 0x610C
	dc.w 0x5242
	dc.w 0x51CB,0xFFF8
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
	dc.w 0x703F
	dc.w 0x3C81
	dc.w 0x0641
	dc.w dvGraphHeight
	dc.w 0x51C8,0xFFF8
	dc.w 0x4E75
dvmGraph_UpdateParam:
	dc.w 0x11FC,0x0005
	dc.w dvPosition
	dc.w 0x7000
	dc.w 0x1038
	dc.w dvGrapParam
	dc.w 0x4BFA
	dc.w (dvGraphParams)-*
	dc.w 0xDAC0
	dc.w 0x2255
	dc.w 0x4BE9,0x0004
	dc.w 0x341D
	dc.w 0x361D
	dc.w 0x4EBA
	dc.w (dvLoadScale)-*
	dc.w 0x4278
	dc.w dvGraphLeft
	dc.w 0x4278
	dc.w dvGraphCol
	dc.w 0x4278
	dc.w dvGraphCol2
	dc.w 0x31FC
	dc.w dvGraphBuffer+(dvGraphHeight*4*4)
	dc.w dvGraphLast
	dc.w 0x31FC
	dc.w dvGraphBuffer+(dvGraphHeight*4*4)
	dc.w dvGraphLast2
	dc.w 0x43F8
	dc.w dvGraphHistory
	dc.w 0x31C9
	dc.w dvGraphHisPos
	dc.w 0x31C9
	dc.w dvGraphHisPos2
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070
	dc.w 0x1000+(0xFF&(dvMusHistory))
	dc.w 0x7000
	dc.w 0x1038
	dc.w dvGrapParam
	dc.w 0x2070,0x0000
	dc.w 0x3038
	dc.w dvFullHisPos
	dc.w 0x45F0,0x0000
	dc.w 0x704F
	dc.w 0x43F8
	dc.w dvGraphHisEnd
	dc.w 0x3222
	dc.w 0x3301
	dc.w 0x3301
	dc.w 0x3301
	dc.w 0x3301
	dc.w 0xB5C8
	dc.w 0x6604
	dc.w 0xD4FC,0x00A0
	dc.w 0x51C8,0xFFEC
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4104,0x0003,0x0004
	dc.w 0x3CBC,0x601F
	dc.w 0x3C3C
	dc.w dvtGold
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x2CBC,0x0000,0x0000
	dc.w 0x2CBC,0x0000,0x0000
	dc.w 0x2CBC,0x0000,0x0000
	dc.w 0x3CBC,0x601E
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmUpd_Graph:
	dc.w 0x4EBA
	dc.w (dvCheckFunctions)-*
	dc.w 0x5238
	dc.w dvPosition
	dc.w 0x46FC,0x2700
	dc.w 0x0838,0x0002
	dc.w dvPadPress+1
	dc.w 0x670E
	dc.w 0x5938
	dc.w dvGrapParam
	dc.w 0x6A20
	dc.w 0x11FC
	dc.w dvGraphParams_End-4-dvGraphParams
	dc.w dvGrapParam
	dc.w 0x6018
	dc.w 0x0838,0x0003
	dc.w dvPadPress+1
	dc.w 0x6714
	dc.w 0x5838
	dc.w dvGrapParam
	dc.w 0x0C38
	dc.w dvGraphParams_End-dvGraphParams
	dc.w dvGrapParam
	dc.w 0x6504
	dc.w 0x4238
	dc.w dvGrapParam
	dc.w 0x4EBA
	dc.w (dvmGraph_UpdateParam)-*
	dc.w 0x46FC,0x2300
	dc.w 0x700F
	dc.w 0xC038
	dc.w dvPosition
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x4EFB,0x0002
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_CheckChannel)-*
	dc.w 0x6000
	dc.w (dvmGraph_Scale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
	dc.w 0x6000
	dc.w (dvmGraph_ApplyScale)-*
dvmGraph_SwitchRow:
	dc.w 0x4EBA
	dc.w (dvmGraph_Draw)-*
	dc.w 0x5878
	dc.w dvGraphCol
	dc.w 0x0278,0x00FC
	dc.w dvGraphCol
	dc.w 0x4EFA
	dc.w (dvmGraph_ResetTileBuf)-*
dvsGraphMus:
	dc.b " Music",0
dvsGraphSFX:
	dc.b " SFX",0
dvmGraph_CheckChannel:
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4B84,0x0003,0x0004
	dc.w 0x3C3C
	dc.w dvtWhit
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2270,0x1000
	dc.w 0x3251
	dc.w 0x4A11
	dc.w 0x6B04
	dc.w 0x3C3C
	dc.w dvtGray
	dc.w 0x4BE8
	dc.w dvString
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x4BFA
	dc.w (dvsGraphMus)-*
	dc.w 0x0C01
	dc.w dvMusicId
	dc.w 0x6704
	dc.w 0x4BFA
	dc.w (dvsGraphSFX)-*
	dc.w 0x4EBA
	dc.w (dvWriteString)-*
	dc.w 0x46FC,0x2300
dvmGraph_Draw:
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x7002,0x0003,0x0004
	dc.w 0x7007
	dc.w 0xC038
	dc.w dvPosition
	dc.w 0x3238
	dc.w dvGraphCol
	dc.w 0xD241
	dc.w 0xD240
	dc.w 0x4441
	dc.w 0x0641,0x013F
	dc.w 0x3C81
	dc.w 0x46FC,0x2300
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x45FA
	dc.w (dvPixTable)-*
	dc.w 0x2E32,0x0000
	dc.w 0x4EBA
	dc.w (dvmGraph_UpdateHistory)-*
	dc.w 0x2478
	dc.w dvGraphRout
	dc.w 0x47FA
	dc.w (dvmGraph_LineLUT)-*
	dc.w 0x3838
	dc.w dvGraphLast
	dc.w 0x4EBA
	dc.w (dvPlotPixel)-*
	dc.w 0x31C4
	dc.w dvGraphLast
	dc.w 0x4EFA
	dc.w (dvSendTileBuffer)-*
dvmGraph_UpdateHistory:
	dc.w 0x2078
	dc.w dvChanData
	dc.w 0x3238
	dc.w dvChanOffs
	dc.w 0x2070,0x1000
	dc.w 0x7000
	dc.w 0x1038
	dc.w dvGrapParam
	dc.w 0x43FA
	dc.w (dvGraphParams)-*
	dc.w 0xD2C0
	dc.w 0x7000
	dc.w 0x2251
	dc.w 0x4EA9,0x0018
	dc.w 0x4EBA
	dc.w (dvScale_PutHistory)-*
	dc.w 0x3600
dvmGraph_UpdateValue:
	dc.w 0x46FC,0x2700
	dc.w 0x2D7C,0x4126,0x0003,0x0004
	dc.w 0x4EBA
	dc.w (dvWriteGraphNumber)-*
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmGraph_Scale:
	dc.w 0x4EBA
	dc.w (dvCalculateScale)-*
	dc.w 0x31FC,0x0027
	dc.w dvGraphLeft
	dc.w 0x31F8
	dc.w dvGraphCol
	dc.w dvGraphCol2
	dc.w 0x4EBA
	dc.w (dvmGraph_SwitchRow)-*
	dc.w 0x31F8
	dc.w dvGraphHisPos
	dc.w dvGraphHisPos2
	dc.w 0x3478
	dc.w dvGraphHisPos2
	dc.w 0x3022
	dc.w 0xB4FC
	dc.w dvGraphHistory
	dc.w 0x6C04
	dc.w 0x3038
	dc.w dvGraphHisEnd-2
	dc.w 0x9078
	dc.w dvGraphOff
	dc.w 0x2478
	dc.w dvGraphRout
	dc.w 0x4E92
	dc.w 0x45FA
	dc.w (dvmGraph_LineLUT2)-*
	dc.w 0xD040
	dc.w 0x31F2,0x0000
	dc.w dvGraphLast2
	dc.w 0x4E75
dvmGraph_ApplyScale:
	dc.w 0x4EBA
	dc.w (dvmGraph_Draw)-*
	dc.w 0x4A78
	dc.w dvGraphLeft
	dc.w 0x6602
	dc.w 0x4E75
	dc.w 0x2478
	dc.w dvGraphRout
	dc.w 0x3A38
	dc.w dvGraphCol2
	dc.w 0x3838
	dc.w dvGraphLast2
	dc.w 0x3A78
	dc.w dvGraphHisPos2
	dc.w 0x47FA
	dc.w (dvmGraph_LineLUT2)-*
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x6600,0x002C
	dc.w 0x49FA
	dc.w (dvPixTable_End)-*
	dc.w 0x7607
	dc.w 0x3025
	dc.w 0x2E24
	dc.w 0x4EBA
	dc.w (dvPlotPixel)-*
	dc.w 0xBAFC
	dc.w dvGraphHistory
	dc.w 0x6204
	dc.w 0x3A7C
	dc.w dvGraphHisEnd
	dc.w 0x51CB,0xFFEC
	dc.w 0x70FC
	dc.w 0x41F8
	dc.w dvGraphBuffer2
	dc.w 0x4EBA
	dc.w (dvFastUpdateRow)-*
	dc.w 0x6600,0xFFCC
	dc.w 0x31C4
	dc.w dvGraphLast2
	dc.w 0x31C5
	dc.w dvGraphCol2
	dc.w 0x31CD
	dc.w dvGraphHisPos2
	dc.w 0x4E75
dvSendTileBuffer:
	dc.w 0x46FC,0x2700
	dc.w 0x41FA
	dc.w (dvmGraph_RowTable)-*
	dc.w 0x3238
	dc.w dvGraphCol
	dc.w 0x2D70,0x1000,0x0004
	dc.w 0x41F8
	dc.w dvGraphBuffer
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvmGraph_RowTable:
	dc.l 0x50000000
	dc.l 0x52800000
	dc.l 0x55000000
	dc.l 0x57800000
	dc.l 0x5A000000
	dc.l 0x5C800000
	dc.l 0x5F000000
	dc.l 0x61800000
	dc.l 0x64000000
	dc.l 0x66800000
	dc.l 0x69000000
	dc.l 0x6B800000
	dc.l 0x6E000000
	dc.l 0x70800000
	dc.l 0x73000000
	dc.l 0x75800000
	dc.l 0x78000000
	dc.l 0x7A800000
	dc.l 0x7D000000
	dc.l 0x7F800000
	dc.l 0x42000001
	dc.l 0x44800001
	dc.l 0x47000001
	dc.l 0x49800001
	dc.l 0x4C000001
	dc.l 0x4E800001
	dc.l 0x51000001
	dc.l 0x53800001
	dc.l 0x56000001
	dc.l 0x58800001
	dc.l 0x5B000001
	dc.l 0x5D800001
	dc.l 0x60000001
	dc.l 0x62800001
	dc.l 0x65000001
	dc.l 0x67800001
	dc.l 0x6A000001
	dc.l 0x6C800001
	dc.l 0x6F000001
	dc.l 0x71800001
	dc.l 0x74000001
	dc.l 0x76800001
	dc.l 0x79000001
	dc.l 0x7B800001
	dc.l 0x7E000001
	dc.l 0x40800002
	dc.l 0x43000002
	dc.l 0x45800002
	dc.l 0x48000002
	dc.l 0x4A800002
	dc.l 0x4D000002
	dc.l 0x4F800002
	dc.l 0x52000002
	dc.l 0x54800002
	dc.l 0x57000002
	dc.l 0x59800002
	dc.l 0x5C000002
	dc.l 0x5E800002
	dc.l 0x61000002
	dc.l 0x63800002
	dc.l 0x66000002
	dc.l 0x68800002
	dc.l 0x6B000002
	dc.l 0x6D800002
dvPlotPixel:
	dc.w 0x9078
	dc.w dvGraphOff
	dc.w 0x4E92
	dc.w 0xD040
	dc.w 0x3073,0x0000
	dc.w 0x3244
	dc.w 0x3808
	dc.w 0x8F90
	dc.w 0xB2C8
	dc.w 0x670E
	dc.w 0x6C02
	dc.w 0xC149
	dc.w 0x5848
	dc.w 0x6002
	dc.w 0x8F98
	dc.w 0xB2C8
	dc.w 0x6EFA
	dc.w 0x4E75
dvPixTable:
	dc.l 0xF0000000
	dc.l 0xF000000
	dc.l 0xF00000
	dc.l 0xF0000
	dc.l 0xF000
	dc.l 0xF00
	dc.l 0xF0
	dc.l 0xF
dvPixTable_End:
dvmTest_LoadScale:
	dc.w 0x4EBA
	dc.w (dvmGraph_ResetTileBuf)-*
	dc.w 0x4EBA
	dc.w (dvCalculateScale)-*
	dc.w 0x4EBA
	dc.w (dvInitScalePosition)-*
	dc.w 0x21FC
	dc.l dvmTest_ScaleDraw
	dc.w dvTestUpdate
dvmTest_ScaleDraw:
	dc.w 0x3878
	dc.w dvGraphHisPos
	dc.w 0x3838
	dc.w dvGraphLast
	dc.w 0x3A38
	dc.w dvGraphCol
	dc.w 0x2478
	dc.w dvGraphRout
	dc.w 0x47FA
	dc.w (dvmGraph_LineLUT)-*
	dc.w 0x701C
	dc.w 0xC038
	dc.w dvPosition
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x662C
	dc.w 0x2E3B
	dc.w 0x0000+(0xFF&((dvPixTable)-*))
	dc.w 0x301C
	dc.w 0x4EBA
	dc.w (dvPlotPixel)-*
	dc.w 0x1038
	dc.w dvPosition
	dc.w 0x5800
	dc.w 0x0240,0x001C
	dc.w 0x11C0
	dc.w dvPosition
	dc.w 0x66E0
	dc.w 0x7004
	dc.w 0x41F8
	dc.w dvGraphBuffer
	dc.w 0x6100+(0xFF&((dvFastUpdateRow)-*-2))
	dc.w 0x66CC
	dc.w 0x21FC
	dc.l dvmTest_ScaleDraw_Rts
	dc.w dvTestUpdate
	dc.w 0x31C4
	dc.w dvGraphLast
	dc.w 0x31CC
	dc.w dvGraphHisPos
	dc.w 0x31C5
	dc.w dvGraphCol
dvmTest_ScaleDraw_Rts:
	dc.w 0x4E75
dvFastUpdateRow:
	dc.w 0x46FC,0x2700
	dc.w 0x43FA
	dc.w (dvmGraph_RowTable)-*
	dc.w 0x2D71,0x5000,0x0004
	dc.w 0xDA40
	dc.w 0x0245,0x00FC
	dc.w 0x7C00
	dc.w 0x7E00
	dc.w 0x2247
	dc.w 0x2647
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x4CD8,0x000F
	dc.w 0x2C80
	dc.w 0x2C81
	dc.w 0x2C82
	dc.w 0x2C83
	dc.w 0x48E8,0x0AC0,0xFFF0
	dc.w 0x46FC,0x2300
	dc.w 0x5378
	dc.w dvGraphLeft
	dc.w 0x4E75
dvmGraph_ResetTileBuf:
	dc.w 0x41F8
	dc.w dvGraphBelow
	dc.w 0x7000
	dc.w 0x7200
	dc.w 0x7400
	dc.w 0x7600
	dc.w 0x7800
	dc.w 0x7A00
	dc.w 0x7C00
	dc.w 0x7E00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x48E0,0xFF00
	dc.w 0x4E75
dvmTest_InitScale:
	dc.w 0x31FC
	dc.w dvGraphHistory
	dc.w dvGraphHisPos
	dc.w 0x4278
	dc.w dvGraphCol
	dc.w 0x4238
	dc.w dvPosition
	dc.w 0x31FC,0x0028
	dc.w dvGraphLeft
	dc.w 0x3038
	dc.w dvTestType
	dc.w 0x21FB,0x0008
	dc.w dvTestUpdate
	dc.w 0x4EFB,0x0012
	dc.l dvmTest_DoScaleVoice
	dc.l dvmTest_DoScaleSample
	dc.l dvmTest_DoScaleVib
	dc.l dvmTest_DoScaleEnv
	dc.w 0x6000
	dc.w (dvmTest_InitScaleVoice)-*
	dc.w 0x6000
	dc.w (dvmTest_InitScaleSample)-*
	dc.w 0x6000
	dc.w (dvmTest_InitScaleVib)-*
dvmTest_InitScaleEnv:
	dc.w 0x46FC,0x2300
	dc.w 0x45F8
	dc.w dvTestBuffer+4
	dc.w 0x426A
	dc.w cdEnvPos
	dc.w 0x422A
	dc.w cdEnvDelay
	dc.w 0x422A
	dc.w cdEnvLastDelay
	dc.w 0x08D2
	dc.w cdfDelay
dvmTest_DoScaleEnv:
	dc.w 0x45F8
	dc.w dvTestBuffer+4
	dc.w 0x2678
	dc.w dvTestBuffer
	dc.w 0x41FA
	dc.w (dvmTest_DoScaleEnv_Mute-ciMute)-*
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x6702
	dc.w 0x4E75
	dc.w 0x7000
	dc.w 0x4EB9
	dc.l dUpdateEnvelope
	dc.w 0x4EBA
	dc.w (dvmTest_PutHistory)-*
	dc.w 0x63EA
	dc.w 0x31FC
	dc.w dvGraphHistory
	dc.w dvGraphHisPos
	dc.w 0x21FC
	dc.l dvmTest_LoadScale
	dc.w dvTestUpdate
dvmTest_DoScaleEnv_Rts:
	dc.w 0x4E75
dvmTest_DoScaleEnv_Mute:
	dc.l dvmTest_DoScaleEnv_Rts
dvmTest_InitScaleVib:
	dc.w 0x46FC,0x2300
	dc.w 0x41F8
	dc.w dvTestBuffer
	dc.w 0x45F8
	dc.w dvTestBuffer+8
	dc.w 0x1568
	dc.w vtDelay
	dc.w cdVibDelay
	dc.w 0x1568
	dc.w vtStep
	dc.w cdVibPos
	dc.w 0x422A
	dc.w cdVibPos+1
dvmTest_DoScaleVib:
	dc.w 0x41F8
	dc.w dvTestBuffer
	dc.w 0x45F8
	dc.w dvTestBuffer+8
dvmTest_DoScaleVib_Next:
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x6702
	dc.w 0x4E75
	dc.w 0x7000
	dc.w 0x4A2A
	dc.w cdVibDelay
	dc.w 0x6706
	dc.w 0x532A
	dc.w cdVibDelay
	dc.w 0x6000+(0xFF&((dvmTest_DoScaleVib_Put)-*-2))
	dc.w 0x41F8
	dc.w dvTestBuffer
	dc.w 0x3218
	dc.w 0xD36A
	dc.w cdVibPos
	dc.w 0x3218
	dc.w 0x122A
	dc.w cdVibPos
	if SAFE_MODE
	dc.w 0x0C41
	dc.w 0x00FF+(vsLast<<8)
	dc.w 0x6322
	dc.w 0x0281,0x0000,0xFFFF
	dc.w 0xE049
	dc.w 0x2F07
	dc.w 0x2E38
	dc.w mErrorRoutine
	dc.w 0x6700,0xFFFE
	dc.w 0x2F01
	dc.w 0x2F08
	dc.w 0x4878
	dc.w (meInvalidVibratoShape)
	dc.w 0x487A,0x0006
	dc.w 0x2F07
	dc.w 0x4E75
	endif
	dc.w 0x47F9
	dc.l dVibLUTs
	dc.w 0xD241
	dc.w 0xD6C1
	dc.w 0x3213
	dc.w 0xC3D8
	dc.w 0x4841
	dc.w 0xD041
dvmTest_DoScaleVib_Put:
	dc.w 0x4EBA
	dc.w (dvmTest_PutHistory)-*
	dc.w 0x6300
	dc.w (dvmTest_DoScaleVib_Next)-*
	dc.w 0x21FC
	dc.l dvmTest_LoadScale
	dc.w dvTestUpdate
	dc.w 0x31FC
	dc.w dvGraphHistory
	dc.w dvGraphHisPos
	dc.w 0x4E75
dvmTest_PutHistory:
	dc.w 0x3238
	dc.w dvTestHistCount
	dc.w 0x3278
	dc.w dvGraphHisPos
	dc.w 0x32C0
	dc.w 0xB2FC
	dc.w dvGraphHisEnd
	dc.w 0x52C9,0xFFF8
	dc.w 0x31C9
	dc.w dvGraphHisPos
	dc.w 0xB2FC
	dc.w dvGraphHisEnd
	dc.w 0x4E75
dvmTest_LoadSample:
	dc.w 0x7200
	dc.w 0x1230,0x0002
	dc.w 0x4841
	dc.w 0x323C,0x007F
	dc.w 0xC230,0x0001
	dc.w 0xEE59
	dc.w 0xE289
	dc.w 0x1230,0x0000
	dc.w 0x4A81
	dc.w 0x6606
	dc.w 0x223C
	dc.l dsStop
	dc.w 0x4E75
dvmTest_InitScaleSample:
	dc.w 0x46FC,0x2300
	dc.w 0x41F8
	dc.w dvTestBuffer
	dc.w 0x3010
	dc.w 0x0640,0x0100
	dc.w 0x31C0
	dc.w dvTestBuffer+0x28
	dc.w 0x6A12
	dc.w 0x7000+(stStartRev)
	dc.w 0x6100+(0xFF&((dvmTest_LoadSample)-*-2))
	dc.w 0x21C1
	dc.w dvTestBuffer+0x20
	dc.w 0x7000+(stLoopRev)
	dc.w 0x6100+(0xFF&((dvmTest_LoadSample)-*-2))
	dc.w 0x21C1
	dc.w dvTestBuffer+0x24
	dc.w 0x6010
	dc.w 0x7000+(stStart)
	dc.w 0x6100+(0xFF&((dvmTest_LoadSample)-*-2))
	dc.w 0x21C1
	dc.w dvTestBuffer+0x20
	dc.w 0x7000+(stLoop)
	dc.w 0x6100+(0xFF&((dvmTest_LoadSample)-*-2))
	dc.w 0x21C1
	dc.w dvTestBuffer+0x24
	dc.w 0x7007
	dc.w 0x9078
	dc.w dvTestHistCount
	dc.w 0x3238
	dc.w dvTestBuffer+0x28
	dc.w 0xE161
	dc.w 0x31C1
	dc.w dvTestBuffer+0x28
	dc.w 0x4238
	dc.w dvTestBuffer+0x2A
dvmTest_DoScaleSample:
	dc.w 0x7880
	dc.w 0x1238
	dc.w dvTestBuffer+0x2A
	dc.w 0x1438
	dc.w dvTestBuffer+0x29
	dc.w 0x1638
	dc.w dvTestBuffer+0x28
	dc.w 0x2078
	dc.w dvTestBuffer+0x20
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x670A
	dc.w 0x11C1
	dc.w dvTestBuffer+0x2A
	dc.w 0x21C8
	dc.w dvTestBuffer+0x20
	dc.w 0x4E75
	dc.w 0x1010
	dc.w 0x6606
	dc.w 0x2078
	dc.w dvTestBuffer+0x24
	dc.w 0x1010
	dc.w 0xD202
	dc.w 0x7A00
	dc.w 0xDB03
	dc.w 0x4885
	dc.w 0xD0C5
	dc.w 0xB900
	dc.w 0x4880
	dc.w 0x6100+(0xFF&((dvScale_PutHistory)-*-2))
	dc.w 0x6100+(0xFF&((dvScale_PutHistory)-*-2))
	dc.w 0xB2FC
	dc.w dvGraphHistory
	dc.w 0x66CE
	dc.w 0x31FC
	dc.w dvGraphHistory
	dc.w dvGraphHisPos
	dc.w 0x21FC
	dc.l dvmTest_LoadScale
	dc.w dvTestUpdate
	dc.w 0x4E75
dvScale_PutHistory:
	dc.w 0x3278
	dc.w dvGraphHisPos
	dc.w 0x32C0
	dc.w 0xB2FC
	dc.w dvGraphHisEnd
	dc.w 0x6D04
	dc.w 0x327C
	dc.w dvGraphHistory
	dc.w 0x31C9
	dc.w dvGraphHisPos
	dc.w 0x4E75
dvmTest_InitScaleVoice:
	dc.w 0x46FC,0x2300
	dc.w 0x41F9
	dc.l dvTestScale
dvmTest_DoScaleVoice:
	dc.w 0x41F9
	dc.l dvTestScale
	dc.w 0x45F8
	dc.w dvTestBuffer
	dc.w 0x4A38
	dc.w dvIntFlag
	dc.w 0x6702
	dc.w 0x4E75
	dc.w 0x3E38
	dc.w dvTestHistCount
	dc.w 0x4EBA
	dc.w (dvScale_PutHistory)-*
	dc.w 0x4EBA
	dc.w (dvScale_PutHistory)-*
	dc.w 0xB2FC
	dc.w dvGraphHistory
	dc.w 0x6600,0xFFE6
	dc.w 0x31FC
	dc.w dvGraphHistory
	dc.w dvGraphHisPos
	dc.w 0x21FC
	dc.l dvmTest_LoadScale
	dc.w dvTestUpdate
	dc.w 0x4E75
dvUpdateScaleText:
	dc.w 0x46FC,0x2700
	dc.w 0x3038
	dc.w dvGraphScale
	dc.w 0xE248
	dc.w 0x2D7C,0x4142,0x0003,0x0004
	dc.w 0x3638
	dc.w dvGraphOff
	dc.w 0x9640
	dc.w 0x6100+(0xFF&((dvWriteGraphNumber)-*-2))
	dc.w 0x2D7C,0x4BC2,0x0003,0x0004
	dc.w 0x3638
	dc.w dvGraphOff
	dc.w 0xD640
	dc.w 0x6100+(0xFF&((dvWriteGraphNumber)-*-2))
	dc.w 0x46FC,0x2300
	dc.w 0x4E75
dvWriteGraphNumber:
	dc.w 0x3C3C,0x402B
	dc.w 0x4A43
	dc.w 0x6A06
	dc.w 0x4443
	dc.w 0x1C3C,0x002D
	dc.w 0x3C86
	dc.w 0x7A03
	dc.w 0x4EFA
	dc.w (dWriteNumber)-*
dvInitScalePosition:
	dc.w 0x3038
	dc.w dvGraphHistory
	dc.w 0x9078
	dc.w dvGraphOff
	dc.w 0x2478
	dc.w dvGraphRout
	dc.w 0x4E92
	dc.w 0x45FA
	dc.w (dvmGraph_LineLUT)-*
	dc.w 0xD040
	dc.w 0x31F2,0x0000
	dc.w dvGraphLast
	dc.w 0x4E75
dvCalculateScale:
	dc.w 0x343C
	dc.w dvGraphHistSz-2
	dc.w 0x41F8
	dc.w dvGraphHistory
	dc.w 0x3010
	dc.w 0x3218
	dc.w 0x3618
	dc.w 0x670C
	dc.w 0xB043
	dc.w 0x6C02
	dc.w 0x3003
	dc.w 0xB243
	dc.w 0x6F02
	dc.w 0x3203
	dc.w 0x51CA,0xFFEE
	dc.w 0x7400
	dc.w 0x1438
	dc.w dvGrapParam
	dc.w 0x43FA
	dc.w (dvGraphParams)-*
	dc.w 0xD2C2
	dc.w 0x2251
	dc.w 0x3400
	dc.w 0x9441
	dc.w 0x3602
	dc.w 0xE24B
	dc.w 0xD641
dvLoadScale:
	dc.w 0x31C3
	dc.w dvGraphOff
	dc.w 0xB459
	dc.w 0x6D04
	dc.w 0xB459
	dc.w 0x6F04
	dc.w 0x3429,0xFFFE
	dc.w 0x41FA,0x00D8
	dc.w 0x70FC
	dc.w 0x5840
	dc.w 0xB458
	dc.w 0x64FA
	dc.w 0x31D0
	dc.w dvGraphScale
	dc.w 0x21FB,0x0008
	dc.w dvGraphRout
	dc.w 0x4EFA
	dc.w (dvUpdateScaleText)-*
	dc.l dvmGraph_S0010,dvmGraph_S0014,dvmGraph_S0018
	dc.l dvmGraph_S001C,dvmGraph_S0020,dvmGraph_S0028
	dc.l dvmGraph_S0030,dvmGraph_S0038,dvmGraph_S0040
	dc.l dvmGraph_S0050,dvmGraph_S0060,dvmGraph_S0070
	dc.l dvmGraph_S0080,dvmGraph_S00A0,dvmGraph_S00C0
	dc.l dvmGraph_S00E0,dvmGraph_S0100,dvmGraph_S0140
	dc.l dvmGraph_S0180,dvmGraph_S01C0,dvmGraph_S0200
	dc.l dvmGraph_S0280,dvmGraph_S0300,dvmGraph_S0380
	dc.l dvmGraph_S0400,dvmGraph_S0500,dvmGraph_S0600
	dc.l dvmGraph_S0700,dvmGraph_S0800,dvmGraph_S0A00
	dc.l dvmGraph_S0C00,dvmGraph_S0E00,dvmGraph_S1000
	dc.l dvmGraph_S1400,dvmGraph_S1800,dvmGraph_S1C00
	dc.l dvmGraph_S2000,dvmGraph_S2800,dvmGraph_S3000
	dc.l dvmGraph_S3800,dvmGraph_S4000,dvmGraph_S5000
	dc.l dvmGraph_S6000,dvmGraph_S7000,dvmGraph_S8000
	dc.l dvmGraph_S0000,dvmGraph_S0000,dvmGraph_S0000
	dc.w 0x0002
	dc.w 0x0010,0x0014,0x0018,0x001C,0x0020
	dc.w 0x0028,0x0030,0x0038,0x0040,0x0050
	dc.w 0x0060,0x0070,0x0080,0x00A0,0x00C0
	dc.w 0x00E0,0x0100,0x0140,0x0180,0x01C0
	dc.w 0x0200,0x0280,0x0300,0x0380,0x0400
	dc.w 0x0500,0x0600,0x0700,0x0800,0x0A00
	dc.w 0x0C00,0x0E00,0x1000,0x1400,0x1800
	dc.w 0x1C00,0x2000,0x2800,0x3000,0x3800
	dc.w 0x4000,0x5000,0x6000,0x7000,0x7FF0
	dc.w 0x7FF0,0xFFFF,0x0000
dvmGraph_S0010:
	dc.w 0xE940
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0014:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE940
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0018:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE940
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S001C:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE940
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0020:
	dc.w 0xE740
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0028:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE740
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0030:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE740
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0038:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE740
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0040:
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0050:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0060:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0070:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0080:
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S00A0:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S00C0:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S00E0:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xD040
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0140:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0180:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S01C0:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0200:
	dc.w 0xE240
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0280:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE240
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0300:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE240
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0380:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE240
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0400:
	dc.w 0xE440
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0500:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE440
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S0600:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE440
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0700:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE440
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0800:
	dc.w 0xE640
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0A00:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE640
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0C00:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE640
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0E00:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE640
dvmGraph_S0100:
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S0000:
dvmGraph_OutOfRange:
	dc.w 0x4A40
	dc.w 0x6B04
	dc.w 0x70FE
	dc.w 0x4E75
	dc.w 0x70FF
	dc.w 0x4E75
dvmGraph_S1000:
	dc.w 0xE840
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S1400:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xE840
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S1800:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE840
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S1C00:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xE840
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400+(0xFF&((dvmGraph_OutOfRange)-*-2))
	dc.w 0x4E75
dvmGraph_S2000:
	dc.w 0xEA40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S2800:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xEA40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S3000:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xEA40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S3800:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xEA40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S4000:
	dc.w 0xEC40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S5000:
	dc.w 0x3200
	dc.w 0xE641
	dc.w 0x9041
	dc.w 0xEC40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S6000:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xEC40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S7000:
	dc.w 0x3200
	dc.w 0xE441
	dc.w 0x9041
	dc.w 0xE241
	dc.w 0x9041
	dc.w 0xEC40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
dvmGraph_S8000:
	dc.w 0xEE40
	dc.w 0x0640,0x0080
	dc.w 0x0C40,0x0100
	dc.w 0x6400
	dc.w (dvmGraph_OutOfRange)-*
	dc.w 0x4E75
	dc.w dvGraphBelow,dvGraphAbove
dvmGraph_LineLUT:
	dc.w dvGraphBuffer+0x0
	dc.w dvGraphBuffer+0x0
	dc.w dvGraphBuffer+0x4
	dc.w dvGraphBuffer+0x4
	dc.w dvGraphBuffer+0x8
	dc.w dvGraphBuffer+0xC
	dc.w dvGraphBuffer+0xC
	dc.w dvGraphBuffer+0x10
	dc.w dvGraphBuffer+0x14
	dc.w dvGraphBuffer+0x14
	dc.w dvGraphBuffer+0x18
	dc.w dvGraphBuffer+0x18
	dc.w dvGraphBuffer+0x1C
	dc.w dvGraphBuffer+0x20
	dc.w dvGraphBuffer+0x20
	dc.w dvGraphBuffer+0x24
	dc.w dvGraphBuffer+0x28
	dc.w dvGraphBuffer+0x28
	dc.w dvGraphBuffer+0x2C
	dc.w dvGraphBuffer+0x2C
	dc.w dvGraphBuffer+0x30
	dc.w dvGraphBuffer+0x34
	dc.w dvGraphBuffer+0x34
	dc.w dvGraphBuffer+0x38
	dc.w dvGraphBuffer+0x3C
	dc.w dvGraphBuffer+0x3C
	dc.w dvGraphBuffer+0x40
	dc.w dvGraphBuffer+0x40
	dc.w dvGraphBuffer+0x44
	dc.w dvGraphBuffer+0x48
	dc.w dvGraphBuffer+0x48
	dc.w dvGraphBuffer+0x4C
	dc.w dvGraphBuffer+0x50
	dc.w dvGraphBuffer+0x50
	dc.w dvGraphBuffer+0x54
	dc.w dvGraphBuffer+0x54
	dc.w dvGraphBuffer+0x58
	dc.w dvGraphBuffer+0x5C
	dc.w dvGraphBuffer+0x5C
	dc.w dvGraphBuffer+0x60
	dc.w dvGraphBuffer+0x64
	dc.w dvGraphBuffer+0x64
	dc.w dvGraphBuffer+0x68
	dc.w dvGraphBuffer+0x68
	dc.w dvGraphBuffer+0x6C
	dc.w dvGraphBuffer+0x70
	dc.w dvGraphBuffer+0x70
	dc.w dvGraphBuffer+0x74
	dc.w dvGraphBuffer+0x78
	dc.w dvGraphBuffer+0x78
	dc.w dvGraphBuffer+0x7C
	dc.w dvGraphBuffer+0x7C
	dc.w dvGraphBuffer+0x80
	dc.w dvGraphBuffer+0x84
	dc.w dvGraphBuffer+0x84
	dc.w dvGraphBuffer+0x88
	dc.w dvGraphBuffer+0x8C
	dc.w dvGraphBuffer+0x8C
	dc.w dvGraphBuffer+0x90
	dc.w dvGraphBuffer+0x90
	dc.w dvGraphBuffer+0x94
	dc.w dvGraphBuffer+0x98
	dc.w dvGraphBuffer+0x98
	dc.w dvGraphBuffer+0x9C
	dc.w dvGraphBuffer+0xA0
	dc.w dvGraphBuffer+0xA0
	dc.w dvGraphBuffer+0xA4
	dc.w dvGraphBuffer+0xA4
	dc.w dvGraphBuffer+0xA8
	dc.w dvGraphBuffer+0xAC
	dc.w dvGraphBuffer+0xAC
	dc.w dvGraphBuffer+0xB0
	dc.w dvGraphBuffer+0xB4
	dc.w dvGraphBuffer+0xB4
	dc.w dvGraphBuffer+0xB8
	dc.w dvGraphBuffer+0xB8
	dc.w dvGraphBuffer+0xBC
	dc.w dvGraphBuffer+0xC0
	dc.w dvGraphBuffer+0xC0
	dc.w dvGraphBuffer+0xC4
	dc.w dvGraphBuffer+0xC8
	dc.w dvGraphBuffer+0xC8
	dc.w dvGraphBuffer+0xCC
	dc.w dvGraphBuffer+0xCC
	dc.w dvGraphBuffer+0xD0
	dc.w dvGraphBuffer+0xD4
	dc.w dvGraphBuffer+0xD4
	dc.w dvGraphBuffer+0xD8
	dc.w dvGraphBuffer+0xDC
	dc.w dvGraphBuffer+0xDC
	dc.w dvGraphBuffer+0xE0
	dc.w dvGraphBuffer+0xE0
	dc.w dvGraphBuffer+0xE4
	dc.w dvGraphBuffer+0xE8
	dc.w dvGraphBuffer+0xE8
	dc.w dvGraphBuffer+0xEC
	dc.w dvGraphBuffer+0xF0
	dc.w dvGraphBuffer+0xF0
	dc.w dvGraphBuffer+0xF4
	dc.w dvGraphBuffer+0xF4
	dc.w dvGraphBuffer+0xF8
	dc.w dvGraphBuffer+0xFC
	dc.w dvGraphBuffer+0xFC
	dc.w dvGraphBuffer+0x100
	dc.w dvGraphBuffer+0x104
	dc.w dvGraphBuffer+0x104
	dc.w dvGraphBuffer+0x108
	dc.w dvGraphBuffer+0x108
	dc.w dvGraphBuffer+0x10C
	dc.w dvGraphBuffer+0x110
	dc.w dvGraphBuffer+0x110
	dc.w dvGraphBuffer+0x114
	dc.w dvGraphBuffer+0x118
	dc.w dvGraphBuffer+0x118
	dc.w dvGraphBuffer+0x11C
	dc.w dvGraphBuffer+0x11C
	dc.w dvGraphBuffer+0x120
	dc.w dvGraphBuffer+0x124
	dc.w dvGraphBuffer+0x124
	dc.w dvGraphBuffer+0x128
	dc.w dvGraphBuffer+0x12C
	dc.w dvGraphBuffer+0x12C
	dc.w dvGraphBuffer+0x130
	dc.w dvGraphBuffer+0x130
	dc.w dvGraphBuffer+0x134
	dc.w dvGraphBuffer+0x138
	dc.w dvGraphBuffer+0x138
	dc.w dvGraphBuffer+0x13C
	dc.w dvGraphBuffer+0x140
	dc.w dvGraphBuffer+0x140
	dc.w dvGraphBuffer+0x144
	dc.w dvGraphBuffer+0x144
	dc.w dvGraphBuffer+0x148
	dc.w dvGraphBuffer+0x14C
	dc.w dvGraphBuffer+0x14C
	dc.w dvGraphBuffer+0x150
	dc.w dvGraphBuffer+0x154
	dc.w dvGraphBuffer+0x154
	dc.w dvGraphBuffer+0x158
	dc.w dvGraphBuffer+0x158
	dc.w dvGraphBuffer+0x15C
	dc.w dvGraphBuffer+0x160
	dc.w dvGraphBuffer+0x160
	dc.w dvGraphBuffer+0x164
	dc.w dvGraphBuffer+0x168
	dc.w dvGraphBuffer+0x168
	dc.w dvGraphBuffer+0x16C
	dc.w dvGraphBuffer+0x16C
	dc.w dvGraphBuffer+0x170
	dc.w dvGraphBuffer+0x174
	dc.w dvGraphBuffer+0x174
	dc.w dvGraphBuffer+0x178
	dc.w dvGraphBuffer+0x17C
	dc.w dvGraphBuffer+0x17C
	dc.w dvGraphBuffer+0x180
	dc.w dvGraphBuffer+0x180
	dc.w dvGraphBuffer+0x184
	dc.w dvGraphBuffer+0x188
	dc.w dvGraphBuffer+0x188
	dc.w dvGraphBuffer+0x18C
	dc.w dvGraphBuffer+0x190
	dc.w dvGraphBuffer+0x190
	dc.w dvGraphBuffer+0x194
	dc.w dvGraphBuffer+0x194
	dc.w dvGraphBuffer+0x198
	dc.w dvGraphBuffer+0x19C
	dc.w dvGraphBuffer+0x19C
	dc.w dvGraphBuffer+0x1A0
	dc.w dvGraphBuffer+0x1A4
	dc.w dvGraphBuffer+0x1A4
	dc.w dvGraphBuffer+0x1A8
	dc.w dvGraphBuffer+0x1A8
	dc.w dvGraphBuffer+0x1AC
	dc.w dvGraphBuffer+0x1B0
	dc.w dvGraphBuffer+0x1B0
	dc.w dvGraphBuffer+0x1B4
	dc.w dvGraphBuffer+0x1B8
	dc.w dvGraphBuffer+0x1B8
	dc.w dvGraphBuffer+0x1BC
	dc.w dvGraphBuffer+0x1BC
	dc.w dvGraphBuffer+0x1C0
	dc.w dvGraphBuffer+0x1C4
	dc.w dvGraphBuffer+0x1C4
	dc.w dvGraphBuffer+0x1C8
	dc.w dvGraphBuffer+0x1CC
	dc.w dvGraphBuffer+0x1CC
	dc.w dvGraphBuffer+0x1D0
	dc.w dvGraphBuffer+0x1D0
	dc.w dvGraphBuffer+0x1D4
	dc.w dvGraphBuffer+0x1D8
	dc.w dvGraphBuffer+0x1D8
	dc.w dvGraphBuffer+0x1DC
	dc.w dvGraphBuffer+0x1E0
	dc.w dvGraphBuffer+0x1E0
	dc.w dvGraphBuffer+0x1E4
	dc.w dvGraphBuffer+0x1E4
	dc.w dvGraphBuffer+0x1E8
	dc.w dvGraphBuffer+0x1EC
	dc.w dvGraphBuffer+0x1EC
	dc.w dvGraphBuffer+0x1F0
	dc.w dvGraphBuffer+0x1F4
	dc.w dvGraphBuffer+0x1F4
	dc.w dvGraphBuffer+0x1F8
	dc.w dvGraphBuffer+0x1F8
	dc.w dvGraphBuffer+0x1FC
	dc.w dvGraphBuffer+0x200
	dc.w dvGraphBuffer+0x200
	dc.w dvGraphBuffer+0x204
	dc.w dvGraphBuffer+0x208
	dc.w dvGraphBuffer+0x208
	dc.w dvGraphBuffer+0x20C
	dc.w dvGraphBuffer+0x20C
	dc.w dvGraphBuffer+0x210
	dc.w dvGraphBuffer+0x214
	dc.w dvGraphBuffer+0x214
	dc.w dvGraphBuffer+0x218
	dc.w dvGraphBuffer+0x21C
	dc.w dvGraphBuffer+0x21C
	dc.w dvGraphBuffer+0x220
	dc.w dvGraphBuffer+0x220
	dc.w dvGraphBuffer+0x224
	dc.w dvGraphBuffer+0x228
	dc.w dvGraphBuffer+0x228
	dc.w dvGraphBuffer+0x22C
	dc.w dvGraphBuffer+0x230
	dc.w dvGraphBuffer+0x230
	dc.w dvGraphBuffer+0x234
	dc.w dvGraphBuffer+0x234
	dc.w dvGraphBuffer+0x238
	dc.w dvGraphBuffer+0x23C
	dc.w dvGraphBuffer+0x23C
	dc.w dvGraphBuffer+0x240
	dc.w dvGraphBuffer+0x244
	dc.w dvGraphBuffer+0x244
	dc.w dvGraphBuffer+0x248
	dc.w dvGraphBuffer+0x248
	dc.w dvGraphBuffer+0x24C
	dc.w dvGraphBuffer+0x250
	dc.w dvGraphBuffer+0x250
	dc.w dvGraphBuffer+0x254
	dc.w dvGraphBuffer+0x258
	dc.w dvGraphBuffer+0x258
	dc.w dvGraphBuffer+0x25C
	dc.w dvGraphBuffer+0x25C
	dc.w dvGraphBuffer+0x260
	dc.w dvGraphBuffer+0x264
	dc.w dvGraphBuffer+0x264
	dc.w dvGraphBuffer+0x268
	dc.w dvGraphBuffer+0x26C
	dc.w dvGraphBuffer+0x26C
	dc.w dvGraphBuffer+0x270
	dc.w dvGraphBuffer+0x270
	dc.w dvGraphBuffer+0x274
	dc.w dvGraphBuffer+0x278
	dc.w dvGraphBuffer+0x278
	dc.w dvGraphBuffer+0x27C
	dc.w dvGraphBelow2,dvGraphAbove2
dvmGraph_LineLUT2:
	dc.w dvGraphBuffer2+0x0
	dc.w dvGraphBuffer2+0x0
	dc.w dvGraphBuffer2+0x4
	dc.w dvGraphBuffer2+0x4
	dc.w dvGraphBuffer2+0x8
	dc.w dvGraphBuffer2+0xC
	dc.w dvGraphBuffer2+0xC
	dc.w dvGraphBuffer2+0x10
	dc.w dvGraphBuffer2+0x14
	dc.w dvGraphBuffer2+0x14
	dc.w dvGraphBuffer2+0x18
	dc.w dvGraphBuffer2+0x18
	dc.w dvGraphBuffer2+0x1C
	dc.w dvGraphBuffer2+0x20
	dc.w dvGraphBuffer2+0x20
	dc.w dvGraphBuffer2+0x24
	dc.w dvGraphBuffer2+0x28
	dc.w dvGraphBuffer2+0x28
	dc.w dvGraphBuffer2+0x2C
	dc.w dvGraphBuffer2+0x2C
	dc.w dvGraphBuffer2+0x30
	dc.w dvGraphBuffer2+0x34
	dc.w dvGraphBuffer2+0x34
	dc.w dvGraphBuffer2+0x38
	dc.w dvGraphBuffer2+0x3C
	dc.w dvGraphBuffer2+0x3C
	dc.w dvGraphBuffer2+0x40
	dc.w dvGraphBuffer2+0x40
	dc.w dvGraphBuffer2+0x44
	dc.w dvGraphBuffer2+0x48
	dc.w dvGraphBuffer2+0x48
	dc.w dvGraphBuffer2+0x4C
	dc.w dvGraphBuffer2+0x50
	dc.w dvGraphBuffer2+0x50
	dc.w dvGraphBuffer2+0x54
	dc.w dvGraphBuffer2+0x54
	dc.w dvGraphBuffer2+0x58
	dc.w dvGraphBuffer2+0x5C
	dc.w dvGraphBuffer2+0x5C
	dc.w dvGraphBuffer2+0x60
	dc.w dvGraphBuffer2+0x64
	dc.w dvGraphBuffer2+0x64
	dc.w dvGraphBuffer2+0x68
	dc.w dvGraphBuffer2+0x68
	dc.w dvGraphBuffer2+0x6C
	dc.w dvGraphBuffer2+0x70
	dc.w dvGraphBuffer2+0x70
	dc.w dvGraphBuffer2+0x74
	dc.w dvGraphBuffer2+0x78
	dc.w dvGraphBuffer2+0x78
	dc.w dvGraphBuffer2+0x7C
	dc.w dvGraphBuffer2+0x7C
	dc.w dvGraphBuffer2+0x80
	dc.w dvGraphBuffer2+0x84
	dc.w dvGraphBuffer2+0x84
	dc.w dvGraphBuffer2+0x88
	dc.w dvGraphBuffer2+0x8C
	dc.w dvGraphBuffer2+0x8C
	dc.w dvGraphBuffer2+0x90
	dc.w dvGraphBuffer2+0x90
	dc.w dvGraphBuffer2+0x94
	dc.w dvGraphBuffer2+0x98
	dc.w dvGraphBuffer2+0x98
	dc.w dvGraphBuffer2+0x9C
	dc.w dvGraphBuffer2+0xA0
	dc.w dvGraphBuffer2+0xA0
	dc.w dvGraphBuffer2+0xA4
	dc.w dvGraphBuffer2+0xA4
	dc.w dvGraphBuffer2+0xA8
	dc.w dvGraphBuffer2+0xAC
	dc.w dvGraphBuffer2+0xAC
	dc.w dvGraphBuffer2+0xB0
	dc.w dvGraphBuffer2+0xB4
	dc.w dvGraphBuffer2+0xB4
	dc.w dvGraphBuffer2+0xB8
	dc.w dvGraphBuffer2+0xB8
	dc.w dvGraphBuffer2+0xBC
	dc.w dvGraphBuffer2+0xC0
	dc.w dvGraphBuffer2+0xC0
	dc.w dvGraphBuffer2+0xC4
	dc.w dvGraphBuffer2+0xC8
	dc.w dvGraphBuffer2+0xC8
	dc.w dvGraphBuffer2+0xCC
	dc.w dvGraphBuffer2+0xCC
	dc.w dvGraphBuffer2+0xD0
	dc.w dvGraphBuffer2+0xD4
	dc.w dvGraphBuffer2+0xD4
	dc.w dvGraphBuffer2+0xD8
	dc.w dvGraphBuffer2+0xDC
	dc.w dvGraphBuffer2+0xDC
	dc.w dvGraphBuffer2+0xE0
	dc.w dvGraphBuffer2+0xE0
	dc.w dvGraphBuffer2+0xE4
	dc.w dvGraphBuffer2+0xE8
	dc.w dvGraphBuffer2+0xE8
	dc.w dvGraphBuffer2+0xEC
	dc.w dvGraphBuffer2+0xF0
	dc.w dvGraphBuffer2+0xF0
	dc.w dvGraphBuffer2+0xF4
	dc.w dvGraphBuffer2+0xF4
	dc.w dvGraphBuffer2+0xF8
	dc.w dvGraphBuffer2+0xFC
	dc.w dvGraphBuffer2+0xFC
	dc.w dvGraphBuffer2+0x100
	dc.w dvGraphBuffer2+0x104
	dc.w dvGraphBuffer2+0x104
	dc.w dvGraphBuffer2+0x108
	dc.w dvGraphBuffer2+0x108
	dc.w dvGraphBuffer2+0x10C
	dc.w dvGraphBuffer2+0x110
	dc.w dvGraphBuffer2+0x110
	dc.w dvGraphBuffer2+0x114
	dc.w dvGraphBuffer2+0x118
	dc.w dvGraphBuffer2+0x118
	dc.w dvGraphBuffer2+0x11C
	dc.w dvGraphBuffer2+0x11C
	dc.w dvGraphBuffer2+0x120
	dc.w dvGraphBuffer2+0x124
	dc.w dvGraphBuffer2+0x124
	dc.w dvGraphBuffer2+0x128
	dc.w dvGraphBuffer2+0x12C
	dc.w dvGraphBuffer2+0x12C
	dc.w dvGraphBuffer2+0x130
	dc.w dvGraphBuffer2+0x130
	dc.w dvGraphBuffer2+0x134
	dc.w dvGraphBuffer2+0x138
	dc.w dvGraphBuffer2+0x138
	dc.w dvGraphBuffer2+0x13C
	dc.w dvGraphBuffer2+0x140
	dc.w dvGraphBuffer2+0x140
	dc.w dvGraphBuffer2+0x144
	dc.w dvGraphBuffer2+0x144
	dc.w dvGraphBuffer2+0x148
	dc.w dvGraphBuffer2+0x14C
	dc.w dvGraphBuffer2+0x14C
	dc.w dvGraphBuffer2+0x150
	dc.w dvGraphBuffer2+0x154
	dc.w dvGraphBuffer2+0x154
	dc.w dvGraphBuffer2+0x158
	dc.w dvGraphBuffer2+0x158
	dc.w dvGraphBuffer2+0x15C
	dc.w dvGraphBuffer2+0x160
	dc.w dvGraphBuffer2+0x160
	dc.w dvGraphBuffer2+0x164
	dc.w dvGraphBuffer2+0x168
	dc.w dvGraphBuffer2+0x168
	dc.w dvGraphBuffer2+0x16C
	dc.w dvGraphBuffer2+0x16C
	dc.w dvGraphBuffer2+0x170
	dc.w dvGraphBuffer2+0x174
	dc.w dvGraphBuffer2+0x174
	dc.w dvGraphBuffer2+0x178
	dc.w dvGraphBuffer2+0x17C
	dc.w dvGraphBuffer2+0x17C
	dc.w dvGraphBuffer2+0x180
	dc.w dvGraphBuffer2+0x180
	dc.w dvGraphBuffer2+0x184
	dc.w dvGraphBuffer2+0x188
	dc.w dvGraphBuffer2+0x188
	dc.w dvGraphBuffer2+0x18C
	dc.w dvGraphBuffer2+0x190
	dc.w dvGraphBuffer2+0x190
	dc.w dvGraphBuffer2+0x194
	dc.w dvGraphBuffer2+0x194
	dc.w dvGraphBuffer2+0x198
	dc.w dvGraphBuffer2+0x19C
	dc.w dvGraphBuffer2+0x19C
	dc.w dvGraphBuffer2+0x1A0
	dc.w dvGraphBuffer2+0x1A4
	dc.w dvGraphBuffer2+0x1A4
	dc.w dvGraphBuffer2+0x1A8
	dc.w dvGraphBuffer2+0x1A8
	dc.w dvGraphBuffer2+0x1AC
	dc.w dvGraphBuffer2+0x1B0
	dc.w dvGraphBuffer2+0x1B0
	dc.w dvGraphBuffer2+0x1B4
	dc.w dvGraphBuffer2+0x1B8
	dc.w dvGraphBuffer2+0x1B8
	dc.w dvGraphBuffer2+0x1BC
	dc.w dvGraphBuffer2+0x1BC
	dc.w dvGraphBuffer2+0x1C0
	dc.w dvGraphBuffer2+0x1C4
	dc.w dvGraphBuffer2+0x1C4
	dc.w dvGraphBuffer2+0x1C8
	dc.w dvGraphBuffer2+0x1CC
	dc.w dvGraphBuffer2+0x1CC
	dc.w dvGraphBuffer2+0x1D0
	dc.w dvGraphBuffer2+0x1D0
	dc.w dvGraphBuffer2+0x1D4
	dc.w dvGraphBuffer2+0x1D8
	dc.w dvGraphBuffer2+0x1D8
	dc.w dvGraphBuffer2+0x1DC
	dc.w dvGraphBuffer2+0x1E0
	dc.w dvGraphBuffer2+0x1E0
	dc.w dvGraphBuffer2+0x1E4
	dc.w dvGraphBuffer2+0x1E4
	dc.w dvGraphBuffer2+0x1E8
	dc.w dvGraphBuffer2+0x1EC
	dc.w dvGraphBuffer2+0x1EC
	dc.w dvGraphBuffer2+0x1F0
	dc.w dvGraphBuffer2+0x1F4
	dc.w dvGraphBuffer2+0x1F4
	dc.w dvGraphBuffer2+0x1F8
	dc.w dvGraphBuffer2+0x1F8
	dc.w dvGraphBuffer2+0x1FC
	dc.w dvGraphBuffer2+0x200
	dc.w dvGraphBuffer2+0x200
	dc.w dvGraphBuffer2+0x204
	dc.w dvGraphBuffer2+0x208
	dc.w dvGraphBuffer2+0x208
	dc.w dvGraphBuffer2+0x20C
	dc.w dvGraphBuffer2+0x20C
	dc.w dvGraphBuffer2+0x210
	dc.w dvGraphBuffer2+0x214
	dc.w dvGraphBuffer2+0x214
	dc.w dvGraphBuffer2+0x218
	dc.w dvGraphBuffer2+0x21C
	dc.w dvGraphBuffer2+0x21C
	dc.w dvGraphBuffer2+0x220
	dc.w dvGraphBuffer2+0x220
	dc.w dvGraphBuffer2+0x224
	dc.w dvGraphBuffer2+0x228
	dc.w dvGraphBuffer2+0x228
	dc.w dvGraphBuffer2+0x22C
	dc.w dvGraphBuffer2+0x230
	dc.w dvGraphBuffer2+0x230
	dc.w dvGraphBuffer2+0x234
	dc.w dvGraphBuffer2+0x234
	dc.w dvGraphBuffer2+0x238
	dc.w dvGraphBuffer2+0x23C
	dc.w dvGraphBuffer2+0x23C
	dc.w dvGraphBuffer2+0x240
	dc.w dvGraphBuffer2+0x244
	dc.w dvGraphBuffer2+0x244
	dc.w dvGraphBuffer2+0x248
	dc.w dvGraphBuffer2+0x248
	dc.w dvGraphBuffer2+0x24C
	dc.w dvGraphBuffer2+0x250
	dc.w dvGraphBuffer2+0x250
	dc.w dvGraphBuffer2+0x254
	dc.w dvGraphBuffer2+0x258
	dc.w dvGraphBuffer2+0x258
	dc.w dvGraphBuffer2+0x25C
	dc.w dvGraphBuffer2+0x25C
	dc.w dvGraphBuffer2+0x260
	dc.w dvGraphBuffer2+0x264
	dc.w dvGraphBuffer2+0x264
	dc.w dvGraphBuffer2+0x268
	dc.w dvGraphBuffer2+0x26C
	dc.w dvGraphBuffer2+0x26C
	dc.w dvGraphBuffer2+0x270
	dc.w dvGraphBuffer2+0x270
	dc.w dvGraphBuffer2+0x274
	dc.w dvGraphBuffer2+0x278
	dc.w dvGraphBuffer2+0x278
	dc.w dvGraphBuffer2+0x27C
dvShapePointers:
	include "Fractal/Includes/ShapeStrings.asm"
dvLabelTable:
	include "Fractal/Includes/SongLabels.asm"
dvSoundNames:
	include "Fractal/Includes/SongStrings.asm"
dvSoundTables:
	include "Fractal/Includes/SongLists.asm"
	include "Fractal/Includes/Strings.asm"
dvFont:
	binclude "Fractal/Includes/Font.unc"
	even
dvFont_End:
dvFontAlt:
	binclude "Fractal/Includes/FontAlt.unc"
	even
dvFontAlt_End:
dvPiano:
	binclude "Fractal/Includes/Piano.unc"
	even
dvPiano_End:
dvPalette:
	binclude "Fractal/Includes/Font.pal"
	even
dvPalette_End:
dvNullSprites:
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	dc.w 0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000
	endif
